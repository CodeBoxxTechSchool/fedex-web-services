# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.4)
require_relative 'PickupServiceDefinitions.rb'
require 'soap/mapping'

module FedexWebServices; module Soap; module Pickup

module PickupServiceDefinitionsMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsV22 = "http://fedex.com/ws/pickup/v22"

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Address,
    :schema_type => XSD::QName.new(NsV22, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV22, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV22, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "Residential")], [0, 1]],
      ["geographicCoordinates", ["SOAP::SOAPString", XSD::QName.new(NsV22, "GeographicCoordinates")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::AssociatedAccount,
    :schema_type => XSD::QName.new(NsV22, "AssociatedAccount"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::AssociatedAccountNumberType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "AccountNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CancelPickupReply,
    :schema_type => XSD::QName.new(NsV22, "CancelPickupReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Pickup::Notification[]", XSD::QName.new(NsV22, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Message")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CancelPickupRequest,
    :schema_type => XSD::QName.new(NsV22, "CancelPickupRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Pickup::WebAuthenticationDetail", XSD::QName.new(NsV22, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Pickup::ClientDetail", XSD::QName.new(NsV22, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["carrierCode", ["FedexWebServices::Soap::Pickup::CarrierCodeType", XSD::QName.new(NsV22, "CarrierCode")], [0, 1]],
      ["pickupConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PickupConfirmationNumber")], [0, 1]],
      ["scheduledDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "ScheduledDate")], [0, 1]],
      ["endDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "EndDate")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Location")], [0, 1]],
      ["remarks", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Remarks")], [0, 1]],
      ["shippingChargesPayment", ["FedexWebServices::Soap::Pickup::Payment", XSD::QName.new(NsV22, "ShippingChargesPayment")], [0, 1]],
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Reason")], [0, 1]],
      ["contactName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ContactName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneExtension")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ClientDetail,
    :schema_type => XSD::QName.new(NsV22, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "MeterNumber")]],
      ["meterInstance", ["SOAP::SOAPString", XSD::QName.new(NsV22, "MeterInstance")], [0, 1]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "IntegratorId")], [0, 1]],
      ["region", ["FedexWebServices::Soap::Pickup::ExpressRegionCode", XSD::QName.new(NsV22, "Region")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Pickup::Localization", XSD::QName.new(NsV22, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CodAddTransportationChargesDetail,
    :schema_type => XSD::QName.new(NsV22, "CodAddTransportationChargesDetail"),
    :schema_element => [
      ["rateTypeBasis", ["FedexWebServices::Soap::Pickup::RateTypeBasisType", XSD::QName.new(NsV22, "RateTypeBasis")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::Pickup::CodAddTransportationChargeBasisType", XSD::QName.new(NsV22, "ChargeBasis")], [0, 1]],
      ["chargeBasisLevel", ["FedexWebServices::Soap::Pickup::ChargeBasisLevelType", XSD::QName.new(NsV22, "ChargeBasisLevel")], [0, 1]],
      ["rateLevelBasis", ["FedexWebServices::Soap::Pickup::RateLevelBasisType", XSD::QName.new(NsV22, "RateLevelBasis")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CodDetail,
    :schema_type => XSD::QName.new(NsV22, "CodDetail"),
    :schema_element => [
      ["codCollectionAmount", ["FedexWebServices::Soap::Pickup::Money", XSD::QName.new(NsV22, "CodCollectionAmount")], [0, 1]],
      ["addTransportationChargesDetail", ["FedexWebServices::Soap::Pickup::CodAddTransportationChargesDetail", XSD::QName.new(NsV22, "AddTransportationChargesDetail")], [0, 1]],
      ["collectionType", ["FedexWebServices::Soap::Pickup::CodCollectionType", XSD::QName.new(NsV22, "CollectionType")], [0, 1]],
      ["codRecipient", ["FedexWebServices::Soap::Pickup::Party", XSD::QName.new(NsV22, "CodRecipient")], [0, 1]],
      ["financialInstitutionContactAndAddress", ["FedexWebServices::Soap::Pickup::ContactAndAddress", XSD::QName.new(NsV22, "FinancialInstitutionContactAndAddress")], [0, 1]],
      ["remitToName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "RemitToName")], [0, 1]],
      ["referenceIndicator", ["FedexWebServices::Soap::Pickup::CodReturnReferenceIndicatorType", XSD::QName.new(NsV22, "ReferenceIndicator")], [0, 1]],
      ["returnTrackingId", ["FedexWebServices::Soap::Pickup::TrackingId", XSD::QName.new(NsV22, "ReturnTrackingId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CompletedFreightPickupDetail,
    :schema_type => XSD::QName.new(NsV22, "CompletedFreightPickupDetail"),
    :schema_element => [
      ["origin", ["FedexWebServices::Soap::Pickup::FreightServiceCenterDetail", XSD::QName.new(NsV22, "Origin")], [0, 1]],
      ["lineItems", ["FedexWebServices::Soap::Pickup::CompletedFreightPickupLineItem[]", XSD::QName.new(NsV22, "LineItems")], [0, nil]],
      ["totalPieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "TotalPieces")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "TotalWeight")], [0, 1]],
      ["totalHandlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "TotalHandlingUnits")], [0, 1]],
      ["status", ["FedexWebServices::Soap::Pickup::PickupEventType", XSD::QName.new(NsV22, "Status")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CompletedFreightPickupLineItem,
    :schema_type => XSD::QName.new(NsV22, "CompletedFreightPickupLineItem"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "SequenceNumber")], [0, 1]],
      ["destination", ["FedexWebServices::Soap::Pickup::FreightServiceCenterDetail", XSD::QName.new(NsV22, "Destination")], [0, 1]],
      ["totalTravelTime", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "TotalTravelTime")], [0, 1]],
      ["etaDeliveryTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "EtaDeliveryTimestamp")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Contact,
    :schema_type => XSD::QName.new(NsV22, "Contact"),
    :schema_element => [
      ["contactId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ContactId")], [0, 1]],
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV22, "EMailAddress")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ContactAndAddress,
    :schema_type => XSD::QName.new(NsV22, "ContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::Pickup::Contact", XSD::QName.new(NsV22, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Pickup::Address", XSD::QName.new(NsV22, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CreatePickupReply,
    :schema_type => XSD::QName.new(NsV22, "CreatePickupReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Pickup::Notification[]", XSD::QName.new(NsV22, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["pickupConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PickupConfirmationNumber")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Location")], [0, 1]],
      ["messageCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "MessageCode")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Message")], [0, 1]],
      ["pRPControlNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PRPControlNumber")], [0, 1]],
      ["lastAccessTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "LastAccessTime")], [0, 1]],
      ["completedFreightPickupDetail", ["FedexWebServices::Soap::Pickup::CompletedFreightPickupDetail", XSD::QName.new(NsV22, "CompletedFreightPickupDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CreatePickupRequest,
    :schema_type => XSD::QName.new(NsV22, "CreatePickupRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Pickup::WebAuthenticationDetail", XSD::QName.new(NsV22, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Pickup::ClientDetail", XSD::QName.new(NsV22, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["associatedAccountNumber", ["FedexWebServices::Soap::Pickup::AssociatedAccount", XSD::QName.new(NsV22, "AssociatedAccountNumber")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TrackingNumber")], [0, 1]],
      ["originDetail", ["FedexWebServices::Soap::Pickup::PickupOriginDetail", XSD::QName.new(NsV22, "OriginDetail")], [0, 1]],
      ["pickupServiceCategory", ["FedexWebServices::Soap::Pickup::PickupServiceCategoryType", XSD::QName.new(NsV22, "PickupServiceCategory")], [0, 1]],
      ["freightPickupDetail", ["FedexWebServices::Soap::Pickup::FreightPickupDetail", XSD::QName.new(NsV22, "FreightPickupDetail")], [0, 1]],
      ["expressFreightDetail", ["FedexWebServices::Soap::Pickup::ExpressFreightPickupDetail", XSD::QName.new(NsV22, "ExpressFreightDetail")], [0, 1]],
      ["packageCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "PackageCount")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "TotalWeight")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Pickup::CarrierCodeType", XSD::QName.new(NsV22, "CarrierCode")], [0, 1]],
      ["oversizePackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "OversizePackageCount")], [0, 1]],
      ["remarks", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Remarks")], [0, 1]],
      ["commodityDescription", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CommodityDescription")], [0, 1]],
      ["countryRelationship", ["FedexWebServices::Soap::Pickup::CountryRelationshipType", XSD::QName.new(NsV22, "CountryRelationship")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CustomDeliveryWindowDetail,
    :schema_type => XSD::QName.new(NsV22, "CustomDeliveryWindowDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::CustomDeliveryWindowType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["requestTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "RequestTime")], [0, 1]],
      ["requestRange", ["FedexWebServices::Soap::Pickup::DateRange", XSD::QName.new(NsV22, "RequestRange")], [0, 1]],
      ["requestDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "RequestDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DateRange,
    :schema_type => XSD::QName.new(NsV22, "DateRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "Ends")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DeliveryOnInvoiceAcceptanceDetail,
    :schema_type => XSD::QName.new(NsV22, "DeliveryOnInvoiceAcceptanceDetail"),
    :schema_element => [
      ["recipient", ["FedexWebServices::Soap::Pickup::Party", XSD::QName.new(NsV22, "Recipient")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Pickup::TrackingId", XSD::QName.new(NsV22, "TrackingId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DetentionDetail,
    :schema_type => XSD::QName.new(NsV22, "DetentionDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Dimensions,
    :schema_type => XSD::QName.new(NsV22, "Dimensions"),
    :schema_element => [
      ["length", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "Length")], [0, 1]],
      ["width", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "Width")], [0, 1]],
      ["height", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "Height")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Pickup::LinearUnits", XSD::QName.new(NsV22, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Distance,
    :schema_type => XSD::QName.new(NsV22, "Distance"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV22, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Pickup::DistanceUnits", XSD::QName.new(NsV22, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EMailDetail,
    :schema_type => XSD::QName.new(NsV22, "EMailDetail"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV22, "EmailAddress")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EMailLabelDetail,
    :schema_type => XSD::QName.new(NsV22, "EMailLabelDetail"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Message")], [0, 1]],
      ["recipients", ["FedexWebServices::Soap::Pickup::EMailRecipient[]", XSD::QName.new(NsV22, "Recipients")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EMailRecipient,
    :schema_type => XSD::QName.new(NsV22, "EMailRecipient"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV22, "EmailAddress")], [0, 1]],
      ["role", ["FedexWebServices::Soap::Pickup::AccessorRoleType", XSD::QName.new(NsV22, "Role")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::Pickup::EmailOptionsRequested", XSD::QName.new(NsV22, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Pickup::Localization", XSD::QName.new(NsV22, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EmailOptionsRequested,
    :schema_type => XSD::QName.new(NsV22, "EmailOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Pickup::EmailOptionType[]", XSD::QName.new(NsV22, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EtdDetail,
    :schema_type => XSD::QName.new(NsV22, "EtdDetail"),
    :schema_element => [
      ["confirmation", ["FedexWebServices::Soap::Pickup::EtdConfirmationType", XSD::QName.new(NsV22, "Confirmation")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::Pickup::EtdAttributeType[]", XSD::QName.new(NsV22, "Attributes")], [0, nil]],
      ["requestedDocumentCopies", ["FedexWebServices::Soap::Pickup::RequestedShippingDocumentType[]", XSD::QName.new(NsV22, "RequestedDocumentCopies")], [0, nil]],
      ["documents", ["FedexWebServices::Soap::Pickup::UploadDocumentDetail[]", XSD::QName.new(NsV22, "Documents")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::Pickup::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV22, "DocumentReferences")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ExpressFreightPickupDetail,
    :schema_type => XSD::QName.new(NsV22, "ExpressFreightPickupDetail"),
    :schema_element => [
      ["service", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Service")], [0, 1]],
      ["bookingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "BookingNumber")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Pickup::Dimensions", XSD::QName.new(NsV22, "Dimensions")], [0, 1]],
      ["truckType", ["FedexWebServices::Soap::Pickup::TruckType", XSD::QName.new(NsV22, "TruckType")], [0, 1]],
      ["trailerSize", ["FedexWebServices::Soap::Pickup::TrailerSizeType", XSD::QName.new(NsV22, "TrailerSize")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ExtraLaborDetail,
    :schema_type => XSD::QName.new(NsV22, "ExtraLaborDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FaxDetail,
    :schema_type => XSD::QName.new(NsV22, "FaxDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FlatbedTrailerDetail,
    :schema_type => XSD::QName.new(NsV22, "FlatbedTrailerDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Pickup::FlatbedTrailerOption[]", XSD::QName.new(NsV22, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightGuaranteeDetail,
    :schema_type => XSD::QName.new(NsV22, "FreightGuaranteeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::FreightGuaranteeType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "Date")], [0, 1]],
      ["time", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "Time")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightPickupDetail,
    :schema_type => XSD::QName.new(NsV22, "FreightPickupDetail"),
    :schema_element => [
      ["approvedBy", ["FedexWebServices::Soap::Pickup::Contact", XSD::QName.new(NsV22, "ApprovedBy")], [0, 1]],
      ["payment", ["FedexWebServices::Soap::Pickup::PaymentType", XSD::QName.new(NsV22, "Payment")], [0, 1]],
      ["role", ["FedexWebServices::Soap::Pickup::FreightShipmentRoleType", XSD::QName.new(NsV22, "Role")], [0, 1]],
      ["alternateBilling", ["FedexWebServices::Soap::Pickup::Party", XSD::QName.new(NsV22, "AlternateBilling")], [0, 1]],
      ["submittedBy", ["FedexWebServices::Soap::Pickup::Contact", XSD::QName.new(NsV22, "SubmittedBy")], [0, 1]],
      ["lineItems", ["FedexWebServices::Soap::Pickup::FreightPickupLineItem[]", XSD::QName.new(NsV22, "LineItems")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightPickupLineItem,
    :schema_type => XSD::QName.new(NsV22, "FreightPickupLineItem"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TrackingNumber")], [0, 1]],
      ["service", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Service")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "SequenceNumber")], [0, 1]],
      ["destination", ["FedexWebServices::Soap::Pickup::Address", XSD::QName.new(NsV22, "Destination")], [0, 1]],
      ["packaging", ["FedexWebServices::Soap::Pickup::PhysicalPackagingType", XSD::QName.new(NsV22, "Packaging")], [0, 1]],
      ["pieces", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "Pieces")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "Weight")], [0, 1]],
      ["totalHandlingUnits", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "TotalHandlingUnits")], [0, 1]],
      ["purchaseOrderNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PurchaseOrderNumber")], [0, 1]],
      ["justOneMore", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "JustOneMore")], [0, 1]],
      ["specialServicesRequested", ["FedexWebServices::Soap::Pickup::ShipmentSpecialServicesRequested", XSD::QName.new(NsV22, "SpecialServicesRequested")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightServiceCenterDetail,
    :schema_type => XSD::QName.new(NsV22, "FreightServiceCenterDetail"),
    :schema_element => [
      ["interlineCarrierCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "InterlineCarrierCode")], [0, 1]],
      ["interlineCarrierName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "InterlineCarrierName")], [0, 1]],
      ["additionalDays", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "AdditionalDays")], [0, 1]],
      ["localService", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LocalService")], [0, 1]],
      ["localDistance", ["FedexWebServices::Soap::Pickup::Distance", XSD::QName.new(NsV22, "LocalDistance")], [0, 1]],
      ["localDuration", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "LocalDuration")], [0, 1]],
      ["localServiceScheduling", ["FedexWebServices::Soap::Pickup::FreightServiceSchedulingType", XSD::QName.new(NsV22, "LocalServiceScheduling")], [0, 1]],
      ["limitedServiceDays", ["FedexWebServices::Soap::Pickup::DayOfWeekType[]", XSD::QName.new(NsV22, "LimitedServiceDays")], [0, nil]],
      ["gatewayLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "GatewayLocationId")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Location")], [0, 1]],
      ["contactAndAddress", ["FedexWebServices::Soap::Pickup::ContactAndAddress", XSD::QName.new(NsV22, "ContactAndAddress")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::HoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV22, "HoldAtLocationDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]],
      ["locationContactAndAddress", ["FedexWebServices::Soap::Pickup::ContactAndAddress", XSD::QName.new(NsV22, "LocationContactAndAddress")], [0, 1]],
      ["locationType", ["FedexWebServices::Soap::Pickup::FedExLocationType", XSD::QName.new(NsV22, "LocationType")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "LocationNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::HomeDeliveryPremiumDetail,
    :schema_type => XSD::QName.new(NsV22, "HomeDeliveryPremiumDetail"),
    :schema_element => [
      ["homeDeliveryPremiumType", ["FedexWebServices::Soap::Pickup::HomeDeliveryPremiumType", XSD::QName.new(NsV22, "HomeDeliveryPremiumType")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "Date")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::InternationalControlledExportDetail,
    :schema_type => XSD::QName.new(NsV22, "InternationalControlledExportDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::InternationalControlledExportType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["foreignTradeZoneCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ForeignTradeZoneCode")], [0, 1]],
      ["entryNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "EntryNumber")], [0, 1]],
      ["licenseOrPermitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LicenseOrPermitNumber")], [0, 1]],
      ["licenseOrPermitExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "LicenseOrPermitExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::InternationalTrafficInArmsRegulationsDetail,
    :schema_type => XSD::QName.new(NsV22, "InternationalTrafficInArmsRegulationsDetail"),
    :schema_element => [
      ["licenseOrExemptionNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LicenseOrExemptionNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Localization,
    :schema_type => XSD::QName.new(NsV22, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LocaleCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::MarkingOrTaggingDetail,
    :schema_type => XSD::QName.new(NsV22, "MarkingOrTaggingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "Count")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Money,
    :schema_type => XSD::QName.new(NsV22, "Money"),
    :schema_element => [
      ["currency", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Currency")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV22, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NonBusinessTimeDetail,
    :schema_type => XSD::QName.new(NsV22, "NonBusinessTimeDetail"),
    :schema_element => [
      ["personDays", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "PersonDays")], [0, 1]],
      ["personHours", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "PersonHours")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Notification,
    :schema_type => XSD::QName.new(NsV22, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "Severity")], [0, 1]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Source")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::Pickup::NotificationParameter[]", XSD::QName.new(NsV22, "MessageParameters")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationDetail,
    :schema_type => XSD::QName.new(NsV22, "NotificationDetail"),
    :schema_element => [
      ["notificationType", ["FedexWebServices::Soap::Pickup::NotificationType", XSD::QName.new(NsV22, "NotificationType")], [0, 1]],
      ["emailDetail", ["FedexWebServices::Soap::Pickup::EMailDetail", XSD::QName.new(NsV22, "EmailDetail")], [0, 1]],
      ["faxDetail", ["FedexWebServices::Soap::Pickup::FaxDetail", XSD::QName.new(NsV22, "FaxDetail")], [0, 1]],
      ["smsDetail", ["FedexWebServices::Soap::Pickup::SmsDetail", XSD::QName.new(NsV22, "SmsDetail")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Pickup::Localization", XSD::QName.new(NsV22, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationParameter,
    :schema_type => XSD::QName.new(NsV22, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PalletShrinkwrapDetail,
    :schema_type => XSD::QName.new(NsV22, "PalletShrinkwrapDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "PalletCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PalletsProvidedDetail,
    :schema_type => XSD::QName.new(NsV22, "PalletsProvidedDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "PalletCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Party,
    :schema_type => XSD::QName.new(NsV22, "Party"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "AccountNumber")], [0, 1]],
      ["tins", ["FedexWebServices::Soap::Pickup::TaxpayerIdentification[]", XSD::QName.new(NsV22, "Tins")], [0, nil]],
      ["contact", ["FedexWebServices::Soap::Pickup::Contact", XSD::QName.new(NsV22, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Pickup::Address", XSD::QName.new(NsV22, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Payment,
    :schema_type => XSD::QName.new(NsV22, "Payment"),
    :schema_element => [
      ["paymentType", ["FedexWebServices::Soap::Pickup::PaymentType", XSD::QName.new(NsV22, "PaymentType")], [0, 1]],
      ["payor", ["FedexWebServices::Soap::Pickup::Payor", XSD::QName.new(NsV22, "Payor")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Pickup::Money", XSD::QName.new(NsV22, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Payor,
    :schema_type => XSD::QName.new(NsV22, "Payor"),
    :schema_element => [
      ["responsibleParty", ["FedexWebServices::Soap::Pickup::Party", XSD::QName.new(NsV22, "ResponsibleParty")], [0, 1]],
      ["associatedAccounts", ["FedexWebServices::Soap::Pickup::AssociatedAccount[]", XSD::QName.new(NsV22, "AssociatedAccounts")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PendingShipmentDetail,
    :schema_type => XSD::QName.new(NsV22, "PendingShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::PendingShipmentType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "ExpirationDate")], [0, 1]],
      ["emailLabelDetail", ["FedexWebServices::Soap::Pickup::EMailLabelDetail", XSD::QName.new(NsV22, "EmailLabelDetail")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Pickup::PendingShipmentProcessingOptionsRequested", XSD::QName.new(NsV22, "ProcessingOptions")], [0, 1]],
      ["recommendedDocumentSpecification", ["FedexWebServices::Soap::Pickup::RecommendedDocumentSpecification", XSD::QName.new(NsV22, "RecommendedDocumentSpecification")], [0, 1]],
      ["documentReferences", ["FedexWebServices::Soap::Pickup::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV22, "DocumentReferences")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PendingShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV22, "PendingShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Pickup::PendingShipmentProcessingOptionType[]", XSD::QName.new(NsV22, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupAvailabilityReply,
    :schema_type => XSD::QName.new(NsV22, "PickupAvailabilityReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Pickup::Notification[]", XSD::QName.new(NsV22, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["requestTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "RequestTimestamp")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Pickup::PickupScheduleOption[]", XSD::QName.new(NsV22, "Options")], [0, nil]],
      ["closeTimeType", ["FedexWebServices::Soap::Pickup::CloseTimeType", XSD::QName.new(NsV22, "CloseTimeType")], [0, 1]],
      ["closeTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "CloseTime")], [0, 1]],
      ["openTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "OpenTime")], [0, 1]],
      ["localTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "LocalTime")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupAvailabilityRequest,
    :schema_type => XSD::QName.new(NsV22, "PickupAvailabilityRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Pickup::WebAuthenticationDetail", XSD::QName.new(NsV22, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Pickup::ClientDetail", XSD::QName.new(NsV22, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["pickupType", ["FedexWebServices::Soap::Pickup::PickupType", XSD::QName.new(NsV22, "PickupType")], [0, 1]],
      ["accountNumber", ["FedexWebServices::Soap::Pickup::AssociatedAccount", XSD::QName.new(NsV22, "AccountNumber")], [0, 1]],
      ["pickupAddress", ["FedexWebServices::Soap::Pickup::Address", XSD::QName.new(NsV22, "PickupAddress")], [0, 1]],
      ["pickupRequestType", ["FedexWebServices::Soap::Pickup::PickupRequestType[]", XSD::QName.new(NsV22, "PickupRequestType")], [0, nil]],
      ["dispatchDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "DispatchDate")], [0, 1]],
      ["numberOfBusinessDays", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "NumberOfBusinessDays")], [0, 1]],
      ["packageReadyTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "PackageReadyTime")], [0, 1]],
      ["customerCloseTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "CustomerCloseTime")], [0, 1]],
      ["carriers", ["FedexWebServices::Soap::Pickup::CarrierCodeType[]", XSD::QName.new(NsV22, "Carriers")], [0, nil]],
      ["shipmentAttributes", ["FedexWebServices::Soap::Pickup::PickupShipmentAttributes", XSD::QName.new(NsV22, "ShipmentAttributes")], [0, 1]],
      ["packageDetails", ["FedexWebServices::Soap::Pickup::RequestedPickupPackageDetail[]", XSD::QName.new(NsV22, "PackageDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupDangerousGoodsDetail,
    :schema_type => XSD::QName.new(NsV22, "PickupDangerousGoodsDetail"),
    :schema_element => [
      ["regulation", ["FedexWebServices::Soap::Pickup::HazardousCommodityRegulationType", XSD::QName.new(NsV22, "Regulation")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::Pickup::DangerousGoodsAccessibilityType", XSD::QName.new(NsV22, "Accessibility")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Pickup::HazardousCommodityOptionType[]", XSD::QName.new(NsV22, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupOriginDetail,
    :schema_type => XSD::QName.new(NsV22, "PickupOriginDetail"),
    :schema_element => [
      ["useAccountAddress", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "UseAccountAddress")], [0, 1]],
      ["addressId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "AddressId")], [0, 1]],
      ["pickupLocation", ["FedexWebServices::Soap::Pickup::ContactAndAddress", XSD::QName.new(NsV22, "PickupLocation")], [0, 1]],
      ["packageLocation", ["FedexWebServices::Soap::Pickup::PickupBuildingLocationType", XSD::QName.new(NsV22, "PackageLocation")], [0, 1]],
      ["buildingPart", ["FedexWebServices::Soap::Pickup::BuildingPartCode", XSD::QName.new(NsV22, "BuildingPart")], [0, 1]],
      ["buildingPartDescription", ["SOAP::SOAPString", XSD::QName.new(NsV22, "BuildingPartDescription")], [0, 1]],
      ["readyTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "ReadyTimestamp")], [0, 1]],
      ["companyCloseTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "CompanyCloseTime")], [0, 1]],
      ["stayLate", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "StayLate")], [0, 1]],
      ["pickupDateType", ["FedexWebServices::Soap::Pickup::PickupRequestType", XSD::QName.new(NsV22, "PickupDateType")], [0, 1]],
      ["lastAccessTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "LastAccessTime")], [0, 1]],
      ["geographicalPostalCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "GeographicalPostalCode")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Location")], [0, 1]],
      ["deleteLastUsed", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "DeleteLastUsed")], [0, 1]],
      ["suppliesRequested", ["SOAP::SOAPString", XSD::QName.new(NsV22, "SuppliesRequested")], [0, 1]],
      ["earlyPickup", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "EarlyPickup")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupPackageSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV22, "PickupPackageSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV22, "SpecialServiceTypes")], [0, nil]],
      ["dangerousGoodsDetail", ["FedexWebServices::Soap::Pickup::PickupDangerousGoodsDetail", XSD::QName.new(NsV22, "DangerousGoodsDetail")], [0, 1]],
      ["priorityAlertDetail", ["FedexWebServices::Soap::Pickup::PriorityAlertDetail", XSD::QName.new(NsV22, "PriorityAlertDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupScheduleOption,
    :schema_type => XSD::QName.new(NsV22, "PickupScheduleOption"),
    :schema_element => [
      ["carrier", ["FedexWebServices::Soap::Pickup::CarrierCodeType", XSD::QName.new(NsV22, "Carrier")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Description")], [0, 1]],
      ["scheduleDay", ["FedexWebServices::Soap::Pickup::PickupRequestType", XSD::QName.new(NsV22, "ScheduleDay")], [0, 1]],
      ["available", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "Available")], [0, 1]],
      ["pickupDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "PickupDate")], [0, 1]],
      ["cutOffTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "CutOffTime")], [0, 1]],
      ["accessTime", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "AccessTime")], [0, 1]],
      ["residentialAvailable", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "ResidentialAvailable")], [0, 1]],
      ["countryRelationship", ["FedexWebServices::Soap::Pickup::CountryRelationshipType", XSD::QName.new(NsV22, "CountryRelationship")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupShipmentAttributes,
    :schema_type => XSD::QName.new(NsV22, "PickupShipmentAttributes"),
    :schema_element => [
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ServiceType")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PackagingType")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Pickup::Dimensions", XSD::QName.new(NsV22, "Dimensions")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "Weight")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PriorityAlertDetail,
    :schema_type => XSD::QName.new(NsV22, "PriorityAlertDetail"),
    :schema_element => [
      ["enhancementTypes", ["FedexWebServices::Soap::Pickup::PriorityAlertEnhancementType[]", XSD::QName.new(NsV22, "EnhancementTypes")], [0, nil]],
      ["content", ["SOAP::SOAPString[]", XSD::QName.new(NsV22, "Content")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RecommendedDocumentSpecification,
    :schema_type => XSD::QName.new(NsV22, "RecommendedDocumentSpecification"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::Pickup::RecommendedDocumentType[]", XSD::QName.new(NsV22, "Types")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RequestedPickupPackageDetail,
    :schema_type => XSD::QName.new(NsV22, "RequestedPickupPackageDetail"),
    :schema_element => [
      ["packageSpecialServices", ["FedexWebServices::Soap::Pickup::PickupPackageSpecialServicesRequested", XSD::QName.new(NsV22, "PackageSpecialServices")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "Weight")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ReturnAssociationDetail,
    :schema_type => XSD::QName.new(NsV22, "ReturnAssociationDetail"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TrackingNumber")], [0, 1]],
      ["shipDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "ShipDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ReturnEMailDetail,
    :schema_type => XSD::QName.new(NsV22, "ReturnEMailDetail"),
    :schema_element => [
      ["merchantPhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "MerchantPhoneNumber")], [0, 1]],
      ["allowedSpecialServices", ["FedexWebServices::Soap::Pickup::ReturnEMailAllowedSpecialServiceType[]", XSD::QName.new(NsV22, "AllowedSpecialServices")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ReturnShipmentDetail,
    :schema_type => XSD::QName.new(NsV22, "ReturnShipmentDetail"),
    :schema_element => [
      ["returnType", ["FedexWebServices::Soap::Pickup::ReturnType", XSD::QName.new(NsV22, "ReturnType")], [0, 1]],
      ["rma", ["FedexWebServices::Soap::Pickup::Rma", XSD::QName.new(NsV22, "Rma")], [0, 1]],
      ["returnEMailDetail", ["FedexWebServices::Soap::Pickup::ReturnEMailDetail", XSD::QName.new(NsV22, "ReturnEMailDetail")], [0, 1]],
      ["returnAssociation", ["FedexWebServices::Soap::Pickup::ReturnAssociationDetail", XSD::QName.new(NsV22, "ReturnAssociation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Rma,
    :schema_type => XSD::QName.new(NsV22, "Rma"),
    :schema_element => [
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Reason")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentAssemblyDetail,
    :schema_type => XSD::QName.new(NsV22, "ShipmentAssemblyDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "Weight")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentDryIceDetail,
    :schema_type => XSD::QName.new(NsV22, "ShipmentDryIceDetail"),
    :schema_element => [
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "PackageCount")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "TotalWeight")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Pickup::ShipmentDryIceProcessingOptionsRequested", XSD::QName.new(NsV22, "ProcessingOptions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentDryIceProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV22, "ShipmentDryIceProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Pickup::ShipmentDryIceProcessingOptionType[]", XSD::QName.new(NsV22, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentEventNotificationDetail,
    :schema_type => XSD::QName.new(NsV22, "ShipmentEventNotificationDetail"),
    :schema_element => [
      ["aggregationType", ["FedexWebServices::Soap::Pickup::ShipmentNotificationAggregationType", XSD::QName.new(NsV22, "AggregationType")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PersonalMessage")], [0, 1]],
      ["eventNotifications", ["FedexWebServices::Soap::Pickup::ShipmentEventNotificationSpecification[]", XSD::QName.new(NsV22, "EventNotifications")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentEventNotificationSpecification,
    :schema_type => XSD::QName.new(NsV22, "ShipmentEventNotificationSpecification"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::Pickup::ShipmentNotificationRoleType", XSD::QName.new(NsV22, "Role")], [0, 1]],
      ["events", ["FedexWebServices::Soap::Pickup::NotificationEventType[]", XSD::QName.new(NsV22, "Events")], [0, nil]],
      ["notificationDetail", ["FedexWebServices::Soap::Pickup::NotificationDetail", XSD::QName.new(NsV22, "NotificationDetail")], [0, 1]],
      ["formatSpecification", ["FedexWebServices::Soap::Pickup::ShipmentNotificationFormatSpecification", XSD::QName.new(NsV22, "FormatSpecification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentNotificationFormatSpecification,
    :schema_type => XSD::QName.new(NsV22, "ShipmentNotificationFormatSpecification"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::NotificationFormatType", XSD::QName.new(NsV22, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV22, "ShipmentSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV22, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::Pickup::CodDetail", XSD::QName.new(NsV22, "CodDetail")], [0, 1]],
      ["deliveryOnInvoiceAcceptanceDetail", ["FedexWebServices::Soap::Pickup::DeliveryOnInvoiceAcceptanceDetail", XSD::QName.new(NsV22, "DeliveryOnInvoiceAcceptanceDetail")], [0, 1]],
      ["holdAtLocationDetail", ["FedexWebServices::Soap::Pickup::HoldAtLocationDetail", XSD::QName.new(NsV22, "HoldAtLocationDetail")], [0, 1]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::Pickup::ShipmentEventNotificationDetail", XSD::QName.new(NsV22, "EventNotificationDetail")], [0, 1]],
      ["returnShipmentDetail", ["FedexWebServices::Soap::Pickup::ReturnShipmentDetail", XSD::QName.new(NsV22, "ReturnShipmentDetail")], [0, 1]],
      ["pendingShipmentDetail", ["FedexWebServices::Soap::Pickup::PendingShipmentDetail", XSD::QName.new(NsV22, "PendingShipmentDetail")], [0, 1]],
      ["internationalControlledExportDetail", ["FedexWebServices::Soap::Pickup::InternationalControlledExportDetail", XSD::QName.new(NsV22, "InternationalControlledExportDetail")], [0, 1]],
      ["internationalTrafficInArmsRegulationsDetail", ["FedexWebServices::Soap::Pickup::InternationalTrafficInArmsRegulationsDetail", XSD::QName.new(NsV22, "InternationalTrafficInArmsRegulationsDetail")], [0, 1]],
      ["shipmentDryIceDetail", ["FedexWebServices::Soap::Pickup::ShipmentDryIceDetail", XSD::QName.new(NsV22, "ShipmentDryIceDetail")], [0, 1]],
      ["homeDeliveryPremiumDetail", ["FedexWebServices::Soap::Pickup::HomeDeliveryPremiumDetail", XSD::QName.new(NsV22, "HomeDeliveryPremiumDetail")], [0, 1]],
      ["flatbedTrailerDetail", ["FedexWebServices::Soap::Pickup::FlatbedTrailerDetail", XSD::QName.new(NsV22, "FlatbedTrailerDetail")], [0, 1]],
      ["freightGuaranteeDetail", ["FedexWebServices::Soap::Pickup::FreightGuaranteeDetail", XSD::QName.new(NsV22, "FreightGuaranteeDetail")], [0, 1]],
      ["etdDetail", ["FedexWebServices::Soap::Pickup::EtdDetail", XSD::QName.new(NsV22, "EtdDetail")], [0, 1]],
      ["extraLaborDetail", ["FedexWebServices::Soap::Pickup::ExtraLaborDetail", XSD::QName.new(NsV22, "ExtraLaborDetail")], [0, 1]],
      ["palletShrinkwrapDetail", ["FedexWebServices::Soap::Pickup::PalletShrinkwrapDetail", XSD::QName.new(NsV22, "PalletShrinkwrapDetail")], [0, 1]],
      ["palletsProvidedDetail", ["FedexWebServices::Soap::Pickup::PalletsProvidedDetail", XSD::QName.new(NsV22, "PalletsProvidedDetail")], [0, 1]],
      ["detentionDetail", ["FedexWebServices::Soap::Pickup::DetentionDetail", XSD::QName.new(NsV22, "DetentionDetail")], [0, 1]],
      ["markingOrTaggingDetail", ["FedexWebServices::Soap::Pickup::MarkingOrTaggingDetail", XSD::QName.new(NsV22, "MarkingOrTaggingDetail")], [0, 1]],
      ["nonBusinessTimeDetail", ["FedexWebServices::Soap::Pickup::NonBusinessTimeDetail", XSD::QName.new(NsV22, "NonBusinessTimeDetail")], [0, 1]],
      ["shipmentAssemblyDetail", ["FedexWebServices::Soap::Pickup::ShipmentAssemblyDetail", XSD::QName.new(NsV22, "ShipmentAssemblyDetail")], [0, 1]],
      ["sortAndSegregateDetail", ["FedexWebServices::Soap::Pickup::SortAndSegregateDetail", XSD::QName.new(NsV22, "SortAndSegregateDetail")], [0, 1]],
      ["specialEquipmentDetail", ["FedexWebServices::Soap::Pickup::SpecialEquipmentDetail", XSD::QName.new(NsV22, "SpecialEquipmentDetail")], [0, 1]],
      ["storageDetail", ["FedexWebServices::Soap::Pickup::StorageDetail", XSD::QName.new(NsV22, "StorageDetail")], [0, 1]],
      ["weighingDetail", ["FedexWebServices::Soap::Pickup::WeighingDetail", XSD::QName.new(NsV22, "WeighingDetail")], [0, 1]],
      ["customDeliveryWindowDetail", ["FedexWebServices::Soap::Pickup::CustomDeliveryWindowDetail", XSD::QName.new(NsV22, "CustomDeliveryWindowDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::SmsDetail,
    :schema_type => XSD::QName.new(NsV22, "SmsDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]],
      ["phoneNumberCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumberCountryCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::SortAndSegregateDetail,
    :schema_type => XSD::QName.new(NsV22, "SortAndSegregateDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "Weight")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::SpecialEquipmentDetail,
    :schema_type => XSD::QName.new(NsV22, "SpecialEquipmentDetail"),
    :schema_element => [
      ["lineItems", ["FedexWebServices::Soap::Pickup::SpecialEquipmentLineItem[]", XSD::QName.new(NsV22, "LineItems")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::SpecialEquipmentLineItem,
    :schema_type => XSD::QName.new(NsV22, "SpecialEquipmentLineItem"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::SpecialEquipmentType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::StorageDetail,
    :schema_type => XSD::QName.new(NsV22, "StorageDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "Duration")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TaxpayerIdentification,
    :schema_type => XSD::QName.new(NsV22, "TaxpayerIdentification"),
    :schema_element => [
      ["tinType", ["FedexWebServices::Soap::Pickup::TinType", XSD::QName.new(NsV22, "TinType")], [0, 1]],
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Number")], [0, 1]],
      ["usage", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Usage")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "ExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TrackingId,
    :schema_type => XSD::QName.new(NsV22, "TrackingId"),
    :schema_element => [
      ["trackingIdType", ["FedexWebServices::Soap::Pickup::TrackingIdType", XSD::QName.new(NsV22, "TrackingIdType")], [0, 1]],
      ["formId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "FormId")], [0, 1]],
      ["uspsApplicationId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "UspsApplicationId")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TrackingNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TransactionDetail,
    :schema_type => XSD::QName.new(NsV22, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Pickup::Localization", XSD::QName.new(NsV22, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::UploadDocumentDetail,
    :schema_type => XSD::QName.new(NsV22, "UploadDocumentDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CustomerReference")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::Pickup::UploadDocumentProducerType", XSD::QName.new(NsV22, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::Pickup::UploadDocumentType", XSD::QName.new(NsV22, "DocumentType")], [0, 1]],
      ["fileName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "FileName")], [0, 1]],
      ["documentContent", ["SOAP::SOAPBase64", XSD::QName.new(NsV22, "DocumentContent")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "ExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::UploadDocumentReferenceDetail,
    :schema_type => XSD::QName.new(NsV22, "UploadDocumentReferenceDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CustomerReference")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Description")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::Pickup::UploadDocumentProducerType", XSD::QName.new(NsV22, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::Pickup::UploadDocumentType", XSD::QName.new(NsV22, "DocumentType")], [0, 1]],
      ["documentId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "DocumentId")], [0, 1]],
      ["documentIdProducer", ["FedexWebServices::Soap::Pickup::UploadDocumentIdProducer", XSD::QName.new(NsV22, "DocumentIdProducer")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::WeighingDetail,
    :schema_type => XSD::QName.new(NsV22, "WeighingDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::WeighingScaleType", XSD::QName.new(NsV22, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Weight,
    :schema_type => XSD::QName.new(NsV22, "Weight"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Pickup::WeightUnits", XSD::QName.new(NsV22, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV22, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV22, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::Pickup::WebAuthenticationCredential", XSD::QName.new(NsV22, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::Pickup::WebAuthenticationCredential", XSD::QName.new(NsV22, "UserCredential")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV22, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Password")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::VersionId,
    :schema_type => XSD::QName.new(NsV22, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "Minor")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::AccessorRoleType,
    :schema_type => XSD::QName.new(NsV22, "AccessorRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::AssociatedAccountNumberType,
    :schema_type => XSD::QName.new(NsV22, "AssociatedAccountNumberType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::BuildingPartCode,
    :schema_type => XSD::QName.new(NsV22, "BuildingPartCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CarrierCodeType,
    :schema_type => XSD::QName.new(NsV22, "CarrierCodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ChargeBasisLevelType,
    :schema_type => XSD::QName.new(NsV22, "ChargeBasisLevelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CloseTimeType,
    :schema_type => XSD::QName.new(NsV22, "CloseTimeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CodAddTransportationChargeBasisType,
    :schema_type => XSD::QName.new(NsV22, "CodAddTransportationChargeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CodCollectionType,
    :schema_type => XSD::QName.new(NsV22, "CodCollectionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CodReturnReferenceIndicatorType,
    :schema_type => XSD::QName.new(NsV22, "CodReturnReferenceIndicatorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CountryRelationshipType,
    :schema_type => XSD::QName.new(NsV22, "CountryRelationshipType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CustomDeliveryWindowType,
    :schema_type => XSD::QName.new(NsV22, "CustomDeliveryWindowType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DangerousGoodsAccessibilityType,
    :schema_type => XSD::QName.new(NsV22, "DangerousGoodsAccessibilityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DayOfWeekType,
    :schema_type => XSD::QName.new(NsV22, "DayOfWeekType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DistanceUnits,
    :schema_type => XSD::QName.new(NsV22, "DistanceUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EmailOptionType,
    :schema_type => XSD::QName.new(NsV22, "EmailOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EtdAttributeType,
    :schema_type => XSD::QName.new(NsV22, "EtdAttributeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EtdConfirmationType,
    :schema_type => XSD::QName.new(NsV22, "EtdConfirmationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ExpressRegionCode,
    :schema_type => XSD::QName.new(NsV22, "ExpressRegionCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FedExLocationType,
    :schema_type => XSD::QName.new(NsV22, "FedExLocationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FlatbedTrailerOption,
    :schema_type => XSD::QName.new(NsV22, "FlatbedTrailerOption")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightGuaranteeType,
    :schema_type => XSD::QName.new(NsV22, "FreightGuaranteeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightServiceSchedulingType,
    :schema_type => XSD::QName.new(NsV22, "FreightServiceSchedulingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightShipmentRoleType,
    :schema_type => XSD::QName.new(NsV22, "FreightShipmentRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::HazardousCommodityOptionType,
    :schema_type => XSD::QName.new(NsV22, "HazardousCommodityOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::HazardousCommodityRegulationType,
    :schema_type => XSD::QName.new(NsV22, "HazardousCommodityRegulationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::HomeDeliveryPremiumType,
    :schema_type => XSD::QName.new(NsV22, "HomeDeliveryPremiumType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::InternationalControlledExportType,
    :schema_type => XSD::QName.new(NsV22, "InternationalControlledExportType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::LinearUnits,
    :schema_type => XSD::QName.new(NsV22, "LinearUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationEventType,
    :schema_type => XSD::QName.new(NsV22, "NotificationEventType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationFormatType,
    :schema_type => XSD::QName.new(NsV22, "NotificationFormatType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV22, "NotificationSeverityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationType,
    :schema_type => XSD::QName.new(NsV22, "NotificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PaymentType,
    :schema_type => XSD::QName.new(NsV22, "PaymentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PendingShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV22, "PendingShipmentProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PendingShipmentType,
    :schema_type => XSD::QName.new(NsV22, "PendingShipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PhysicalPackagingType,
    :schema_type => XSD::QName.new(NsV22, "PhysicalPackagingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupBuildingLocationType,
    :schema_type => XSD::QName.new(NsV22, "PickupBuildingLocationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupEventType,
    :schema_type => XSD::QName.new(NsV22, "PickupEventType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupRequestType,
    :schema_type => XSD::QName.new(NsV22, "PickupRequestType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupServiceCategoryType,
    :schema_type => XSD::QName.new(NsV22, "PickupServiceCategoryType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupType,
    :schema_type => XSD::QName.new(NsV22, "PickupType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PriorityAlertEnhancementType,
    :schema_type => XSD::QName.new(NsV22, "PriorityAlertEnhancementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RateLevelBasisType,
    :schema_type => XSD::QName.new(NsV22, "RateLevelBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RateTypeBasisType,
    :schema_type => XSD::QName.new(NsV22, "RateTypeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RecommendedDocumentType,
    :schema_type => XSD::QName.new(NsV22, "RecommendedDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RequestedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV22, "RequestedShippingDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ReturnEMailAllowedSpecialServiceType,
    :schema_type => XSD::QName.new(NsV22, "ReturnEMailAllowedSpecialServiceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ReturnType,
    :schema_type => XSD::QName.new(NsV22, "ReturnType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentDryIceProcessingOptionType,
    :schema_type => XSD::QName.new(NsV22, "ShipmentDryIceProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentNotificationAggregationType,
    :schema_type => XSD::QName.new(NsV22, "ShipmentNotificationAggregationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentNotificationRoleType,
    :schema_type => XSD::QName.new(NsV22, "ShipmentNotificationRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::SpecialEquipmentType,
    :schema_type => XSD::QName.new(NsV22, "SpecialEquipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TinType,
    :schema_type => XSD::QName.new(NsV22, "TinType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TrackingIdType,
    :schema_type => XSD::QName.new(NsV22, "TrackingIdType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TrailerSizeType,
    :schema_type => XSD::QName.new(NsV22, "TrailerSizeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TruckType,
    :schema_type => XSD::QName.new(NsV22, "TruckType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::UploadDocumentIdProducer,
    :schema_type => XSD::QName.new(NsV22, "UploadDocumentIdProducer")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::UploadDocumentProducerType,
    :schema_type => XSD::QName.new(NsV22, "UploadDocumentProducerType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::UploadDocumentType,
    :schema_type => XSD::QName.new(NsV22, "UploadDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::WeighingScaleType,
    :schema_type => XSD::QName.new(NsV22, "WeighingScaleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Pickup::WeightUnits,
    :schema_type => XSD::QName.new(NsV22, "WeightUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Address,
    :schema_type => XSD::QName.new(NsV22, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV22, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV22, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "Residential")], [0, 1]],
      ["geographicCoordinates", ["SOAP::SOAPString", XSD::QName.new(NsV22, "GeographicCoordinates")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::AssociatedAccount,
    :schema_type => XSD::QName.new(NsV22, "AssociatedAccount"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::AssociatedAccountNumberType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "AccountNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CancelPickupReply,
    :schema_type => XSD::QName.new(NsV22, "CancelPickupReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Pickup::Notification[]", XSD::QName.new(NsV22, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Message")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CancelPickupRequest,
    :schema_type => XSD::QName.new(NsV22, "CancelPickupRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Pickup::WebAuthenticationDetail", XSD::QName.new(NsV22, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Pickup::ClientDetail", XSD::QName.new(NsV22, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["carrierCode", ["FedexWebServices::Soap::Pickup::CarrierCodeType", XSD::QName.new(NsV22, "CarrierCode")], [0, 1]],
      ["pickupConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PickupConfirmationNumber")], [0, 1]],
      ["scheduledDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "ScheduledDate")], [0, 1]],
      ["endDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "EndDate")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Location")], [0, 1]],
      ["remarks", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Remarks")], [0, 1]],
      ["shippingChargesPayment", ["FedexWebServices::Soap::Pickup::Payment", XSD::QName.new(NsV22, "ShippingChargesPayment")], [0, 1]],
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Reason")], [0, 1]],
      ["contactName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ContactName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneExtension")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ClientDetail,
    :schema_type => XSD::QName.new(NsV22, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "MeterNumber")]],
      ["meterInstance", ["SOAP::SOAPString", XSD::QName.new(NsV22, "MeterInstance")], [0, 1]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "IntegratorId")], [0, 1]],
      ["region", ["FedexWebServices::Soap::Pickup::ExpressRegionCode", XSD::QName.new(NsV22, "Region")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Pickup::Localization", XSD::QName.new(NsV22, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CodAddTransportationChargesDetail,
    :schema_type => XSD::QName.new(NsV22, "CodAddTransportationChargesDetail"),
    :schema_element => [
      ["rateTypeBasis", ["FedexWebServices::Soap::Pickup::RateTypeBasisType", XSD::QName.new(NsV22, "RateTypeBasis")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::Pickup::CodAddTransportationChargeBasisType", XSD::QName.new(NsV22, "ChargeBasis")], [0, 1]],
      ["chargeBasisLevel", ["FedexWebServices::Soap::Pickup::ChargeBasisLevelType", XSD::QName.new(NsV22, "ChargeBasisLevel")], [0, 1]],
      ["rateLevelBasis", ["FedexWebServices::Soap::Pickup::RateLevelBasisType", XSD::QName.new(NsV22, "RateLevelBasis")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CodDetail,
    :schema_type => XSD::QName.new(NsV22, "CodDetail"),
    :schema_element => [
      ["codCollectionAmount", ["FedexWebServices::Soap::Pickup::Money", XSD::QName.new(NsV22, "CodCollectionAmount")], [0, 1]],
      ["addTransportationChargesDetail", ["FedexWebServices::Soap::Pickup::CodAddTransportationChargesDetail", XSD::QName.new(NsV22, "AddTransportationChargesDetail")], [0, 1]],
      ["collectionType", ["FedexWebServices::Soap::Pickup::CodCollectionType", XSD::QName.new(NsV22, "CollectionType")], [0, 1]],
      ["codRecipient", ["FedexWebServices::Soap::Pickup::Party", XSD::QName.new(NsV22, "CodRecipient")], [0, 1]],
      ["financialInstitutionContactAndAddress", ["FedexWebServices::Soap::Pickup::ContactAndAddress", XSD::QName.new(NsV22, "FinancialInstitutionContactAndAddress")], [0, 1]],
      ["remitToName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "RemitToName")], [0, 1]],
      ["referenceIndicator", ["FedexWebServices::Soap::Pickup::CodReturnReferenceIndicatorType", XSD::QName.new(NsV22, "ReferenceIndicator")], [0, 1]],
      ["returnTrackingId", ["FedexWebServices::Soap::Pickup::TrackingId", XSD::QName.new(NsV22, "ReturnTrackingId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CompletedFreightPickupDetail,
    :schema_type => XSD::QName.new(NsV22, "CompletedFreightPickupDetail"),
    :schema_element => [
      ["origin", ["FedexWebServices::Soap::Pickup::FreightServiceCenterDetail", XSD::QName.new(NsV22, "Origin")], [0, 1]],
      ["lineItems", ["FedexWebServices::Soap::Pickup::CompletedFreightPickupLineItem[]", XSD::QName.new(NsV22, "LineItems")], [0, nil]],
      ["totalPieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "TotalPieces")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "TotalWeight")], [0, 1]],
      ["totalHandlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "TotalHandlingUnits")], [0, 1]],
      ["status", ["FedexWebServices::Soap::Pickup::PickupEventType", XSD::QName.new(NsV22, "Status")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CompletedFreightPickupLineItem,
    :schema_type => XSD::QName.new(NsV22, "CompletedFreightPickupLineItem"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "SequenceNumber")], [0, 1]],
      ["destination", ["FedexWebServices::Soap::Pickup::FreightServiceCenterDetail", XSD::QName.new(NsV22, "Destination")], [0, 1]],
      ["totalTravelTime", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "TotalTravelTime")], [0, 1]],
      ["etaDeliveryTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "EtaDeliveryTimestamp")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Contact,
    :schema_type => XSD::QName.new(NsV22, "Contact"),
    :schema_element => [
      ["contactId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ContactId")], [0, 1]],
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV22, "EMailAddress")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ContactAndAddress,
    :schema_type => XSD::QName.new(NsV22, "ContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::Pickup::Contact", XSD::QName.new(NsV22, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Pickup::Address", XSD::QName.new(NsV22, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CreatePickupReply,
    :schema_type => XSD::QName.new(NsV22, "CreatePickupReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Pickup::Notification[]", XSD::QName.new(NsV22, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["pickupConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PickupConfirmationNumber")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Location")], [0, 1]],
      ["messageCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "MessageCode")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Message")], [0, 1]],
      ["pRPControlNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PRPControlNumber")], [0, 1]],
      ["lastAccessTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "LastAccessTime")], [0, 1]],
      ["completedFreightPickupDetail", ["FedexWebServices::Soap::Pickup::CompletedFreightPickupDetail", XSD::QName.new(NsV22, "CompletedFreightPickupDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CreatePickupRequest,
    :schema_type => XSD::QName.new(NsV22, "CreatePickupRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Pickup::WebAuthenticationDetail", XSD::QName.new(NsV22, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Pickup::ClientDetail", XSD::QName.new(NsV22, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["associatedAccountNumber", ["FedexWebServices::Soap::Pickup::AssociatedAccount", XSD::QName.new(NsV22, "AssociatedAccountNumber")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TrackingNumber")], [0, 1]],
      ["originDetail", ["FedexWebServices::Soap::Pickup::PickupOriginDetail", XSD::QName.new(NsV22, "OriginDetail")], [0, 1]],
      ["pickupServiceCategory", ["FedexWebServices::Soap::Pickup::PickupServiceCategoryType", XSD::QName.new(NsV22, "PickupServiceCategory")], [0, 1]],
      ["freightPickupDetail", ["FedexWebServices::Soap::Pickup::FreightPickupDetail", XSD::QName.new(NsV22, "FreightPickupDetail")], [0, 1]],
      ["expressFreightDetail", ["FedexWebServices::Soap::Pickup::ExpressFreightPickupDetail", XSD::QName.new(NsV22, "ExpressFreightDetail")], [0, 1]],
      ["packageCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "PackageCount")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "TotalWeight")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Pickup::CarrierCodeType", XSD::QName.new(NsV22, "CarrierCode")], [0, 1]],
      ["oversizePackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "OversizePackageCount")], [0, 1]],
      ["remarks", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Remarks")], [0, 1]],
      ["commodityDescription", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CommodityDescription")], [0, 1]],
      ["countryRelationship", ["FedexWebServices::Soap::Pickup::CountryRelationshipType", XSD::QName.new(NsV22, "CountryRelationship")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CustomDeliveryWindowDetail,
    :schema_type => XSD::QName.new(NsV22, "CustomDeliveryWindowDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::CustomDeliveryWindowType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["requestTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "RequestTime")], [0, 1]],
      ["requestRange", ["FedexWebServices::Soap::Pickup::DateRange", XSD::QName.new(NsV22, "RequestRange")], [0, 1]],
      ["requestDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "RequestDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DateRange,
    :schema_type => XSD::QName.new(NsV22, "DateRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "Ends")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DeliveryOnInvoiceAcceptanceDetail,
    :schema_type => XSD::QName.new(NsV22, "DeliveryOnInvoiceAcceptanceDetail"),
    :schema_element => [
      ["recipient", ["FedexWebServices::Soap::Pickup::Party", XSD::QName.new(NsV22, "Recipient")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Pickup::TrackingId", XSD::QName.new(NsV22, "TrackingId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DetentionDetail,
    :schema_type => XSD::QName.new(NsV22, "DetentionDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Dimensions,
    :schema_type => XSD::QName.new(NsV22, "Dimensions"),
    :schema_element => [
      ["length", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "Length")], [0, 1]],
      ["width", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "Width")], [0, 1]],
      ["height", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "Height")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Pickup::LinearUnits", XSD::QName.new(NsV22, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Distance,
    :schema_type => XSD::QName.new(NsV22, "Distance"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV22, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Pickup::DistanceUnits", XSD::QName.new(NsV22, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EMailDetail,
    :schema_type => XSD::QName.new(NsV22, "EMailDetail"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV22, "EmailAddress")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EMailLabelDetail,
    :schema_type => XSD::QName.new(NsV22, "EMailLabelDetail"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Message")], [0, 1]],
      ["recipients", ["FedexWebServices::Soap::Pickup::EMailRecipient[]", XSD::QName.new(NsV22, "Recipients")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EMailRecipient,
    :schema_type => XSD::QName.new(NsV22, "EMailRecipient"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV22, "EmailAddress")], [0, 1]],
      ["role", ["FedexWebServices::Soap::Pickup::AccessorRoleType", XSD::QName.new(NsV22, "Role")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::Pickup::EmailOptionsRequested", XSD::QName.new(NsV22, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Pickup::Localization", XSD::QName.new(NsV22, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EmailOptionsRequested,
    :schema_type => XSD::QName.new(NsV22, "EmailOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Pickup::EmailOptionType[]", XSD::QName.new(NsV22, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EtdDetail,
    :schema_type => XSD::QName.new(NsV22, "EtdDetail"),
    :schema_element => [
      ["confirmation", ["FedexWebServices::Soap::Pickup::EtdConfirmationType", XSD::QName.new(NsV22, "Confirmation")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::Pickup::EtdAttributeType[]", XSD::QName.new(NsV22, "Attributes")], [0, nil]],
      ["requestedDocumentCopies", ["FedexWebServices::Soap::Pickup::RequestedShippingDocumentType[]", XSD::QName.new(NsV22, "RequestedDocumentCopies")], [0, nil]],
      ["documents", ["FedexWebServices::Soap::Pickup::UploadDocumentDetail[]", XSD::QName.new(NsV22, "Documents")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::Pickup::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV22, "DocumentReferences")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ExpressFreightPickupDetail,
    :schema_type => XSD::QName.new(NsV22, "ExpressFreightPickupDetail"),
    :schema_element => [
      ["service", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Service")], [0, 1]],
      ["bookingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "BookingNumber")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Pickup::Dimensions", XSD::QName.new(NsV22, "Dimensions")], [0, 1]],
      ["truckType", ["FedexWebServices::Soap::Pickup::TruckType", XSD::QName.new(NsV22, "TruckType")], [0, 1]],
      ["trailerSize", ["FedexWebServices::Soap::Pickup::TrailerSizeType", XSD::QName.new(NsV22, "TrailerSize")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ExtraLaborDetail,
    :schema_type => XSD::QName.new(NsV22, "ExtraLaborDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FaxDetail,
    :schema_type => XSD::QName.new(NsV22, "FaxDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FlatbedTrailerDetail,
    :schema_type => XSD::QName.new(NsV22, "FlatbedTrailerDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Pickup::FlatbedTrailerOption[]", XSD::QName.new(NsV22, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightGuaranteeDetail,
    :schema_type => XSD::QName.new(NsV22, "FreightGuaranteeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::FreightGuaranteeType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "Date")], [0, 1]],
      ["time", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "Time")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightPickupDetail,
    :schema_type => XSD::QName.new(NsV22, "FreightPickupDetail"),
    :schema_element => [
      ["approvedBy", ["FedexWebServices::Soap::Pickup::Contact", XSD::QName.new(NsV22, "ApprovedBy")], [0, 1]],
      ["payment", ["FedexWebServices::Soap::Pickup::PaymentType", XSD::QName.new(NsV22, "Payment")], [0, 1]],
      ["role", ["FedexWebServices::Soap::Pickup::FreightShipmentRoleType", XSD::QName.new(NsV22, "Role")], [0, 1]],
      ["alternateBilling", ["FedexWebServices::Soap::Pickup::Party", XSD::QName.new(NsV22, "AlternateBilling")], [0, 1]],
      ["submittedBy", ["FedexWebServices::Soap::Pickup::Contact", XSD::QName.new(NsV22, "SubmittedBy")], [0, 1]],
      ["lineItems", ["FedexWebServices::Soap::Pickup::FreightPickupLineItem[]", XSD::QName.new(NsV22, "LineItems")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightPickupLineItem,
    :schema_type => XSD::QName.new(NsV22, "FreightPickupLineItem"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TrackingNumber")], [0, 1]],
      ["service", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Service")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "SequenceNumber")], [0, 1]],
      ["destination", ["FedexWebServices::Soap::Pickup::Address", XSD::QName.new(NsV22, "Destination")], [0, 1]],
      ["packaging", ["FedexWebServices::Soap::Pickup::PhysicalPackagingType", XSD::QName.new(NsV22, "Packaging")], [0, 1]],
      ["pieces", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "Pieces")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "Weight")], [0, 1]],
      ["totalHandlingUnits", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "TotalHandlingUnits")], [0, 1]],
      ["purchaseOrderNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PurchaseOrderNumber")], [0, 1]],
      ["justOneMore", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "JustOneMore")], [0, 1]],
      ["specialServicesRequested", ["FedexWebServices::Soap::Pickup::ShipmentSpecialServicesRequested", XSD::QName.new(NsV22, "SpecialServicesRequested")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightServiceCenterDetail,
    :schema_type => XSD::QName.new(NsV22, "FreightServiceCenterDetail"),
    :schema_element => [
      ["interlineCarrierCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "InterlineCarrierCode")], [0, 1]],
      ["interlineCarrierName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "InterlineCarrierName")], [0, 1]],
      ["additionalDays", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "AdditionalDays")], [0, 1]],
      ["localService", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LocalService")], [0, 1]],
      ["localDistance", ["FedexWebServices::Soap::Pickup::Distance", XSD::QName.new(NsV22, "LocalDistance")], [0, 1]],
      ["localDuration", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "LocalDuration")], [0, 1]],
      ["localServiceScheduling", ["FedexWebServices::Soap::Pickup::FreightServiceSchedulingType", XSD::QName.new(NsV22, "LocalServiceScheduling")], [0, 1]],
      ["limitedServiceDays", ["FedexWebServices::Soap::Pickup::DayOfWeekType[]", XSD::QName.new(NsV22, "LimitedServiceDays")], [0, nil]],
      ["gatewayLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "GatewayLocationId")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Location")], [0, 1]],
      ["contactAndAddress", ["FedexWebServices::Soap::Pickup::ContactAndAddress", XSD::QName.new(NsV22, "ContactAndAddress")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::HoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV22, "HoldAtLocationDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]],
      ["locationContactAndAddress", ["FedexWebServices::Soap::Pickup::ContactAndAddress", XSD::QName.new(NsV22, "LocationContactAndAddress")], [0, 1]],
      ["locationType", ["FedexWebServices::Soap::Pickup::FedExLocationType", XSD::QName.new(NsV22, "LocationType")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "LocationNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::HomeDeliveryPremiumDetail,
    :schema_type => XSD::QName.new(NsV22, "HomeDeliveryPremiumDetail"),
    :schema_element => [
      ["homeDeliveryPremiumType", ["FedexWebServices::Soap::Pickup::HomeDeliveryPremiumType", XSD::QName.new(NsV22, "HomeDeliveryPremiumType")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "Date")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::InternationalControlledExportDetail,
    :schema_type => XSD::QName.new(NsV22, "InternationalControlledExportDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::InternationalControlledExportType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["foreignTradeZoneCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ForeignTradeZoneCode")], [0, 1]],
      ["entryNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "EntryNumber")], [0, 1]],
      ["licenseOrPermitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LicenseOrPermitNumber")], [0, 1]],
      ["licenseOrPermitExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "LicenseOrPermitExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::InternationalTrafficInArmsRegulationsDetail,
    :schema_type => XSD::QName.new(NsV22, "InternationalTrafficInArmsRegulationsDetail"),
    :schema_element => [
      ["licenseOrExemptionNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LicenseOrExemptionNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Localization,
    :schema_type => XSD::QName.new(NsV22, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LocaleCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::MarkingOrTaggingDetail,
    :schema_type => XSD::QName.new(NsV22, "MarkingOrTaggingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "Count")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Money,
    :schema_type => XSD::QName.new(NsV22, "Money"),
    :schema_element => [
      ["currency", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Currency")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV22, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NonBusinessTimeDetail,
    :schema_type => XSD::QName.new(NsV22, "NonBusinessTimeDetail"),
    :schema_element => [
      ["personDays", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "PersonDays")], [0, 1]],
      ["personHours", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "PersonHours")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Notification,
    :schema_type => XSD::QName.new(NsV22, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "Severity")], [0, 1]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Source")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV22, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::Pickup::NotificationParameter[]", XSD::QName.new(NsV22, "MessageParameters")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationDetail,
    :schema_type => XSD::QName.new(NsV22, "NotificationDetail"),
    :schema_element => [
      ["notificationType", ["FedexWebServices::Soap::Pickup::NotificationType", XSD::QName.new(NsV22, "NotificationType")], [0, 1]],
      ["emailDetail", ["FedexWebServices::Soap::Pickup::EMailDetail", XSD::QName.new(NsV22, "EmailDetail")], [0, 1]],
      ["faxDetail", ["FedexWebServices::Soap::Pickup::FaxDetail", XSD::QName.new(NsV22, "FaxDetail")], [0, 1]],
      ["smsDetail", ["FedexWebServices::Soap::Pickup::SmsDetail", XSD::QName.new(NsV22, "SmsDetail")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Pickup::Localization", XSD::QName.new(NsV22, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationParameter,
    :schema_type => XSD::QName.new(NsV22, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PalletShrinkwrapDetail,
    :schema_type => XSD::QName.new(NsV22, "PalletShrinkwrapDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "PalletCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PalletsProvidedDetail,
    :schema_type => XSD::QName.new(NsV22, "PalletsProvidedDetail"),
    :schema_element => [
      ["palletCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "PalletCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Party,
    :schema_type => XSD::QName.new(NsV22, "Party"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "AccountNumber")], [0, 1]],
      ["tins", ["FedexWebServices::Soap::Pickup::TaxpayerIdentification[]", XSD::QName.new(NsV22, "Tins")], [0, nil]],
      ["contact", ["FedexWebServices::Soap::Pickup::Contact", XSD::QName.new(NsV22, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Pickup::Address", XSD::QName.new(NsV22, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Payment,
    :schema_type => XSD::QName.new(NsV22, "Payment"),
    :schema_element => [
      ["paymentType", ["FedexWebServices::Soap::Pickup::PaymentType", XSD::QName.new(NsV22, "PaymentType")], [0, 1]],
      ["payor", ["FedexWebServices::Soap::Pickup::Payor", XSD::QName.new(NsV22, "Payor")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Pickup::Money", XSD::QName.new(NsV22, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Payor,
    :schema_type => XSD::QName.new(NsV22, "Payor"),
    :schema_element => [
      ["responsibleParty", ["FedexWebServices::Soap::Pickup::Party", XSD::QName.new(NsV22, "ResponsibleParty")], [0, 1]],
      ["associatedAccounts", ["FedexWebServices::Soap::Pickup::AssociatedAccount[]", XSD::QName.new(NsV22, "AssociatedAccounts")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PendingShipmentDetail,
    :schema_type => XSD::QName.new(NsV22, "PendingShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::PendingShipmentType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "ExpirationDate")], [0, 1]],
      ["emailLabelDetail", ["FedexWebServices::Soap::Pickup::EMailLabelDetail", XSD::QName.new(NsV22, "EmailLabelDetail")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Pickup::PendingShipmentProcessingOptionsRequested", XSD::QName.new(NsV22, "ProcessingOptions")], [0, 1]],
      ["recommendedDocumentSpecification", ["FedexWebServices::Soap::Pickup::RecommendedDocumentSpecification", XSD::QName.new(NsV22, "RecommendedDocumentSpecification")], [0, 1]],
      ["documentReferences", ["FedexWebServices::Soap::Pickup::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV22, "DocumentReferences")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PendingShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV22, "PendingShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Pickup::PendingShipmentProcessingOptionType[]", XSD::QName.new(NsV22, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupAvailabilityReply,
    :schema_type => XSD::QName.new(NsV22, "PickupAvailabilityReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Pickup::Notification[]", XSD::QName.new(NsV22, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["requestTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "RequestTimestamp")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Pickup::PickupScheduleOption[]", XSD::QName.new(NsV22, "Options")], [0, nil]],
      ["closeTimeType", ["FedexWebServices::Soap::Pickup::CloseTimeType", XSD::QName.new(NsV22, "CloseTimeType")], [0, 1]],
      ["closeTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "CloseTime")], [0, 1]],
      ["openTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "OpenTime")], [0, 1]],
      ["localTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "LocalTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupAvailabilityRequest,
    :schema_type => XSD::QName.new(NsV22, "PickupAvailabilityRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Pickup::WebAuthenticationDetail", XSD::QName.new(NsV22, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Pickup::ClientDetail", XSD::QName.new(NsV22, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["pickupType", ["FedexWebServices::Soap::Pickup::PickupType", XSD::QName.new(NsV22, "PickupType")], [0, 1]],
      ["accountNumber", ["FedexWebServices::Soap::Pickup::AssociatedAccount", XSD::QName.new(NsV22, "AccountNumber")], [0, 1]],
      ["pickupAddress", ["FedexWebServices::Soap::Pickup::Address", XSD::QName.new(NsV22, "PickupAddress")], [0, 1]],
      ["pickupRequestType", ["FedexWebServices::Soap::Pickup::PickupRequestType[]", XSD::QName.new(NsV22, "PickupRequestType")], [0, nil]],
      ["dispatchDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "DispatchDate")], [0, 1]],
      ["numberOfBusinessDays", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "NumberOfBusinessDays")], [0, 1]],
      ["packageReadyTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "PackageReadyTime")], [0, 1]],
      ["customerCloseTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "CustomerCloseTime")], [0, 1]],
      ["carriers", ["FedexWebServices::Soap::Pickup::CarrierCodeType[]", XSD::QName.new(NsV22, "Carriers")], [0, nil]],
      ["shipmentAttributes", ["FedexWebServices::Soap::Pickup::PickupShipmentAttributes", XSD::QName.new(NsV22, "ShipmentAttributes")], [0, 1]],
      ["packageDetails", ["FedexWebServices::Soap::Pickup::RequestedPickupPackageDetail[]", XSD::QName.new(NsV22, "PackageDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupDangerousGoodsDetail,
    :schema_type => XSD::QName.new(NsV22, "PickupDangerousGoodsDetail"),
    :schema_element => [
      ["regulation", ["FedexWebServices::Soap::Pickup::HazardousCommodityRegulationType", XSD::QName.new(NsV22, "Regulation")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::Pickup::DangerousGoodsAccessibilityType", XSD::QName.new(NsV22, "Accessibility")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Pickup::HazardousCommodityOptionType[]", XSD::QName.new(NsV22, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupOriginDetail,
    :schema_type => XSD::QName.new(NsV22, "PickupOriginDetail"),
    :schema_element => [
      ["useAccountAddress", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "UseAccountAddress")], [0, 1]],
      ["addressId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "AddressId")], [0, 1]],
      ["pickupLocation", ["FedexWebServices::Soap::Pickup::ContactAndAddress", XSD::QName.new(NsV22, "PickupLocation")], [0, 1]],
      ["packageLocation", ["FedexWebServices::Soap::Pickup::PickupBuildingLocationType", XSD::QName.new(NsV22, "PackageLocation")], [0, 1]],
      ["buildingPart", ["FedexWebServices::Soap::Pickup::BuildingPartCode", XSD::QName.new(NsV22, "BuildingPart")], [0, 1]],
      ["buildingPartDescription", ["SOAP::SOAPString", XSD::QName.new(NsV22, "BuildingPartDescription")], [0, 1]],
      ["readyTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "ReadyTimestamp")], [0, 1]],
      ["companyCloseTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "CompanyCloseTime")], [0, 1]],
      ["stayLate", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "StayLate")], [0, 1]],
      ["pickupDateType", ["FedexWebServices::Soap::Pickup::PickupRequestType", XSD::QName.new(NsV22, "PickupDateType")], [0, 1]],
      ["lastAccessTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "LastAccessTime")], [0, 1]],
      ["geographicalPostalCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "GeographicalPostalCode")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Location")], [0, 1]],
      ["deleteLastUsed", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "DeleteLastUsed")], [0, 1]],
      ["suppliesRequested", ["SOAP::SOAPString", XSD::QName.new(NsV22, "SuppliesRequested")], [0, 1]],
      ["earlyPickup", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "EarlyPickup")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupPackageSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV22, "PickupPackageSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV22, "SpecialServiceTypes")], [0, nil]],
      ["dangerousGoodsDetail", ["FedexWebServices::Soap::Pickup::PickupDangerousGoodsDetail", XSD::QName.new(NsV22, "DangerousGoodsDetail")], [0, 1]],
      ["priorityAlertDetail", ["FedexWebServices::Soap::Pickup::PriorityAlertDetail", XSD::QName.new(NsV22, "PriorityAlertDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupScheduleOption,
    :schema_type => XSD::QName.new(NsV22, "PickupScheduleOption"),
    :schema_element => [
      ["carrier", ["FedexWebServices::Soap::Pickup::CarrierCodeType", XSD::QName.new(NsV22, "Carrier")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Description")], [0, 1]],
      ["scheduleDay", ["FedexWebServices::Soap::Pickup::PickupRequestType", XSD::QName.new(NsV22, "ScheduleDay")], [0, 1]],
      ["available", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "Available")], [0, 1]],
      ["pickupDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "PickupDate")], [0, 1]],
      ["cutOffTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "CutOffTime")], [0, 1]],
      ["accessTime", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "AccessTime")], [0, 1]],
      ["residentialAvailable", ["SOAP::SOAPBoolean", XSD::QName.new(NsV22, "ResidentialAvailable")], [0, 1]],
      ["countryRelationship", ["FedexWebServices::Soap::Pickup::CountryRelationshipType", XSD::QName.new(NsV22, "CountryRelationship")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupShipmentAttributes,
    :schema_type => XSD::QName.new(NsV22, "PickupShipmentAttributes"),
    :schema_element => [
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ServiceType")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PackagingType")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Pickup::Dimensions", XSD::QName.new(NsV22, "Dimensions")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "Weight")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PriorityAlertDetail,
    :schema_type => XSD::QName.new(NsV22, "PriorityAlertDetail"),
    :schema_element => [
      ["enhancementTypes", ["FedexWebServices::Soap::Pickup::PriorityAlertEnhancementType[]", XSD::QName.new(NsV22, "EnhancementTypes")], [0, nil]],
      ["content", ["SOAP::SOAPString[]", XSD::QName.new(NsV22, "Content")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RecommendedDocumentSpecification,
    :schema_type => XSD::QName.new(NsV22, "RecommendedDocumentSpecification"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::Pickup::RecommendedDocumentType[]", XSD::QName.new(NsV22, "Types")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RequestedPickupPackageDetail,
    :schema_type => XSD::QName.new(NsV22, "RequestedPickupPackageDetail"),
    :schema_element => [
      ["packageSpecialServices", ["FedexWebServices::Soap::Pickup::PickupPackageSpecialServicesRequested", XSD::QName.new(NsV22, "PackageSpecialServices")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "Weight")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ReturnAssociationDetail,
    :schema_type => XSD::QName.new(NsV22, "ReturnAssociationDetail"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TrackingNumber")], [0, 1]],
      ["shipDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "ShipDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ReturnEMailDetail,
    :schema_type => XSD::QName.new(NsV22, "ReturnEMailDetail"),
    :schema_element => [
      ["merchantPhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "MerchantPhoneNumber")], [0, 1]],
      ["allowedSpecialServices", ["FedexWebServices::Soap::Pickup::ReturnEMailAllowedSpecialServiceType[]", XSD::QName.new(NsV22, "AllowedSpecialServices")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ReturnShipmentDetail,
    :schema_type => XSD::QName.new(NsV22, "ReturnShipmentDetail"),
    :schema_element => [
      ["returnType", ["FedexWebServices::Soap::Pickup::ReturnType", XSD::QName.new(NsV22, "ReturnType")], [0, 1]],
      ["rma", ["FedexWebServices::Soap::Pickup::Rma", XSD::QName.new(NsV22, "Rma")], [0, 1]],
      ["returnEMailDetail", ["FedexWebServices::Soap::Pickup::ReturnEMailDetail", XSD::QName.new(NsV22, "ReturnEMailDetail")], [0, 1]],
      ["returnAssociation", ["FedexWebServices::Soap::Pickup::ReturnAssociationDetail", XSD::QName.new(NsV22, "ReturnAssociation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Rma,
    :schema_type => XSD::QName.new(NsV22, "Rma"),
    :schema_element => [
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Reason")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentAssemblyDetail,
    :schema_type => XSD::QName.new(NsV22, "ShipmentAssemblyDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "Weight")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentDryIceDetail,
    :schema_type => XSD::QName.new(NsV22, "ShipmentDryIceDetail"),
    :schema_element => [
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "PackageCount")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "TotalWeight")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Pickup::ShipmentDryIceProcessingOptionsRequested", XSD::QName.new(NsV22, "ProcessingOptions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentDryIceProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV22, "ShipmentDryIceProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Pickup::ShipmentDryIceProcessingOptionType[]", XSD::QName.new(NsV22, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentEventNotificationDetail,
    :schema_type => XSD::QName.new(NsV22, "ShipmentEventNotificationDetail"),
    :schema_element => [
      ["aggregationType", ["FedexWebServices::Soap::Pickup::ShipmentNotificationAggregationType", XSD::QName.new(NsV22, "AggregationType")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PersonalMessage")], [0, 1]],
      ["eventNotifications", ["FedexWebServices::Soap::Pickup::ShipmentEventNotificationSpecification[]", XSD::QName.new(NsV22, "EventNotifications")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentEventNotificationSpecification,
    :schema_type => XSD::QName.new(NsV22, "ShipmentEventNotificationSpecification"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::Pickup::ShipmentNotificationRoleType", XSD::QName.new(NsV22, "Role")], [0, 1]],
      ["events", ["FedexWebServices::Soap::Pickup::NotificationEventType[]", XSD::QName.new(NsV22, "Events")], [0, nil]],
      ["notificationDetail", ["FedexWebServices::Soap::Pickup::NotificationDetail", XSD::QName.new(NsV22, "NotificationDetail")], [0, 1]],
      ["formatSpecification", ["FedexWebServices::Soap::Pickup::ShipmentNotificationFormatSpecification", XSD::QName.new(NsV22, "FormatSpecification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentNotificationFormatSpecification,
    :schema_type => XSD::QName.new(NsV22, "ShipmentNotificationFormatSpecification"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::NotificationFormatType", XSD::QName.new(NsV22, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV22, "ShipmentSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV22, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::Pickup::CodDetail", XSD::QName.new(NsV22, "CodDetail")], [0, 1]],
      ["deliveryOnInvoiceAcceptanceDetail", ["FedexWebServices::Soap::Pickup::DeliveryOnInvoiceAcceptanceDetail", XSD::QName.new(NsV22, "DeliveryOnInvoiceAcceptanceDetail")], [0, 1]],
      ["holdAtLocationDetail", ["FedexWebServices::Soap::Pickup::HoldAtLocationDetail", XSD::QName.new(NsV22, "HoldAtLocationDetail")], [0, 1]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::Pickup::ShipmentEventNotificationDetail", XSD::QName.new(NsV22, "EventNotificationDetail")], [0, 1]],
      ["returnShipmentDetail", ["FedexWebServices::Soap::Pickup::ReturnShipmentDetail", XSD::QName.new(NsV22, "ReturnShipmentDetail")], [0, 1]],
      ["pendingShipmentDetail", ["FedexWebServices::Soap::Pickup::PendingShipmentDetail", XSD::QName.new(NsV22, "PendingShipmentDetail")], [0, 1]],
      ["internationalControlledExportDetail", ["FedexWebServices::Soap::Pickup::InternationalControlledExportDetail", XSD::QName.new(NsV22, "InternationalControlledExportDetail")], [0, 1]],
      ["internationalTrafficInArmsRegulationsDetail", ["FedexWebServices::Soap::Pickup::InternationalTrafficInArmsRegulationsDetail", XSD::QName.new(NsV22, "InternationalTrafficInArmsRegulationsDetail")], [0, 1]],
      ["shipmentDryIceDetail", ["FedexWebServices::Soap::Pickup::ShipmentDryIceDetail", XSD::QName.new(NsV22, "ShipmentDryIceDetail")], [0, 1]],
      ["homeDeliveryPremiumDetail", ["FedexWebServices::Soap::Pickup::HomeDeliveryPremiumDetail", XSD::QName.new(NsV22, "HomeDeliveryPremiumDetail")], [0, 1]],
      ["flatbedTrailerDetail", ["FedexWebServices::Soap::Pickup::FlatbedTrailerDetail", XSD::QName.new(NsV22, "FlatbedTrailerDetail")], [0, 1]],
      ["freightGuaranteeDetail", ["FedexWebServices::Soap::Pickup::FreightGuaranteeDetail", XSD::QName.new(NsV22, "FreightGuaranteeDetail")], [0, 1]],
      ["etdDetail", ["FedexWebServices::Soap::Pickup::EtdDetail", XSD::QName.new(NsV22, "EtdDetail")], [0, 1]],
      ["extraLaborDetail", ["FedexWebServices::Soap::Pickup::ExtraLaborDetail", XSD::QName.new(NsV22, "ExtraLaborDetail")], [0, 1]],
      ["palletShrinkwrapDetail", ["FedexWebServices::Soap::Pickup::PalletShrinkwrapDetail", XSD::QName.new(NsV22, "PalletShrinkwrapDetail")], [0, 1]],
      ["palletsProvidedDetail", ["FedexWebServices::Soap::Pickup::PalletsProvidedDetail", XSD::QName.new(NsV22, "PalletsProvidedDetail")], [0, 1]],
      ["detentionDetail", ["FedexWebServices::Soap::Pickup::DetentionDetail", XSD::QName.new(NsV22, "DetentionDetail")], [0, 1]],
      ["markingOrTaggingDetail", ["FedexWebServices::Soap::Pickup::MarkingOrTaggingDetail", XSD::QName.new(NsV22, "MarkingOrTaggingDetail")], [0, 1]],
      ["nonBusinessTimeDetail", ["FedexWebServices::Soap::Pickup::NonBusinessTimeDetail", XSD::QName.new(NsV22, "NonBusinessTimeDetail")], [0, 1]],
      ["shipmentAssemblyDetail", ["FedexWebServices::Soap::Pickup::ShipmentAssemblyDetail", XSD::QName.new(NsV22, "ShipmentAssemblyDetail")], [0, 1]],
      ["sortAndSegregateDetail", ["FedexWebServices::Soap::Pickup::SortAndSegregateDetail", XSD::QName.new(NsV22, "SortAndSegregateDetail")], [0, 1]],
      ["specialEquipmentDetail", ["FedexWebServices::Soap::Pickup::SpecialEquipmentDetail", XSD::QName.new(NsV22, "SpecialEquipmentDetail")], [0, 1]],
      ["storageDetail", ["FedexWebServices::Soap::Pickup::StorageDetail", XSD::QName.new(NsV22, "StorageDetail")], [0, 1]],
      ["weighingDetail", ["FedexWebServices::Soap::Pickup::WeighingDetail", XSD::QName.new(NsV22, "WeighingDetail")], [0, 1]],
      ["customDeliveryWindowDetail", ["FedexWebServices::Soap::Pickup::CustomDeliveryWindowDetail", XSD::QName.new(NsV22, "CustomDeliveryWindowDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::SmsDetail,
    :schema_type => XSD::QName.new(NsV22, "SmsDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]],
      ["phoneNumberCountryCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumberCountryCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::SortAndSegregateDetail,
    :schema_type => XSD::QName.new(NsV22, "SortAndSegregateDetail"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "PieceCount")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "Weight")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::SpecialEquipmentDetail,
    :schema_type => XSD::QName.new(NsV22, "SpecialEquipmentDetail"),
    :schema_element => [
      ["lineItems", ["FedexWebServices::Soap::Pickup::SpecialEquipmentLineItem[]", XSD::QName.new(NsV22, "LineItems")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::SpecialEquipmentLineItem,
    :schema_type => XSD::QName.new(NsV22, "SpecialEquipmentLineItem"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::SpecialEquipmentType", XSD::QName.new(NsV22, "Type")], [0, 1]],
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::StorageDetail,
    :schema_type => XSD::QName.new(NsV22, "StorageDetail"),
    :schema_element => [
      ["duration", ["SOAP::SOAPDuration", XSD::QName.new(NsV22, "Duration")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TaxpayerIdentification,
    :schema_type => XSD::QName.new(NsV22, "TaxpayerIdentification"),
    :schema_element => [
      ["tinType", ["FedexWebServices::Soap::Pickup::TinType", XSD::QName.new(NsV22, "TinType")], [0, 1]],
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Number")], [0, 1]],
      ["usage", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Usage")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "ExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TrackingId,
    :schema_type => XSD::QName.new(NsV22, "TrackingId"),
    :schema_element => [
      ["trackingIdType", ["FedexWebServices::Soap::Pickup::TrackingIdType", XSD::QName.new(NsV22, "TrackingIdType")], [0, 1]],
      ["formId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "FormId")], [0, 1]],
      ["uspsApplicationId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "UspsApplicationId")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TrackingNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TransactionDetail,
    :schema_type => XSD::QName.new(NsV22, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Pickup::Localization", XSD::QName.new(NsV22, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::UploadDocumentDetail,
    :schema_type => XSD::QName.new(NsV22, "UploadDocumentDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CustomerReference")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::Pickup::UploadDocumentProducerType", XSD::QName.new(NsV22, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::Pickup::UploadDocumentType", XSD::QName.new(NsV22, "DocumentType")], [0, 1]],
      ["fileName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "FileName")], [0, 1]],
      ["documentContent", ["SOAP::SOAPBase64", XSD::QName.new(NsV22, "DocumentContent")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "ExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::UploadDocumentReferenceDetail,
    :schema_type => XSD::QName.new(NsV22, "UploadDocumentReferenceDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CustomerReference")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Description")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::Pickup::UploadDocumentProducerType", XSD::QName.new(NsV22, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::Pickup::UploadDocumentType", XSD::QName.new(NsV22, "DocumentType")], [0, 1]],
      ["documentId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "DocumentId")], [0, 1]],
      ["documentIdProducer", ["FedexWebServices::Soap::Pickup::UploadDocumentIdProducer", XSD::QName.new(NsV22, "DocumentIdProducer")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::WeighingDetail,
    :schema_type => XSD::QName.new(NsV22, "WeighingDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Pickup::WeighingScaleType", XSD::QName.new(NsV22, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::Weight,
    :schema_type => XSD::QName.new(NsV22, "Weight"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Pickup::WeightUnits", XSD::QName.new(NsV22, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV22, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV22, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::Pickup::WebAuthenticationCredential", XSD::QName.new(NsV22, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::Pickup::WebAuthenticationCredential", XSD::QName.new(NsV22, "UserCredential")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV22, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Password")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::VersionId,
    :schema_type => XSD::QName.new(NsV22, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV22, "Minor")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::AccessorRoleType,
    :schema_type => XSD::QName.new(NsV22, "AccessorRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::AssociatedAccountNumberType,
    :schema_type => XSD::QName.new(NsV22, "AssociatedAccountNumberType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::BuildingPartCode,
    :schema_type => XSD::QName.new(NsV22, "BuildingPartCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CarrierCodeType,
    :schema_type => XSD::QName.new(NsV22, "CarrierCodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ChargeBasisLevelType,
    :schema_type => XSD::QName.new(NsV22, "ChargeBasisLevelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CloseTimeType,
    :schema_type => XSD::QName.new(NsV22, "CloseTimeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CodAddTransportationChargeBasisType,
    :schema_type => XSD::QName.new(NsV22, "CodAddTransportationChargeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CodCollectionType,
    :schema_type => XSD::QName.new(NsV22, "CodCollectionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CodReturnReferenceIndicatorType,
    :schema_type => XSD::QName.new(NsV22, "CodReturnReferenceIndicatorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CountryRelationshipType,
    :schema_type => XSD::QName.new(NsV22, "CountryRelationshipType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CustomDeliveryWindowType,
    :schema_type => XSD::QName.new(NsV22, "CustomDeliveryWindowType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DangerousGoodsAccessibilityType,
    :schema_type => XSD::QName.new(NsV22, "DangerousGoodsAccessibilityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DayOfWeekType,
    :schema_type => XSD::QName.new(NsV22, "DayOfWeekType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::DistanceUnits,
    :schema_type => XSD::QName.new(NsV22, "DistanceUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EmailOptionType,
    :schema_type => XSD::QName.new(NsV22, "EmailOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EtdAttributeType,
    :schema_type => XSD::QName.new(NsV22, "EtdAttributeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::EtdConfirmationType,
    :schema_type => XSD::QName.new(NsV22, "EtdConfirmationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ExpressRegionCode,
    :schema_type => XSD::QName.new(NsV22, "ExpressRegionCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FedExLocationType,
    :schema_type => XSD::QName.new(NsV22, "FedExLocationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FlatbedTrailerOption,
    :schema_type => XSD::QName.new(NsV22, "FlatbedTrailerOption")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightGuaranteeType,
    :schema_type => XSD::QName.new(NsV22, "FreightGuaranteeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightServiceSchedulingType,
    :schema_type => XSD::QName.new(NsV22, "FreightServiceSchedulingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::FreightShipmentRoleType,
    :schema_type => XSD::QName.new(NsV22, "FreightShipmentRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::HazardousCommodityOptionType,
    :schema_type => XSD::QName.new(NsV22, "HazardousCommodityOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::HazardousCommodityRegulationType,
    :schema_type => XSD::QName.new(NsV22, "HazardousCommodityRegulationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::HomeDeliveryPremiumType,
    :schema_type => XSD::QName.new(NsV22, "HomeDeliveryPremiumType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::InternationalControlledExportType,
    :schema_type => XSD::QName.new(NsV22, "InternationalControlledExportType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::LinearUnits,
    :schema_type => XSD::QName.new(NsV22, "LinearUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationEventType,
    :schema_type => XSD::QName.new(NsV22, "NotificationEventType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationFormatType,
    :schema_type => XSD::QName.new(NsV22, "NotificationFormatType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV22, "NotificationSeverityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::NotificationType,
    :schema_type => XSD::QName.new(NsV22, "NotificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PaymentType,
    :schema_type => XSD::QName.new(NsV22, "PaymentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PendingShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV22, "PendingShipmentProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PendingShipmentType,
    :schema_type => XSD::QName.new(NsV22, "PendingShipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PhysicalPackagingType,
    :schema_type => XSD::QName.new(NsV22, "PhysicalPackagingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupBuildingLocationType,
    :schema_type => XSD::QName.new(NsV22, "PickupBuildingLocationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupEventType,
    :schema_type => XSD::QName.new(NsV22, "PickupEventType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupRequestType,
    :schema_type => XSD::QName.new(NsV22, "PickupRequestType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupServiceCategoryType,
    :schema_type => XSD::QName.new(NsV22, "PickupServiceCategoryType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupType,
    :schema_type => XSD::QName.new(NsV22, "PickupType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PriorityAlertEnhancementType,
    :schema_type => XSD::QName.new(NsV22, "PriorityAlertEnhancementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RateLevelBasisType,
    :schema_type => XSD::QName.new(NsV22, "RateLevelBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RateTypeBasisType,
    :schema_type => XSD::QName.new(NsV22, "RateTypeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RecommendedDocumentType,
    :schema_type => XSD::QName.new(NsV22, "RecommendedDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::RequestedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV22, "RequestedShippingDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ReturnEMailAllowedSpecialServiceType,
    :schema_type => XSD::QName.new(NsV22, "ReturnEMailAllowedSpecialServiceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ReturnType,
    :schema_type => XSD::QName.new(NsV22, "ReturnType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentDryIceProcessingOptionType,
    :schema_type => XSD::QName.new(NsV22, "ShipmentDryIceProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentNotificationAggregationType,
    :schema_type => XSD::QName.new(NsV22, "ShipmentNotificationAggregationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::ShipmentNotificationRoleType,
    :schema_type => XSD::QName.new(NsV22, "ShipmentNotificationRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::SpecialEquipmentType,
    :schema_type => XSD::QName.new(NsV22, "SpecialEquipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TinType,
    :schema_type => XSD::QName.new(NsV22, "TinType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TrackingIdType,
    :schema_type => XSD::QName.new(NsV22, "TrackingIdType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TrailerSizeType,
    :schema_type => XSD::QName.new(NsV22, "TrailerSizeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::TruckType,
    :schema_type => XSD::QName.new(NsV22, "TruckType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::UploadDocumentIdProducer,
    :schema_type => XSD::QName.new(NsV22, "UploadDocumentIdProducer")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::UploadDocumentProducerType,
    :schema_type => XSD::QName.new(NsV22, "UploadDocumentProducerType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::UploadDocumentType,
    :schema_type => XSD::QName.new(NsV22, "UploadDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::WeighingScaleType,
    :schema_type => XSD::QName.new(NsV22, "WeighingScaleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::WeightUnits,
    :schema_type => XSD::QName.new(NsV22, "WeightUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CancelPickupReply,
    :schema_name => XSD::QName.new(NsV22, "CancelPickupReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Pickup::Notification[]", XSD::QName.new(NsV22, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Message")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CancelPickupRequest,
    :schema_name => XSD::QName.new(NsV22, "CancelPickupRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Pickup::WebAuthenticationDetail", XSD::QName.new(NsV22, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Pickup::ClientDetail", XSD::QName.new(NsV22, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["carrierCode", ["FedexWebServices::Soap::Pickup::CarrierCodeType", XSD::QName.new(NsV22, "CarrierCode")], [0, 1]],
      ["pickupConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PickupConfirmationNumber")], [0, 1]],
      ["scheduledDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "ScheduledDate")], [0, 1]],
      ["endDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "EndDate")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Location")], [0, 1]],
      ["remarks", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Remarks")], [0, 1]],
      ["shippingChargesPayment", ["FedexWebServices::Soap::Pickup::Payment", XSD::QName.new(NsV22, "ShippingChargesPayment")], [0, 1]],
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Reason")], [0, 1]],
      ["contactName", ["SOAP::SOAPString", XSD::QName.new(NsV22, "ContactName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PhoneExtension")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CreatePickupReply,
    :schema_name => XSD::QName.new(NsV22, "CreatePickupReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Pickup::Notification[]", XSD::QName.new(NsV22, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["pickupConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PickupConfirmationNumber")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Location")], [0, 1]],
      ["messageCode", ["SOAP::SOAPString", XSD::QName.new(NsV22, "MessageCode")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Message")], [0, 1]],
      ["pRPControlNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "PRPControlNumber")], [0, 1]],
      ["lastAccessTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "LastAccessTime")], [0, 1]],
      ["completedFreightPickupDetail", ["FedexWebServices::Soap::Pickup::CompletedFreightPickupDetail", XSD::QName.new(NsV22, "CompletedFreightPickupDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::CreatePickupRequest,
    :schema_name => XSD::QName.new(NsV22, "CreatePickupRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Pickup::WebAuthenticationDetail", XSD::QName.new(NsV22, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Pickup::ClientDetail", XSD::QName.new(NsV22, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["associatedAccountNumber", ["FedexWebServices::Soap::Pickup::AssociatedAccount", XSD::QName.new(NsV22, "AssociatedAccountNumber")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV22, "TrackingNumber")], [0, 1]],
      ["originDetail", ["FedexWebServices::Soap::Pickup::PickupOriginDetail", XSD::QName.new(NsV22, "OriginDetail")], [0, 1]],
      ["pickupServiceCategory", ["FedexWebServices::Soap::Pickup::PickupServiceCategoryType", XSD::QName.new(NsV22, "PickupServiceCategory")], [0, 1]],
      ["freightPickupDetail", ["FedexWebServices::Soap::Pickup::FreightPickupDetail", XSD::QName.new(NsV22, "FreightPickupDetail")], [0, 1]],
      ["expressFreightDetail", ["FedexWebServices::Soap::Pickup::ExpressFreightPickupDetail", XSD::QName.new(NsV22, "ExpressFreightDetail")], [0, 1]],
      ["packageCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "PackageCount")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::Pickup::Weight", XSD::QName.new(NsV22, "TotalWeight")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Pickup::CarrierCodeType", XSD::QName.new(NsV22, "CarrierCode")], [0, 1]],
      ["oversizePackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV22, "OversizePackageCount")], [0, 1]],
      ["remarks", ["SOAP::SOAPString", XSD::QName.new(NsV22, "Remarks")], [0, 1]],
      ["commodityDescription", ["SOAP::SOAPString", XSD::QName.new(NsV22, "CommodityDescription")], [0, 1]],
      ["countryRelationship", ["FedexWebServices::Soap::Pickup::CountryRelationshipType", XSD::QName.new(NsV22, "CountryRelationship")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupAvailabilityReply,
    :schema_name => XSD::QName.new(NsV22, "PickupAvailabilityReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Pickup::NotificationSeverityType", XSD::QName.new(NsV22, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Pickup::Notification[]", XSD::QName.new(NsV22, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["requestTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV22, "RequestTimestamp")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Pickup::PickupScheduleOption[]", XSD::QName.new(NsV22, "Options")], [0, nil]],
      ["closeTimeType", ["FedexWebServices::Soap::Pickup::CloseTimeType", XSD::QName.new(NsV22, "CloseTimeType")], [0, 1]],
      ["closeTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "CloseTime")], [0, 1]],
      ["openTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "OpenTime")], [0, 1]],
      ["localTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "LocalTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Pickup::PickupAvailabilityRequest,
    :schema_name => XSD::QName.new(NsV22, "PickupAvailabilityRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Pickup::WebAuthenticationDetail", XSD::QName.new(NsV22, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Pickup::ClientDetail", XSD::QName.new(NsV22, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Pickup::TransactionDetail", XSD::QName.new(NsV22, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Pickup::VersionId", XSD::QName.new(NsV22, "Version")]],
      ["pickupType", ["FedexWebServices::Soap::Pickup::PickupType", XSD::QName.new(NsV22, "PickupType")], [0, 1]],
      ["accountNumber", ["FedexWebServices::Soap::Pickup::AssociatedAccount", XSD::QName.new(NsV22, "AccountNumber")], [0, 1]],
      ["pickupAddress", ["FedexWebServices::Soap::Pickup::Address", XSD::QName.new(NsV22, "PickupAddress")], [0, 1]],
      ["pickupRequestType", ["FedexWebServices::Soap::Pickup::PickupRequestType[]", XSD::QName.new(NsV22, "PickupRequestType")], [0, nil]],
      ["dispatchDate", ["SOAP::SOAPDate", XSD::QName.new(NsV22, "DispatchDate")], [0, 1]],
      ["numberOfBusinessDays", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV22, "NumberOfBusinessDays")], [0, 1]],
      ["packageReadyTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "PackageReadyTime")], [0, 1]],
      ["customerCloseTime", ["SOAP::SOAPTime", XSD::QName.new(NsV22, "CustomerCloseTime")], [0, 1]],
      ["carriers", ["FedexWebServices::Soap::Pickup::CarrierCodeType[]", XSD::QName.new(NsV22, "Carriers")], [0, nil]],
      ["shipmentAttributes", ["FedexWebServices::Soap::Pickup::PickupShipmentAttributes", XSD::QName.new(NsV22, "ShipmentAttributes")], [0, 1]],
      ["packageDetails", ["FedexWebServices::Soap::Pickup::RequestedPickupPackageDetail[]", XSD::QName.new(NsV22, "PackageDetails")], [0, nil]]
    ]
  )
end

end; end; end
