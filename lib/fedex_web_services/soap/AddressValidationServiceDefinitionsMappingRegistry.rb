# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.4)
require_relative 'AddressValidationServiceDefinitions.rb'
require 'soap/mapping'

module FedexWebServices; module Soap; module AddressValidation

module AddressValidationServiceDefinitionsMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsV4 = "http://fedex.com/ws/addressvalidation/v4"

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::Address,
    :schema_type => XSD::QName.new(NsV4, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV4, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV4, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV4, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV4, "Residential")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressAttribute,
    :schema_type => XSD::QName.new(NsV4, "AddressAttribute"),
    :schema_element => [
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Name")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressToValidate,
    :schema_type => XSD::QName.new(NsV4, "AddressToValidate"),
    :schema_element => [
      ["clientReferenceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ClientReferenceId")], [0, 1]],
      ["contact", ["FedexWebServices::Soap::AddressValidation::Contact", XSD::QName.new(NsV4, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::AddressValidation::Address", XSD::QName.new(NsV4, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressValidationReply,
    :schema_type => XSD::QName.new(NsV4, "AddressValidationReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::AddressValidation::NotificationSeverityType", XSD::QName.new(NsV4, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::AddressValidation::Notification[]", XSD::QName.new(NsV4, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::AddressValidation::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::AddressValidation::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["replyTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV4, "ReplyTimestamp")], [0, 1]],
      ["addressResults", ["FedexWebServices::Soap::AddressValidation::AddressValidationResult[]", XSD::QName.new(NsV4, "AddressResults")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressValidationRequest,
    :schema_type => XSD::QName.new(NsV4, "AddressValidationRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::AddressValidation::WebAuthenticationDetail", XSD::QName.new(NsV4, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::AddressValidation::ClientDetail", XSD::QName.new(NsV4, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::AddressValidation::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::AddressValidation::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["inEffectAsOfTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV4, "InEffectAsOfTimestamp")], [0, 1]],
      ["addressesToValidate", ["FedexWebServices::Soap::AddressValidation::AddressToValidate[]", XSD::QName.new(NsV4, "AddressesToValidate")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressValidationResult,
    :schema_type => XSD::QName.new(NsV4, "AddressValidationResult"),
    :schema_element => [
      ["clientReferenceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ClientReferenceId")], [0, 1]],
      ["state", ["FedexWebServices::Soap::AddressValidation::OperationalAddressStateType", XSD::QName.new(NsV4, "State")], [0, 1]],
      ["classification", ["FedexWebServices::Soap::AddressValidation::FedExAddressClassificationType", XSD::QName.new(NsV4, "Classification")], [0, 1]],
      ["effectiveContact", ["FedexWebServices::Soap::AddressValidation::Contact", XSD::QName.new(NsV4, "EffectiveContact")], [0, 1]],
      ["effectiveAddress", ["FedexWebServices::Soap::AddressValidation::Address", XSD::QName.new(NsV4, "EffectiveAddress")], [0, 1]],
      ["parsedAddressPartsDetail", ["FedexWebServices::Soap::AddressValidation::ParsedAddressPartsDetail", XSD::QName.new(NsV4, "ParsedAddressPartsDetail")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::AddressValidation::AddressAttribute[]", XSD::QName.new(NsV4, "Attributes")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::ClientDetail,
    :schema_type => XSD::QName.new(NsV4, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "MeterNumber")]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "IntegratorId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::AddressValidation::Localization", XSD::QName.new(NsV4, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::Contact,
    :schema_type => XSD::QName.new(NsV4, "Contact"),
    :schema_element => [
      ["contactId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ContactId")], [0, 1]],
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV4, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV4, "EMailAddress")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::Localization,
    :schema_type => XSD::QName.new(NsV4, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LocaleCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::Notification,
    :schema_type => XSD::QName.new(NsV4, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::AddressValidation::NotificationSeverityType", XSD::QName.new(NsV4, "Severity")], [0, 1]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Source")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::AddressValidation::NotificationParameter[]", XSD::QName.new(NsV4, "MessageParameters")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::NotificationParameter,
    :schema_type => XSD::QName.new(NsV4, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::ParsedAddressPartsDetail,
    :schema_type => XSD::QName.new(NsV4, "ParsedAddressPartsDetail"),
    :schema_element => [
      ["parsedStreetLine", ["FedexWebServices::Soap::AddressValidation::ParsedStreetLineDetail", XSD::QName.new(NsV4, "ParsedStreetLine")], [0, 1]],
      ["parsedPostalCode", ["FedexWebServices::Soap::AddressValidation::ParsedPostalCodeDetail", XSD::QName.new(NsV4, "ParsedPostalCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::ParsedPostalCodeDetail,
    :schema_type => XSD::QName.new(NsV4, "ParsedPostalCodeDetail"),
    :schema_element => [
      ["base", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Base")], [0, 1]],
      ["addOn", ["SOAP::SOAPString", XSD::QName.new(NsV4, "AddOn")], [0, 1]],
      ["deliveryPoint", ["SOAP::SOAPString", XSD::QName.new(NsV4, "DeliveryPoint")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::ParsedStreetLineDetail,
    :schema_type => XSD::QName.new(NsV4, "ParsedStreetLineDetail"),
    :schema_element => [
      ["houseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "HouseNumber")], [0, 1]],
      ["preStreetType", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PreStreetType")], [0, 1]],
      ["leadingDirectional", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LeadingDirectional")], [0, 1]],
      ["streetName", ["SOAP::SOAPString", XSD::QName.new(NsV4, "StreetName")], [0, 1]],
      ["streetSuffix", ["SOAP::SOAPString", XSD::QName.new(NsV4, "StreetSuffix")], [0, 1]],
      ["trailingDirectional", ["SOAP::SOAPString", XSD::QName.new(NsV4, "TrailingDirectional")], [0, 1]],
      ["unitLabel", ["SOAP::SOAPString", XSD::QName.new(NsV4, "UnitLabel")], [0, 1]],
      ["unitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "UnitNumber")], [0, 1]],
      ["ruralRoute", ["SOAP::SOAPString", XSD::QName.new(NsV4, "RuralRoute")], [0, 1]],
      ["pOBox", ["SOAP::SOAPString", XSD::QName.new(NsV4, "POBox")], [0, 1]],
      ["building", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Building")], [0, 1]],
      ["organization", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Organization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::TransactionDetail,
    :schema_type => XSD::QName.new(NsV4, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::AddressValidation::Localization", XSD::QName.new(NsV4, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV4, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::AddressValidation::WebAuthenticationCredential", XSD::QName.new(NsV4, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::AddressValidation::WebAuthenticationCredential", XSD::QName.new(NsV4, "UserCredential")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV4, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Password")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::VersionId,
    :schema_type => XSD::QName.new(NsV4, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Minor")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AutoConfigurationType,
    :schema_type => XSD::QName.new(NsV4, "AutoConfigurationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::FedExAddressClassificationType,
    :schema_type => XSD::QName.new(NsV4, "FedExAddressClassificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV4, "NotificationSeverityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::OperationalAddressStateType,
    :schema_type => XSD::QName.new(NsV4, "OperationalAddressStateType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::Address,
    :schema_type => XSD::QName.new(NsV4, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV4, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV4, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV4, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV4, "Residential")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressAttribute,
    :schema_type => XSD::QName.new(NsV4, "AddressAttribute"),
    :schema_element => [
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Name")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressToValidate,
    :schema_type => XSD::QName.new(NsV4, "AddressToValidate"),
    :schema_element => [
      ["clientReferenceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ClientReferenceId")], [0, 1]],
      ["contact", ["FedexWebServices::Soap::AddressValidation::Contact", XSD::QName.new(NsV4, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::AddressValidation::Address", XSD::QName.new(NsV4, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressValidationReply,
    :schema_type => XSD::QName.new(NsV4, "AddressValidationReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::AddressValidation::NotificationSeverityType", XSD::QName.new(NsV4, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::AddressValidation::Notification[]", XSD::QName.new(NsV4, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::AddressValidation::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::AddressValidation::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["replyTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV4, "ReplyTimestamp")], [0, 1]],
      ["addressResults", ["FedexWebServices::Soap::AddressValidation::AddressValidationResult[]", XSD::QName.new(NsV4, "AddressResults")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressValidationRequest,
    :schema_type => XSD::QName.new(NsV4, "AddressValidationRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::AddressValidation::WebAuthenticationDetail", XSD::QName.new(NsV4, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::AddressValidation::ClientDetail", XSD::QName.new(NsV4, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::AddressValidation::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::AddressValidation::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["inEffectAsOfTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV4, "InEffectAsOfTimestamp")], [0, 1]],
      ["addressesToValidate", ["FedexWebServices::Soap::AddressValidation::AddressToValidate[]", XSD::QName.new(NsV4, "AddressesToValidate")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressValidationResult,
    :schema_type => XSD::QName.new(NsV4, "AddressValidationResult"),
    :schema_element => [
      ["clientReferenceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ClientReferenceId")], [0, 1]],
      ["state", ["FedexWebServices::Soap::AddressValidation::OperationalAddressStateType", XSD::QName.new(NsV4, "State")], [0, 1]],
      ["classification", ["FedexWebServices::Soap::AddressValidation::FedExAddressClassificationType", XSD::QName.new(NsV4, "Classification")], [0, 1]],
      ["effectiveContact", ["FedexWebServices::Soap::AddressValidation::Contact", XSD::QName.new(NsV4, "EffectiveContact")], [0, 1]],
      ["effectiveAddress", ["FedexWebServices::Soap::AddressValidation::Address", XSD::QName.new(NsV4, "EffectiveAddress")], [0, 1]],
      ["parsedAddressPartsDetail", ["FedexWebServices::Soap::AddressValidation::ParsedAddressPartsDetail", XSD::QName.new(NsV4, "ParsedAddressPartsDetail")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::AddressValidation::AddressAttribute[]", XSD::QName.new(NsV4, "Attributes")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::ClientDetail,
    :schema_type => XSD::QName.new(NsV4, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "MeterNumber")]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "IntegratorId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::AddressValidation::Localization", XSD::QName.new(NsV4, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::Contact,
    :schema_type => XSD::QName.new(NsV4, "Contact"),
    :schema_element => [
      ["contactId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ContactId")], [0, 1]],
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV4, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV4, "EMailAddress")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::Localization,
    :schema_type => XSD::QName.new(NsV4, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LocaleCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::Notification,
    :schema_type => XSD::QName.new(NsV4, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::AddressValidation::NotificationSeverityType", XSD::QName.new(NsV4, "Severity")], [0, 1]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Source")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::AddressValidation::NotificationParameter[]", XSD::QName.new(NsV4, "MessageParameters")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::NotificationParameter,
    :schema_type => XSD::QName.new(NsV4, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::ParsedAddressPartsDetail,
    :schema_type => XSD::QName.new(NsV4, "ParsedAddressPartsDetail"),
    :schema_element => [
      ["parsedStreetLine", ["FedexWebServices::Soap::AddressValidation::ParsedStreetLineDetail", XSD::QName.new(NsV4, "ParsedStreetLine")], [0, 1]],
      ["parsedPostalCode", ["FedexWebServices::Soap::AddressValidation::ParsedPostalCodeDetail", XSD::QName.new(NsV4, "ParsedPostalCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::ParsedPostalCodeDetail,
    :schema_type => XSD::QName.new(NsV4, "ParsedPostalCodeDetail"),
    :schema_element => [
      ["base", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Base")], [0, 1]],
      ["addOn", ["SOAP::SOAPString", XSD::QName.new(NsV4, "AddOn")], [0, 1]],
      ["deliveryPoint", ["SOAP::SOAPString", XSD::QName.new(NsV4, "DeliveryPoint")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::ParsedStreetLineDetail,
    :schema_type => XSD::QName.new(NsV4, "ParsedStreetLineDetail"),
    :schema_element => [
      ["houseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "HouseNumber")], [0, 1]],
      ["preStreetType", ["SOAP::SOAPString", XSD::QName.new(NsV4, "PreStreetType")], [0, 1]],
      ["leadingDirectional", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LeadingDirectional")], [0, 1]],
      ["streetName", ["SOAP::SOAPString", XSD::QName.new(NsV4, "StreetName")], [0, 1]],
      ["streetSuffix", ["SOAP::SOAPString", XSD::QName.new(NsV4, "StreetSuffix")], [0, 1]],
      ["trailingDirectional", ["SOAP::SOAPString", XSD::QName.new(NsV4, "TrailingDirectional")], [0, 1]],
      ["unitLabel", ["SOAP::SOAPString", XSD::QName.new(NsV4, "UnitLabel")], [0, 1]],
      ["unitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "UnitNumber")], [0, 1]],
      ["ruralRoute", ["SOAP::SOAPString", XSD::QName.new(NsV4, "RuralRoute")], [0, 1]],
      ["pOBox", ["SOAP::SOAPString", XSD::QName.new(NsV4, "POBox")], [0, 1]],
      ["building", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Building")], [0, 1]],
      ["organization", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Organization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::TransactionDetail,
    :schema_type => XSD::QName.new(NsV4, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::AddressValidation::Localization", XSD::QName.new(NsV4, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV4, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::AddressValidation::WebAuthenticationCredential", XSD::QName.new(NsV4, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::AddressValidation::WebAuthenticationCredential", XSD::QName.new(NsV4, "UserCredential")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV4, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Password")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::VersionId,
    :schema_type => XSD::QName.new(NsV4, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Minor")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AutoConfigurationType,
    :schema_type => XSD::QName.new(NsV4, "AutoConfigurationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::FedExAddressClassificationType,
    :schema_type => XSD::QName.new(NsV4, "FedExAddressClassificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV4, "NotificationSeverityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::OperationalAddressStateType,
    :schema_type => XSD::QName.new(NsV4, "OperationalAddressStateType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressValidationReply,
    :schema_name => XSD::QName.new(NsV4, "AddressValidationReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::AddressValidation::NotificationSeverityType", XSD::QName.new(NsV4, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::AddressValidation::Notification[]", XSD::QName.new(NsV4, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::AddressValidation::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::AddressValidation::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["replyTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV4, "ReplyTimestamp")], [0, 1]],
      ["addressResults", ["FedexWebServices::Soap::AddressValidation::AddressValidationResult[]", XSD::QName.new(NsV4, "AddressResults")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::AddressValidation::AddressValidationRequest,
    :schema_name => XSD::QName.new(NsV4, "AddressValidationRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::AddressValidation::WebAuthenticationDetail", XSD::QName.new(NsV4, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::AddressValidation::ClientDetail", XSD::QName.new(NsV4, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::AddressValidation::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::AddressValidation::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["inEffectAsOfTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV4, "InEffectAsOfTimestamp")], [0, 1]],
      ["addressesToValidate", ["FedexWebServices::Soap::AddressValidation::AddressToValidate[]", XSD::QName.new(NsV4, "AddressesToValidate")], [0, nil]]
    ]
  )
end

end; end; end
