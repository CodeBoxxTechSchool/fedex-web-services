# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.4)
require_relative 'RateServiceDefinitions.rb'
require 'soap/mapping'

module FedexWebServices; module Soap; module Rate

module RateServiceDefinitionsMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsV28 = "http://fedex.com/ws/rate/v28"

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::AdditionalLabelsDetail,
    :schema_type => XSD::QName.new(NsV28, "AdditionalLabelsDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::AdditionalLabelsType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Count")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Address,
    :schema_type => XSD::QName.new(NsV28, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV28, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "Residential")], [0, 1]],
      ["geographicCoordinates", ["SOAP::SOAPString", XSD::QName.new(NsV28, "GeographicCoordinates")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::AlcoholDetail,
    :schema_type => XSD::QName.new(NsV28, "AlcoholDetail"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::Rate::AlcoholRecipientType", XSD::QName.new(NsV28, "RecipientType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::AncillaryFeeAndTax,
    :schema_type => XSD::QName.new(NsV28, "AncillaryFeeAndTax"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::AncillaryFeeAndTaxType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::AssociatedFreightLineItemDetail,
    :schema_type => XSD::QName.new(NsV28, "AssociatedFreightLineItemDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::BatteryClassificationDetail,
    :schema_type => XSD::QName.new(NsV28, "BatteryClassificationDetail"),
    :schema_element => [
      ["material", ["FedexWebServices::Soap::Rate::BatteryMaterialType", XSD::QName.new(NsV28, "Material")], [0, 1]],
      ["packing", ["FedexWebServices::Soap::Rate::BatteryPackingType", XSD::QName.new(NsV28, "Packing")], [0, 1]],
      ["regulatorySubType", ["FedexWebServices::Soap::Rate::BatteryRegulatorySubType", XSD::QName.new(NsV28, "RegulatorySubType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::BrokerDetail,
    :schema_type => XSD::QName.new(NsV28, "BrokerDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::BrokerType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["broker", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "Broker")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CertificateOfOriginDetail,
    :schema_type => XSD::QName.new(NsV28, "CertificateOfOriginDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CleansedAddressAndLocationDetail,
    :schema_type => XSD::QName.new(NsV28, "CleansedAddressAndLocationDetail"),
    :schema_element => [
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryCode")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PostalCode")], [0, 1]],
      ["serviceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceArea")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "LocationNumber")], [0, 1]],
      ["airportId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AirportId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ClientDetail,
    :schema_type => XSD::QName.new(NsV28, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MeterNumber")]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "IntegratorId")], [0, 1]],
      ["region", ["FedexWebServices::Soap::Rate::ExpressRegionCode", XSD::QName.new(NsV28, "Region")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CodAddTransportationChargesDetail,
    :schema_type => XSD::QName.new(NsV28, "CodAddTransportationChargesDetail"),
    :schema_element => [
      ["rateTypeBasis", ["FedexWebServices::Soap::Rate::RateTypeBasisType", XSD::QName.new(NsV28, "RateTypeBasis")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::Rate::CodAddTransportationChargeBasisType", XSD::QName.new(NsV28, "ChargeBasis")], [0, 1]],
      ["chargeBasisLevel", ["FedexWebServices::Soap::Rate::ChargeBasisLevelType", XSD::QName.new(NsV28, "ChargeBasisLevel")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CodDetail,
    :schema_type => XSD::QName.new(NsV28, "CodDetail"),
    :schema_element => [
      ["codCollectionAmount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "CodCollectionAmount")], [0, 1]],
      ["addTransportationChargesDetail", ["FedexWebServices::Soap::Rate::CodAddTransportationChargesDetail", XSD::QName.new(NsV28, "AddTransportationChargesDetail")], [0, 1]],
      ["collectionType", ["FedexWebServices::Soap::Rate::CodCollectionType", XSD::QName.new(NsV28, "CollectionType")], [0, 1]],
      ["codRecipient", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "CodRecipient")], [0, 1]],
      ["financialInstitutionContactAndAddress", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "FinancialInstitutionContactAndAddress")], [0, 1]],
      ["remitToName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RemitToName")], [0, 1]],
      ["referenceIndicator", ["FedexWebServices::Soap::Rate::CodReturnReferenceIndicatorType", XSD::QName.new(NsV28, "ReferenceIndicator")], [0, 1]],
      ["returnTrackingId", ["FedexWebServices::Soap::Rate::TrackingId", XSD::QName.new(NsV28, "ReturnTrackingId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CommercialInvoice,
    :schema_type => XSD::QName.new(NsV28, "CommercialInvoice"),
    :schema_element => [
      ["comments", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Comments")], [0, nil]],
      ["freightCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "FreightCharge")], [0, 1]],
      ["taxesOrMiscellaneousCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TaxesOrMiscellaneousCharge")], [0, 1]],
      ["taxesOrMiscellaneousChargeType", ["FedexWebServices::Soap::Rate::TaxesOrMiscellaneousChargeType", XSD::QName.new(NsV28, "TaxesOrMiscellaneousChargeType")], [0, 1]],
      ["packingCosts", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "PackingCosts")], [0, 1]],
      ["handlingCosts", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "HandlingCosts")], [0, 1]],
      ["specialInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecialInstructions")], [0, 1]],
      ["declarationStatement", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeclarationStatement")], [0, 1]],
      ["paymentTerms", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PaymentTerms")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::Rate::PurposeOfShipmentType", XSD::QName.new(NsV28, "Purpose")], [0, 1]],
      ["originatorName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "OriginatorName")], [0, 1]],
      ["termsOfSale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TermsOfSale")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CommercialInvoiceDetail,
    :schema_type => XSD::QName.new(NsV28, "CommercialInvoiceDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CommitDetail,
    :schema_type => XSD::QName.new(NsV28, "CommitDetail"),
    :schema_element => [
      ["commodityName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CommodityName")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["serviceDescription", ["FedexWebServices::Soap::Rate::ServiceDescription", XSD::QName.new(NsV28, "ServiceDescription")], [0, 1]],
      ["appliedOptions", ["FedexWebServices::Soap::Rate::ServiceOptionType[]", XSD::QName.new(NsV28, "AppliedOptions")], [0, nil]],
      ["appliedSubOptions", ["FedexWebServices::Soap::Rate::ServiceSubOptionDetail", XSD::QName.new(NsV28, "AppliedSubOptions")], [0, 1]],
      ["derivedShipmentSignatureOption", ["FedexWebServices::Soap::Rate::SignatureOptionDetail", XSD::QName.new(NsV28, "DerivedShipmentSignatureOption")], [0, 1]],
      ["derivedPackageSignatureOptions", ["FedexWebServices::Soap::Rate::SignatureOptionDetail[]", XSD::QName.new(NsV28, "DerivedPackageSignatureOptions")], [0, nil]],
      ["derivedOriginDetail", ["FedexWebServices::Soap::Rate::CleansedAddressAndLocationDetail", XSD::QName.new(NsV28, "DerivedOriginDetail")], [0, 1]],
      ["derivedDestinationDetail", ["FedexWebServices::Soap::Rate::CleansedAddressAndLocationDetail", XSD::QName.new(NsV28, "DerivedDestinationDetail")], [0, 1]],
      ["commitTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "CommitTimestamp")], [0, 1]],
      ["dayOfWeek", ["FedexWebServices::Soap::Rate::DayOfWeekType", XSD::QName.new(NsV28, "DayOfWeek")], [0, 1]],
      ["transitTime", ["FedexWebServices::Soap::Rate::TransitTimeType", XSD::QName.new(NsV28, "TransitTime")], [0, 1]],
      ["maximumTransitTime", ["FedexWebServices::Soap::Rate::TransitTimeType", XSD::QName.new(NsV28, "MaximumTransitTime")], [0, 1]],
      ["destinationServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationServiceArea")], [0, 1]],
      ["brokerAddress", ["FedexWebServices::Soap::Rate::Address", XSD::QName.new(NsV28, "BrokerAddress")], [0, 1]],
      ["brokerLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "BrokerLocationId")], [0, 1]],
      ["brokerCommitTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "BrokerCommitTimestamp")], [0, 1]],
      ["brokerCommitDayOfWeek", ["FedexWebServices::Soap::Rate::DayOfWeekType", XSD::QName.new(NsV28, "BrokerCommitDayOfWeek")], [0, 1]],
      ["brokerToDestinationDays", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "BrokerToDestinationDays")], [0, 1]],
      ["proofOfDeliveryDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ProofOfDeliveryDate")], [0, 1]],
      ["proofOfDeliveryDayOfWeek", ["FedexWebServices::Soap::Rate::DayOfWeekType", XSD::QName.new(NsV28, "ProofOfDeliveryDayOfWeek")], [0, 1]],
      ["commitMessages", ["FedexWebServices::Soap::Rate::Notification[]", XSD::QName.new(NsV28, "CommitMessages")], [0, nil]],
      ["deliveryMessages", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DeliveryMessages")], [0, nil]],
      ["delayDetails", ["FedexWebServices::Soap::Rate::DelayDetail[]", XSD::QName.new(NsV28, "DelayDetails")], [0, nil]],
      ["documentContent", ["FedexWebServices::Soap::Rate::InternationalDocumentContentType", XSD::QName.new(NsV28, "DocumentContent")], [0, 1]],
      ["requiredDocuments", ["FedexWebServices::Soap::Rate::RequiredShippingDocumentType[]", XSD::QName.new(NsV28, "RequiredDocuments")], [0, nil]],
      ["freightCommitDetail", ["FedexWebServices::Soap::Rate::FreightCommitDetail", XSD::QName.new(NsV28, "FreightCommitDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Commodity,
    :schema_type => XSD::QName.new(NsV28, "Commodity"),
    :schema_element => [
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["numberOfPieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "NumberOfPieces")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::Rate::CommodityPurposeType", XSD::QName.new(NsV28, "Purpose")], [0, 1]],
      ["countryOfManufacture", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryOfManufacture")], [0, 1]],
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HarmonizedCode")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["quantityUnits", ["SOAP::SOAPString", XSD::QName.new(NsV28, "QuantityUnits")], [0, 1]],
      ["additionalMeasures", ["FedexWebServices::Soap::Rate::Measure[]", XSD::QName.new(NsV28, "AdditionalMeasures")], [0, nil]],
      ["unitPrice", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "UnitPrice")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "CustomsValue")], [0, 1]],
      ["exciseConditions", ["FedexWebServices::Soap::Rate::EdtExciseCondition[]", XSD::QName.new(NsV28, "ExciseConditions")], [0, nil]],
      ["exportLicenseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExportLicenseNumber")], [0, 1]],
      ["exportLicenseExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ExportLicenseExpirationDate")], [0, 1]],
      ["cIMarksAndNumbers", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CIMarksAndNumbers")], [0, 1]],
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PartNumber")], [0, 1]],
      ["naftaDetail", ["FedexWebServices::Soap::Rate::NaftaCommodityDetail", XSD::QName.new(NsV28, "NaftaDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ConfigurableLabelReferenceEntry,
    :schema_type => XSD::QName.new(NsV28, "ConfigurableLabelReferenceEntry"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ZoneNumber")], [0, 1]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LiteralValue")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ConsolidationKey,
    :schema_type => XSD::QName.new(NsV28, "ConsolidationKey"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::ConsolidationType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["index", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Index")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Contact,
    :schema_type => XSD::QName.new(NsV28, "Contact"),
    :schema_element => [
      ["contactId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContactId")], [0, 1]],
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EMailAddress")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ContactAndAddress,
    :schema_type => XSD::QName.new(NsV28, "ContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::Rate::Contact", XSD::QName.new(NsV28, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Rate::Address", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ContentRecord,
    :schema_type => XSD::QName.new(NsV28, "ContentRecord"),
    :schema_element => [
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PartNumber")], [0, 1]],
      ["itemNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemNumber")], [0, 1]],
      ["receivedQuantity", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "ReceivedQuantity")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CurrencyExchangeRate,
    :schema_type => XSD::QName.new(NsV28, "CurrencyExchangeRate"),
    :schema_element => [
      ["fromCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FromCurrency")], [0, 1]],
      ["intoCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "IntoCurrency")], [0, 1]],
      ["rate", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Rate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomDeliveryWindowDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomDeliveryWindowDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::CustomDeliveryWindowType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["requestTime", ["SOAP::SOAPTime", XSD::QName.new(NsV28, "RequestTime")], [0, 1]],
      ["requestRange", ["FedexWebServices::Soap::Rate::DateRange", XSD::QName.new(NsV28, "RequestRange")], [0, 1]],
      ["requestDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "RequestDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomDocumentDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomDocumentDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::Rate::LabelPrintingOrientationType", XSD::QName.new(NsV28, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::Rate::LabelRotationType", XSD::QName.new(NsV28, "LabelRotation")], [0, 1]],
      ["specificationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecificationId")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Rate::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelBarcodeEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelBarcodeEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["barHeight", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "BarHeight")], [0, 1]],
      ["thinBarWidth", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "ThinBarWidth")], [0, 1]],
      ["barcodeSymbology", ["FedexWebServices::Soap::Rate::BarcodeSymbologyType", XSD::QName.new(NsV28, "BarcodeSymbology")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelBoxEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "TopLeftCorner")], [0, 1]],
      ["bottomRightCorner", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "BottomRightCorner")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelDetail"),
    :schema_element => [
      ["coordinateUnits", ["FedexWebServices::Soap::Rate::CustomLabelCoordinateUnits", XSD::QName.new(NsV28, "CoordinateUnits")], [0, 1]],
      ["textEntries", ["FedexWebServices::Soap::Rate::CustomLabelTextEntry[]", XSD::QName.new(NsV28, "TextEntries")], [0, nil]],
      ["graphicEntries", ["FedexWebServices::Soap::Rate::CustomLabelGraphicEntry[]", XSD::QName.new(NsV28, "GraphicEntries")], [0, nil]],
      ["boxEntries", ["FedexWebServices::Soap::Rate::CustomLabelBoxEntry[]", XSD::QName.new(NsV28, "BoxEntries")], [0, nil]],
      ["textBoxEntries", ["FedexWebServices::Soap::Rate::CustomLabelTextBoxEntry[]", XSD::QName.new(NsV28, "TextBoxEntries")], [0, nil]],
      ["barcodeEntries", ["FedexWebServices::Soap::Rate::CustomLabelBarcodeEntry[]", XSD::QName.new(NsV28, "BarcodeEntries")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelGraphicEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelGraphicEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["printerGraphicId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PrinterGraphicId")], [0, 1]],
      ["fileGraphicFullName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FileGraphicFullName")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelPosition,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelPosition"),
    :schema_element => [
      ["x", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "X")], [0, 1]],
      ["y", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Y")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelTextBoxEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelTextBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "TopLeftCorner")], [0, 1]],
      ["bottomRightCorner", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "BottomRightCorner")], [0, 1]],
      ["position", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::Rate::RotationType", XSD::QName.new(NsV28, "Rotation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelTextEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelTextEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::Rate::RotationType", XSD::QName.new(NsV28, "Rotation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerImageUsage,
    :schema_type => XSD::QName.new(NsV28, "CustomerImageUsage"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::CustomerImageUsageType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["id", ["FedexWebServices::Soap::Rate::ImageId", XSD::QName.new(NsV28, "Id")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerReference,
    :schema_type => XSD::QName.new(NsV28, "CustomerReference"),
    :schema_element => [
      ["customerReferenceType", ["FedexWebServices::Soap::Rate::CustomerReferenceType", XSD::QName.new(NsV28, "CustomerReferenceType")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerSpecifiedLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomerSpecifiedLabelDetail"),
    :schema_element => [
      ["docTabContent", ["FedexWebServices::Soap::Rate::DocTabContent", XSD::QName.new(NsV28, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::Rate::RelativeVerticalPositionType", XSD::QName.new(NsV28, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Rate::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]],
      ["configurableReferenceEntries", ["FedexWebServices::Soap::Rate::ConfigurableLabelReferenceEntry[]", XSD::QName.new(NsV28, "ConfigurableReferenceEntries")], [0, nil]],
      ["maskedData", ["FedexWebServices::Soap::Rate::LabelMaskableDataType[]", XSD::QName.new(NsV28, "MaskedData")], [0, nil]],
      ["secondaryBarcode", ["FedexWebServices::Soap::Rate::SecondaryBarcodeType", XSD::QName.new(NsV28, "SecondaryBarcode")], [0, 1]],
      ["termsAndConditionsLocalization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "TermsAndConditionsLocalization")], [0, 1]],
      ["regulatoryLabels", ["FedexWebServices::Soap::Rate::RegulatoryLabelContentDetail[]", XSD::QName.new(NsV28, "RegulatoryLabels")], [0, nil]],
      ["additionalLabels", ["FedexWebServices::Soap::Rate::AdditionalLabelsDetail[]", XSD::QName.new(NsV28, "AdditionalLabels")], [0, nil]],
      ["airWaybillSuppressionCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "AirWaybillSuppressionCount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomsClearanceDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomsClearanceDetail"),
    :schema_element => [
      ["brokers", ["FedexWebServices::Soap::Rate::BrokerDetail[]", XSD::QName.new(NsV28, "Brokers")], [0, nil]],
      ["clearanceBrokerage", ["FedexWebServices::Soap::Rate::ClearanceBrokerageType", XSD::QName.new(NsV28, "ClearanceBrokerage")], [0, 1]],
      ["customsOptions", ["FedexWebServices::Soap::Rate::CustomsOptionDetail", XSD::QName.new(NsV28, "CustomsOptions")], [0, 1]],
      ["importerOfRecord", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "ImporterOfRecord")], [0, 1]],
      ["recipientCustomsId", ["FedexWebServices::Soap::Rate::RecipientCustomsId", XSD::QName.new(NsV28, "RecipientCustomsId")], [0, 1]],
      ["dutiesPayment", ["FedexWebServices::Soap::Rate::Payment", XSD::QName.new(NsV28, "DutiesPayment")], [0, 1]],
      ["documentContent", ["FedexWebServices::Soap::Rate::InternationalDocumentContentType", XSD::QName.new(NsV28, "DocumentContent")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "CustomsValue")], [0, 1]],
      ["freightOnValue", ["FedexWebServices::Soap::Rate::FreightOnValueType", XSD::QName.new(NsV28, "FreightOnValue")], [0, 1]],
      ["insuranceCharges", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "InsuranceCharges")], [0, 1]],
      ["partiesToTransactionAreRelated", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "PartiesToTransactionAreRelated")], [0, 1]],
      ["commercialInvoice", ["FedexWebServices::Soap::Rate::CommercialInvoice", XSD::QName.new(NsV28, "CommercialInvoice")], [0, 1]],
      ["commodities", ["FedexWebServices::Soap::Rate::Commodity[]", XSD::QName.new(NsV28, "Commodities")], [0, nil]],
      ["exportDetail", ["FedexWebServices::Soap::Rate::ExportDetail", XSD::QName.new(NsV28, "ExportDetail")], [0, 1]],
      ["regulatoryControls", ["FedexWebServices::Soap::Rate::RegulatoryControlType[]", XSD::QName.new(NsV28, "RegulatoryControls")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomsOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomsOptionDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::CustomsOptionType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsContainer,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsContainer"),
    :schema_element => [
      ["packingType", ["FedexWebServices::Soap::Rate::HazardousContainerPackingType", XSD::QName.new(NsV28, "PackingType")], [0, 1]],
      ["containerType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContainerType")], [0, 1]],
      ["radioactiveContainerClass", ["FedexWebServices::Soap::Rate::RadioactiveContainerClassType", XSD::QName.new(NsV28, "RadioactiveContainerClass")], [0, 1]],
      ["numberOfContainers", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "NumberOfContainers")], [0, 1]],
      ["hazardousCommodities", ["FedexWebServices::Soap::Rate::HazardousCommodityContent[]", XSD::QName.new(NsV28, "HazardousCommodities")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsDetail,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsDetail"),
    :schema_element => [
      ["regulation", ["FedexWebServices::Soap::Rate::HazardousCommodityRegulationType", XSD::QName.new(NsV28, "Regulation")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::Rate::DangerousGoodsAccessibilityType", XSD::QName.new(NsV28, "Accessibility")], [0, 1]],
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "CargoAircraftOnly")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Rate::HazardousCommodityOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]],
      ["packingOption", ["FedexWebServices::Soap::Rate::DangerousGoodsPackingOptionType", XSD::QName.new(NsV28, "PackingOption")], [0, 1]],
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ReferenceId")], [0, 1]],
      ["containers", ["FedexWebServices::Soap::Rate::DangerousGoodsContainer[]", XSD::QName.new(NsV28, "Containers")], [0, nil]],
      ["packaging", ["FedexWebServices::Soap::Rate::HazardousCommodityPackagingDetail", XSD::QName.new(NsV28, "Packaging")], [0, 1]],
      ["signatory", ["FedexWebServices::Soap::Rate::DangerousGoodsSignatory", XSD::QName.new(NsV28, "Signatory")], [0, 1]],
      ["emergencyContactNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmergencyContactNumber")], [0, 1]],
      ["offeror", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Offeror")], [0, 1]],
      ["infectiousSubstanceResponsibleContact", ["FedexWebServices::Soap::Rate::Contact", XSD::QName.new(NsV28, "InfectiousSubstanceResponsibleContact")], [0, 1]],
      ["additionalHandling", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AdditionalHandling")], [0, 1]],
      ["radioactivityDetail", ["FedexWebServices::Soap::Rate::RadioactivityDetail", XSD::QName.new(NsV28, "RadioactivityDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsShippersDeclarationDetail,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsShippersDeclarationDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsSignatory,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsSignatory"),
    :schema_element => [
      ["contactName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContactName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Title")], [0, 1]],
      ["place", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Place")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DateRange,
    :schema_type => XSD::QName.new(NsV28, "DateRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Ends")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DelayDetail,
    :schema_type => XSD::QName.new(NsV28, "DelayDetail"),
    :schema_element => [
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]],
      ["dayOfWeek", ["FedexWebServices::Soap::Rate::DayOfWeekType", XSD::QName.new(NsV28, "DayOfWeek")], [0, 1]],
      ["level", ["FedexWebServices::Soap::Rate::DelayLevelType", XSD::QName.new(NsV28, "Level")], [0, 1]],
      ["point", ["FedexWebServices::Soap::Rate::DelayPointType", XSD::QName.new(NsV28, "Point")], [0, 1]],
      ["type", ["FedexWebServices::Soap::Rate::CommitmentDelayType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DeliveryOnInvoiceAcceptanceDetail,
    :schema_type => XSD::QName.new(NsV28, "DeliveryOnInvoiceAcceptanceDetail"),
    :schema_element => [
      ["recipient", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "Recipient")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Rate::TrackingId", XSD::QName.new(NsV28, "TrackingId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DestinationControlDetail,
    :schema_type => XSD::QName.new(NsV28, "DestinationControlDetail"),
    :schema_element => [
      ["statementTypes", ["FedexWebServices::Soap::Rate::DestinationControlStatementType[]", XSD::QName.new(NsV28, "StatementTypes")], [0, nil]],
      ["destinationCountries", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationCountries")], [0, 1]],
      ["endUser", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EndUser")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Dimensions,
    :schema_type => XSD::QName.new(NsV28, "Dimensions"),
    :schema_element => [
      ["length", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Length")], [0, 1]],
      ["width", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Width")], [0, 1]],
      ["height", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Height")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Rate::LinearUnits", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Distance,
    :schema_type => XSD::QName.new(NsV28, "Distance"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Rate::DistanceUnits", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabContent,
    :schema_type => XSD::QName.new(NsV28, "DocTabContent"),
    :schema_element => [
      ["docTabContentType", ["FedexWebServices::Soap::Rate::DocTabContentType", XSD::QName.new(NsV28, "DocTabContentType")], [0, 1]],
      ["zone001", ["FedexWebServices::Soap::Rate::DocTabContentZone001", XSD::QName.new(NsV28, "Zone001")], [0, 1]],
      ["barcoded", ["FedexWebServices::Soap::Rate::DocTabContentBarcoded", XSD::QName.new(NsV28, "Barcoded")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabContentBarcoded,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentBarcoded"),
    :schema_element => [
      ["symbology", ["FedexWebServices::Soap::Rate::BarcodeSymbologyType", XSD::QName.new(NsV28, "Symbology")], [0, 1]],
      ["specification", ["FedexWebServices::Soap::Rate::DocTabZoneSpecification", XSD::QName.new(NsV28, "Specification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabContentZone001,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentZone001"),
    :schema_element => [
      ["docTabZoneSpecifications", ["FedexWebServices::Soap::Rate::DocTabZoneSpecification[]", XSD::QName.new(NsV28, "DocTabZoneSpecifications")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabZoneSpecification,
    :schema_type => XSD::QName.new(NsV28, "DocTabZoneSpecification"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ZoneNumber")], [0, 1]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LiteralValue")], [0, 1]],
      ["justification", ["FedexWebServices::Soap::Rate::DocTabZoneJustificationType", XSD::QName.new(NsV28, "Justification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocumentFormatOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "DocumentFormatOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Rate::DocumentFormatOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::EMailDetail,
    :schema_type => XSD::QName.new(NsV28, "EMailDetail"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmailAddress")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::EdtCommodityTax,
    :schema_type => XSD::QName.new(NsV28, "EdtCommodityTax"),
    :schema_element => [
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HarmonizedCode")], [0, 1]],
      ["taxes", ["FedexWebServices::Soap::Rate::EdtTaxDetail[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["total", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Total")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::EdtExciseCondition,
    :schema_type => XSD::QName.new(NsV28, "EdtExciseCondition"),
    :schema_element => [
      ["category", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Category")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::EdtTaxDetail,
    :schema_type => XSD::QName.new(NsV28, "EdtTaxDetail"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::Rate::EdtTaxType", XSD::QName.new(NsV28, "TaxType")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "EffectiveDate")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["taxableValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TaxableValue")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["formula", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Formula")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::EtdDetail,
    :schema_type => XSD::QName.new(NsV28, "EtdDetail"),
    :schema_element => [
      ["attributes", ["FedexWebServices::Soap::Rate::EtdAttributeType[]", XSD::QName.new(NsV28, "Attributes")], [0, nil]],
      ["requestedDocumentCopies", ["FedexWebServices::Soap::Rate::RequestedShippingDocumentType[]", XSD::QName.new(NsV28, "RequestedDocumentCopies")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::Rate::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV28, "DocumentReferences")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ExportDeclarationDetail,
    :schema_type => XSD::QName.new(NsV28, "ExportDeclarationDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ExportDetail,
    :schema_type => XSD::QName.new(NsV28, "ExportDetail"),
    :schema_element => [
      ["b13AFilingOption", ["FedexWebServices::Soap::Rate::B13AFilingOptionType", XSD::QName.new(NsV28, "B13AFilingOption")], [0, 1]],
      ["exportComplianceStatement", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExportComplianceStatement")], [0, 1]],
      ["permitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PermitNumber")], [0, 1]],
      ["destinationControlDetail", ["FedexWebServices::Soap::Rate::DestinationControlDetail", XSD::QName.new(NsV28, "DestinationControlDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ExpressFreightDetail,
    :schema_type => XSD::QName.new(NsV28, "ExpressFreightDetail"),
    :schema_element => [
      ["packingListEnclosed", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "PackingListEnclosed")], [0, 1]],
      ["shippersLoadAndCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ShippersLoadAndCount")], [0, 1]],
      ["bookingConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "BookingConfirmationNumber")], [0, 1]],
      ["referenceLabelRequested", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReferenceLabelRequested")], [0, 1]],
      ["beforeDeliveryContact", ["FedexWebServices::Soap::Rate::ExpressFreightDetailContact", XSD::QName.new(NsV28, "BeforeDeliveryContact")], [0, 1]],
      ["undeliverableContact", ["FedexWebServices::Soap::Rate::ExpressFreightDetailContact", XSD::QName.new(NsV28, "UndeliverableContact")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ExpressFreightDetailContact,
    :schema_type => XSD::QName.new(NsV28, "ExpressFreightDetailContact"),
    :schema_element => [
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["phone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Phone")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FlatbedTrailerDetail,
    :schema_type => XSD::QName.new(NsV28, "FlatbedTrailerDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Rate::FlatbedTrailerOption[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightAddressLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightAddressLabelDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["copies", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Copies")], [0, 1]],
      ["startingPosition", ["FedexWebServices::Soap::Rate::PageQuadrantType", XSD::QName.new(NsV28, "StartingPosition")], [0, 1]],
      ["docTabContent", ["FedexWebServices::Soap::Rate::DocTabContent", XSD::QName.new(NsV28, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::Rate::RelativeVerticalPositionType", XSD::QName.new(NsV28, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Rate::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightBaseCharge,
    :schema_type => XSD::QName.new(NsV28, "FreightBaseCharge"),
    :schema_element => [
      ["freightClass", ["FedexWebServices::Soap::Rate::FreightClassType", XSD::QName.new(NsV28, "FreightClass")], [0, 1]],
      ["ratedAsClass", ["FedexWebServices::Soap::Rate::FreightClassType", XSD::QName.new(NsV28, "RatedAsClass")], [0, 1]],
      ["nmfcCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "NmfcCode")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["chargeRate", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "ChargeRate")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::Rate::FreightChargeBasisType", XSD::QName.new(NsV28, "ChargeBasis")], [0, 1]],
      ["extendedAmount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "ExtendedAmount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightCommitDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightCommitDetail"),
    :schema_element => [
      ["originDetail", ["FedexWebServices::Soap::Rate::FreightServiceCenterDetail", XSD::QName.new(NsV28, "OriginDetail")], [0, 1]],
      ["destinationDetail", ["FedexWebServices::Soap::Rate::FreightServiceCenterDetail", XSD::QName.new(NsV28, "DestinationDetail")], [0, 1]],
      ["totalDistance", ["FedexWebServices::Soap::Rate::Distance", XSD::QName.new(NsV28, "TotalDistance")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightGuaranteeDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightGuaranteeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::FreightGuaranteeType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightRateDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightRateDetail"),
    :schema_element => [
      ["quoteNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "QuoteNumber")], [0, 1]],
      ["quoteType", ["FedexWebServices::Soap::Rate::FreightRateQuoteType", XSD::QName.new(NsV28, "QuoteType")], [0, 1]],
      ["baseChargeCalculation", ["FedexWebServices::Soap::Rate::FreightBaseChargeCalculationType", XSD::QName.new(NsV28, "BaseChargeCalculation")], [0, 1]],
      ["baseCharges", ["FedexWebServices::Soap::Rate::FreightBaseCharge[]", XSD::QName.new(NsV28, "BaseCharges")], [0, nil]],
      ["notations", ["FedexWebServices::Soap::Rate::FreightRateNotation[]", XSD::QName.new(NsV28, "Notations")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightRateNotation,
    :schema_type => XSD::QName.new(NsV28, "FreightRateNotation"),
    :schema_element => [
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightServiceCenterDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightServiceCenterDetail"),
    :schema_element => [
      ["interlineCarrierCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "InterlineCarrierCode")], [0, 1]],
      ["interlineCarrierName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "InterlineCarrierName")], [0, 1]],
      ["additionalDays", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "AdditionalDays")], [0, 1]],
      ["localService", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocalService")], [0, 1]],
      ["localDistance", ["FedexWebServices::Soap::Rate::Distance", XSD::QName.new(NsV28, "LocalDistance")], [0, 1]],
      ["localDuration", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "LocalDuration")], [0, 1]],
      ["localServiceScheduling", ["FedexWebServices::Soap::Rate::FreightServiceSchedulingType", XSD::QName.new(NsV28, "LocalServiceScheduling")], [0, 1]],
      ["limitedServiceDays", ["FedexWebServices::Soap::Rate::DayOfWeekType[]", XSD::QName.new(NsV28, "LimitedServiceDays")], [0, nil]],
      ["gatewayLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "GatewayLocationId")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Location")], [0, 1]],
      ["contactAndAddress", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "ContactAndAddress")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentDetail"),
    :schema_element => [
      ["fedExFreightAccountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FedExFreightAccountNumber")], [0, 1]],
      ["fedExFreightBillingContactAndAddress", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "FedExFreightBillingContactAndAddress")], [0, 1]],
      ["alternateBilling", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "AlternateBilling")], [0, 1]],
      ["role", ["FedexWebServices::Soap::Rate::FreightShipmentRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["collectTermsType", ["FedexWebServices::Soap::Rate::FreightCollectTermsType", XSD::QName.new(NsV28, "CollectTermsType")], [0, 1]],
      ["declaredValuePerUnit", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "DeclaredValuePerUnit")], [0, 1]],
      ["declaredValueUnits", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeclaredValueUnits")], [0, 1]],
      ["liabilityCoverageDetail", ["FedexWebServices::Soap::Rate::LiabilityCoverageDetail", XSD::QName.new(NsV28, "LiabilityCoverageDetail")], [0, 1]],
      ["coupons", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Coupons")], [0, nil]],
      ["totalHandlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "TotalHandlingUnits")], [0, 1]],
      ["clientDiscountPercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "ClientDiscountPercent")], [0, 1]],
      ["palletWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "PalletWeight")], [0, 1]],
      ["shipmentDimensions", ["FedexWebServices::Soap::Rate::Dimensions", XSD::QName.new(NsV28, "ShipmentDimensions")], [0, 1]],
      ["comment", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Comment")], [0, 1]],
      ["specialServicePayments", ["FedexWebServices::Soap::Rate::FreightSpecialServicePayment[]", XSD::QName.new(NsV28, "SpecialServicePayments")], [0, nil]],
      ["hazardousMaterialsOfferor", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardousMaterialsOfferor")], [0, 1]],
      ["lineItems", ["FedexWebServices::Soap::Rate::FreightShipmentLineItem[]", XSD::QName.new(NsV28, "LineItems")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightShipmentLineItem,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentLineItem"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["freightClass", ["FedexWebServices::Soap::Rate::FreightClassType", XSD::QName.new(NsV28, "FreightClass")], [0, 1]],
      ["packaging", ["FedexWebServices::Soap::Rate::PhysicalPackagingType", XSD::QName.new(NsV28, "Packaging")], [0, 1]],
      ["pieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Pieces")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Rate::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]],
      ["volume", ["FedexWebServices::Soap::Rate::Volume", XSD::QName.new(NsV28, "Volume")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightSpecialServicePayment,
    :schema_type => XSD::QName.new(NsV28, "FreightSpecialServicePayment"),
    :schema_element => [
      ["specialService", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecialService")], [0, 1]],
      ["paymentType", ["FedexWebServices::Soap::Rate::FreightShipmentRoleType", XSD::QName.new(NsV28, "PaymentType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::GeneralAgencyAgreementDetail,
    :schema_type => XSD::QName.new(NsV28, "GeneralAgencyAgreementDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityContent,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityContent"),
    :schema_element => [
      ["description", ["FedexWebServices::Soap::Rate::HazardousCommodityDescription", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["quantity", ["FedexWebServices::Soap::Rate::HazardousCommodityQuantityDetail", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["innerReceptacles", ["FedexWebServices::Soap::Rate::HazardousCommodityInnerReceptacleDetail[]", XSD::QName.new(NsV28, "InnerReceptacles")], [0, nil]],
      ["options", ["FedexWebServices::Soap::Rate::HazardousCommodityOptionDetail", XSD::QName.new(NsV28, "Options")], [0, 1]],
      ["radionuclideDetail", ["FedexWebServices::Soap::Rate::RadionuclideDetail", XSD::QName.new(NsV28, "RadionuclideDetail")], [0, 1]],
      ["netExplosiveDetail", ["FedexWebServices::Soap::Rate::NetExplosiveDetail", XSD::QName.new(NsV28, "NetExplosiveDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityDescription,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityDescription"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["packingGroup", ["FedexWebServices::Soap::Rate::HazardousCommodityPackingGroupType", XSD::QName.new(NsV28, "PackingGroup")], [0, 1]],
      ["packingDetails", ["FedexWebServices::Soap::Rate::HazardousCommodityPackingDetail", XSD::QName.new(NsV28, "PackingDetails")], [0, 1]],
      ["reportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReportableQuantity")], [0, 1]],
      ["properShippingName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ProperShippingName")], [0, 1]],
      ["technicalName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TechnicalName")], [0, 1]],
      ["percentage", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percentage")], [0, 1]],
      ["hazardClass", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardClass")], [0, 1]],
      ["subsidiaryClasses", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SubsidiaryClasses")], [0, nil]],
      ["labelText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LabelText")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Rate::HazardousCommodityDescriptionProcessingOptionType[]", XSD::QName.new(NsV28, "ProcessingOptions")], [0, nil]],
      ["authorization", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Authorization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityInnerReceptacleDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityInnerReceptacleDetail"),
    :schema_element => [
      ["quantity", ["FedexWebServices::Soap::Rate::HazardousCommodityQuantityDetail", XSD::QName.new(NsV28, "Quantity")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityOptionDetail"),
    :schema_element => [
      ["labelTextOption", ["FedexWebServices::Soap::Rate::HazardousCommodityLabelTextOptionType", XSD::QName.new(NsV28, "LabelTextOption")], [0, 1]],
      ["customerSuppliedLabelText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerSuppliedLabelText")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityPackagingDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackagingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Count")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityPackingDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackingDetail"),
    :schema_element => [
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "CargoAircraftOnly")], [0, 1]],
      ["packingInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackingInstructions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityQuantityDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityQuantityDetail"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]],
      ["quantityType", ["FedexWebServices::Soap::Rate::HazardousCommodityQuantityType", XSD::QName.new(NsV28, "QuantityType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV28, "HoldAtLocationDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]],
      ["locationContactAndAddress", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "LocationContactAndAddress")], [0, 1]],
      ["locationType", ["FedexWebServices::Soap::Rate::FedExLocationType", XSD::QName.new(NsV28, "LocationType")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "LocationNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HomeDeliveryPremiumDetail,
    :schema_type => XSD::QName.new(NsV28, "HomeDeliveryPremiumDetail"),
    :schema_element => [
      ["homeDeliveryPremiumType", ["FedexWebServices::Soap::Rate::HomeDeliveryPremiumType", XSD::QName.new(NsV28, "HomeDeliveryPremiumType")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::InternationalControlledExportDetail,
    :schema_type => XSD::QName.new(NsV28, "InternationalControlledExportDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::InternationalControlledExportType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["foreignTradeZoneCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ForeignTradeZoneCode")], [0, 1]],
      ["entryNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EntryNumber")], [0, 1]],
      ["licenseOrPermitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LicenseOrPermitNumber")], [0, 1]],
      ["licenseOrPermitExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "LicenseOrPermitExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::InternationalTrafficInArmsRegulationsDetail,
    :schema_type => XSD::QName.new(NsV28, "InternationalTrafficInArmsRegulationsDetail"),
    :schema_element => [
      ["licenseOrExemptionNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LicenseOrExemptionNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelSpecification,
    :schema_type => XSD::QName.new(NsV28, "LabelSpecification"),
    :schema_element => [
      ["labelFormatType", ["FedexWebServices::Soap::Rate::LabelFormatType", XSD::QName.new(NsV28, "LabelFormatType")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::Rate::ShippingDocumentImageType", XSD::QName.new(NsV28, "ImageType")], [0, 1]],
      ["labelStockType", ["FedexWebServices::Soap::Rate::LabelStockType", XSD::QName.new(NsV28, "LabelStockType")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::Rate::LabelPrintingOrientationType", XSD::QName.new(NsV28, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::Rate::LabelRotationType", XSD::QName.new(NsV28, "LabelRotation")], [0, 1]],
      ["labelOrder", ["FedexWebServices::Soap::Rate::LabelOrderType", XSD::QName.new(NsV28, "LabelOrder")], [0, 1]],
      ["printedLabelOrigin", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "PrintedLabelOrigin")], [0, 1]],
      ["customerSpecifiedDetail", ["FedexWebServices::Soap::Rate::CustomerSpecifiedLabelDetail", XSD::QName.new(NsV28, "CustomerSpecifiedDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LiabilityCoverageDetail,
    :schema_type => XSD::QName.new(NsV28, "LiabilityCoverageDetail"),
    :schema_element => [
      ["coverageType", ["FedexWebServices::Soap::Rate::LiabilityCoverageType", XSD::QName.new(NsV28, "CoverageType")], [0, 1]],
      ["coverageAmount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "CoverageAmount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LinearMeasure,
    :schema_type => XSD::QName.new(NsV28, "LinearMeasure"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Rate::LinearUnits", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Localization,
    :schema_type => XSD::QName.new(NsV28, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocaleCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Measure,
    :schema_type => XSD::QName.new(NsV28, "Measure"),
    :schema_element => [
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Money,
    :schema_type => XSD::QName.new(NsV28, "Money"),
    :schema_element => [
      ["currency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Currency")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaCertificateOfOriginDetail,
    :schema_type => XSD::QName.new(NsV28, "NaftaCertificateOfOriginDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["blanketPeriod", ["FedexWebServices::Soap::Rate::DateRange", XSD::QName.new(NsV28, "BlanketPeriod")], [0, 1]],
      ["importerSpecification", ["FedexWebServices::Soap::Rate::NaftaImporterSpecificationType", XSD::QName.new(NsV28, "ImporterSpecification")], [0, 1]],
      ["signatureContact", ["FedexWebServices::Soap::Rate::Contact", XSD::QName.new(NsV28, "SignatureContact")], [0, 1]],
      ["producerSpecification", ["FedexWebServices::Soap::Rate::NaftaProducerSpecificationType", XSD::QName.new(NsV28, "ProducerSpecification")], [0, 1]],
      ["producers", ["FedexWebServices::Soap::Rate::NaftaProducer[]", XSD::QName.new(NsV28, "Producers")], [0, nil]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaCommodityDetail,
    :schema_type => XSD::QName.new(NsV28, "NaftaCommodityDetail"),
    :schema_element => [
      ["preferenceCriterion", ["FedexWebServices::Soap::Rate::NaftaPreferenceCriterionCode", XSD::QName.new(NsV28, "PreferenceCriterion")], [0, 1]],
      ["producerDetermination", ["FedexWebServices::Soap::Rate::NaftaProducerDeterminationCode", XSD::QName.new(NsV28, "ProducerDetermination")], [0, 1]],
      ["producerId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ProducerId")], [0, 1]],
      ["netCostMethod", ["FedexWebServices::Soap::Rate::NaftaNetCostMethodCode", XSD::QName.new(NsV28, "NetCostMethod")], [0, 1]],
      ["netCostDateRange", ["FedexWebServices::Soap::Rate::DateRange", XSD::QName.new(NsV28, "NetCostDateRange")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaProducer,
    :schema_type => XSD::QName.new(NsV28, "NaftaProducer"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["producer", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "Producer")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NetExplosiveDetail,
    :schema_type => XSD::QName.new(NsV28, "NetExplosiveDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::NetExplosiveClassificationType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Notification,
    :schema_type => XSD::QName.new(NsV28, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::Rate::NotificationSeverityType", XSD::QName.new(NsV28, "Severity")], [0, 1]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Source")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::Rate::NotificationParameter[]", XSD::QName.new(NsV28, "MessageParameters")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationDetail,
    :schema_type => XSD::QName.new(NsV28, "NotificationDetail"),
    :schema_element => [
      ["notificationType", ["FedexWebServices::Soap::Rate::NotificationType", XSD::QName.new(NsV28, "NotificationType")], [0, 1]],
      ["emailDetail", ["FedexWebServices::Soap::Rate::EMailDetail", XSD::QName.new(NsV28, "EmailDetail")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationParameter,
    :schema_type => XSD::QName.new(NsV28, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Op900Detail,
    :schema_type => XSD::QName.new(NsV28, "Op900Detail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["reference", ["FedexWebServices::Soap::Rate::CustomerReferenceType", XSD::QName.new(NsV28, "Reference")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]],
      ["signatureName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SignatureName")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PackageRateDetail,
    :schema_type => XSD::QName.new(NsV28, "PackageRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::Rate::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Rate::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Rate::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["billingWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "BillingWeight")], [0, 1]],
      ["dimWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "DimWeight")], [0, 1]],
      ["oversizeWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "OversizeWeight")], [0, 1]],
      ["baseCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "BaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["netFreight", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "NetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["netFedExCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "NetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["netCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "NetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Rate::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Rate::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Rate::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Rate::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Rate::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PackageSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV28, "PackageSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::Rate::CodDetail", XSD::QName.new(NsV28, "CodDetail")], [0, 1]],
      ["dangerousGoodsDetail", ["FedexWebServices::Soap::Rate::DangerousGoodsDetail", XSD::QName.new(NsV28, "DangerousGoodsDetail")], [0, 1]],
      ["batteryDetails", ["FedexWebServices::Soap::Rate::BatteryClassificationDetail[]", XSD::QName.new(NsV28, "BatteryDetails")], [0, nil]],
      ["dryIceWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "DryIceWeight")], [0, 1]],
      ["signatureOptionDetail", ["FedexWebServices::Soap::Rate::SignatureOptionDetail", XSD::QName.new(NsV28, "SignatureOptionDetail")], [0, 1]],
      ["priorityAlertDetail", ["FedexWebServices::Soap::Rate::PriorityAlertDetail", XSD::QName.new(NsV28, "PriorityAlertDetail")], [0, 1]],
      ["alcoholDetail", ["FedexWebServices::Soap::Rate::AlcoholDetail", XSD::QName.new(NsV28, "AlcoholDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Party,
    :schema_type => XSD::QName.new(NsV28, "Party"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")], [0, 1]],
      ["tins", ["FedexWebServices::Soap::Rate::TaxpayerIdentification[]", XSD::QName.new(NsV28, "Tins")], [0, nil]],
      ["contact", ["FedexWebServices::Soap::Rate::Contact", XSD::QName.new(NsV28, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Rate::Address", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Payment,
    :schema_type => XSD::QName.new(NsV28, "Payment"),
    :schema_element => [
      ["paymentType", ["FedexWebServices::Soap::Rate::PaymentType", XSD::QName.new(NsV28, "PaymentType")], [0, 1]],
      ["payor", ["FedexWebServices::Soap::Rate::Payor", XSD::QName.new(NsV28, "Payor")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Payor,
    :schema_type => XSD::QName.new(NsV28, "Payor"),
    :schema_element => [
      ["responsibleParty", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "ResponsibleParty")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PendingShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::PendingShipmentType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ExpirationDate")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Rate::PendingShipmentProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptions")], [0, 1]],
      ["recommendedDocumentSpecification", ["FedexWebServices::Soap::Rate::RecommendedDocumentSpecification", XSD::QName.new(NsV28, "RecommendedDocumentSpecification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PendingShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Rate::PendingShipmentProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PickupDetail,
    :schema_type => XSD::QName.new(NsV28, "PickupDetail"),
    :schema_element => [
      ["readyDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ReadyDateTime")], [0, 1]],
      ["latestPickupDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "LatestPickupDateTime")], [0, 1]],
      ["courierInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CourierInstructions")], [0, 1]],
      ["requestType", ["FedexWebServices::Soap::Rate::PickupRequestType", XSD::QName.new(NsV28, "RequestType")], [0, 1]],
      ["requestSource", ["FedexWebServices::Soap::Rate::PickupRequestSourceType", XSD::QName.new(NsV28, "RequestSource")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PriorityAlertDetail,
    :schema_type => XSD::QName.new(NsV28, "PriorityAlertDetail"),
    :schema_element => [
      ["enhancementTypes", ["FedexWebServices::Soap::Rate::PriorityAlertEnhancementType[]", XSD::QName.new(NsV28, "EnhancementTypes")], [0, nil]],
      ["content", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Content")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ProductName,
    :schema_type => XSD::QName.new(NsV28, "ProductName"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["encoding", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Encoding")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RadioactivityDetail,
    :schema_type => XSD::QName.new(NsV28, "RadioactivityDetail"),
    :schema_element => [
      ["transportIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "TransportIndex")], [0, 1]],
      ["surfaceReading", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "SurfaceReading")], [0, 1]],
      ["criticalitySafetyIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "CriticalitySafetyIndex")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Rate::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RadionuclideActivity,
    :schema_type => XSD::QName.new(NsV28, "RadionuclideActivity"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]],
      ["unitOfMeasure", ["FedexWebServices::Soap::Rate::RadioactivityUnitOfMeasure", XSD::QName.new(NsV28, "UnitOfMeasure")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RadionuclideDetail,
    :schema_type => XSD::QName.new(NsV28, "RadionuclideDetail"),
    :schema_element => [
      ["radionuclide", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Radionuclide")], [0, 1]],
      ["activity", ["FedexWebServices::Soap::Rate::RadionuclideActivity", XSD::QName.new(NsV28, "Activity")], [0, 1]],
      ["exceptedPackagingIsReportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ExceptedPackagingIsReportableQuantity")], [0, 1]],
      ["physicalForm", ["FedexWebServices::Soap::Rate::PhysicalFormType", XSD::QName.new(NsV28, "PhysicalForm")], [0, 1]],
      ["chemicalForm", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ChemicalForm")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateDiscount,
    :schema_type => XSD::QName.new(NsV28, "RateDiscount"),
    :schema_element => [
      ["rateDiscountType", ["FedexWebServices::Soap::Rate::RateDiscountType", XSD::QName.new(NsV28, "RateDiscountType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateReply,
    :schema_type => XSD::QName.new(NsV28, "RateReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Rate::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Rate::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Rate::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Rate::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["rateReplyDetails", ["FedexWebServices::Soap::Rate::RateReplyDetail[]", XSD::QName.new(NsV28, "RateReplyDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateReplyDetail,
    :schema_type => XSD::QName.new(NsV28, "RateReplyDetail"),
    :schema_element => [
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["serviceDescription", ["FedexWebServices::Soap::Rate::ServiceDescription", XSD::QName.new(NsV28, "ServiceDescription")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingType")], [0, 1]],
      ["appliedOptions", ["FedexWebServices::Soap::Rate::ServiceOptionType[]", XSD::QName.new(NsV28, "AppliedOptions")], [0, nil]],
      ["appliedSubOptions", ["FedexWebServices::Soap::Rate::ServiceSubOptionDetail", XSD::QName.new(NsV28, "AppliedSubOptions")], [0, 1]],
      ["deliveryStation", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeliveryStation")], [0, 1]],
      ["deliveryDayOfWeek", ["FedexWebServices::Soap::Rate::DayOfWeekType", XSD::QName.new(NsV28, "DeliveryDayOfWeek")], [0, 1]],
      ["deliveryTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "DeliveryTimestamp")], [0, 1]],
      ["commitDetails", ["FedexWebServices::Soap::Rate::CommitDetail[]", XSD::QName.new(NsV28, "CommitDetails")], [0, nil]],
      ["destinationAirportId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationAirportId")], [0, 1]],
      ["ineligibleForMoneyBackGuarantee", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "IneligibleForMoneyBackGuarantee")], [0, 1]],
      ["originServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "OriginServiceArea")], [0, 1]],
      ["destinationServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationServiceArea")], [0, 1]],
      ["transitTime", ["FedexWebServices::Soap::Rate::TransitTimeType", XSD::QName.new(NsV28, "TransitTime")], [0, 1]],
      ["maximumTransitTime", ["FedexWebServices::Soap::Rate::TransitTimeType", XSD::QName.new(NsV28, "MaximumTransitTime")], [0, 1]],
      ["signatureOption", ["FedexWebServices::Soap::Rate::SignatureOptionType", XSD::QName.new(NsV28, "SignatureOption")], [0, 1]],
      ["actualRateType", ["FedexWebServices::Soap::Rate::ReturnedRateType", XSD::QName.new(NsV28, "ActualRateType")], [0, 1]],
      ["ratedShipmentDetails", ["FedexWebServices::Soap::Rate::RatedShipmentDetail[]", XSD::QName.new(NsV28, "RatedShipmentDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateRequest,
    :schema_type => XSD::QName.new(NsV28, "RateRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Rate::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Rate::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Rate::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Rate::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["returnTransitAndCommit", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReturnTransitAndCommit")], [0, 1]],
      ["carrierCodes", ["FedexWebServices::Soap::Rate::CarrierCodeType[]", XSD::QName.new(NsV28, "CarrierCodes")], [0, nil]],
      ["variableOptions", ["FedexWebServices::Soap::Rate::ServiceOptionType[]", XSD::QName.new(NsV28, "VariableOptions")], [0, nil]],
      ["consolidationKey", ["FedexWebServices::Soap::Rate::ConsolidationKey", XSD::QName.new(NsV28, "ConsolidationKey")], [0, 1]],
      ["requestedShipment", ["FedexWebServices::Soap::Rate::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RatedPackageDetail,
    :schema_type => XSD::QName.new(NsV28, "RatedPackageDetail"),
    :schema_element => [
      ["trackingIds", ["FedexWebServices::Soap::Rate::TrackingId[]", XSD::QName.new(NsV28, "TrackingIds")], [0, nil]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupNumber")], [0, 1]],
      ["effectiveNetDiscount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "EffectiveNetDiscount")], [0, 1]],
      ["adjustedCodCollectionAmount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "AdjustedCodCollectionAmount")], [0, 1]],
      ["oversizeClass", ["FedexWebServices::Soap::Rate::OversizeClassType", XSD::QName.new(NsV28, "OversizeClass")], [0, 1]],
      ["packageRateDetail", ["FedexWebServices::Soap::Rate::PackageRateDetail", XSD::QName.new(NsV28, "PackageRateDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RatedShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "RatedShipmentDetail"),
    :schema_element => [
      ["effectiveNetDiscount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "EffectiveNetDiscount")], [0, 1]],
      ["adjustedCodCollectionAmount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "AdjustedCodCollectionAmount")], [0, 1]],
      ["shipmentRateDetail", ["FedexWebServices::Soap::Rate::ShipmentRateDetail", XSD::QName.new(NsV28, "ShipmentRateDetail")], [0, 1]],
      ["ratedPackages", ["FedexWebServices::Soap::Rate::RatedPackageDetail[]", XSD::QName.new(NsV28, "RatedPackages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Rebate,
    :schema_type => XSD::QName.new(NsV28, "Rebate"),
    :schema_element => [
      ["rebateType", ["FedexWebServices::Soap::Rate::RebateType", XSD::QName.new(NsV28, "RebateType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percent")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RecipientCustomsId,
    :schema_type => XSD::QName.new(NsV28, "RecipientCustomsId"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::RecipientCustomsIdType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RecommendedDocumentSpecification,
    :schema_type => XSD::QName.new(NsV28, "RecommendedDocumentSpecification"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::Rate::RecommendedDocumentType[]", XSD::QName.new(NsV28, "Types")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RegulatoryLabelContentDetail,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryLabelContentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::RegulatoryLabelType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["generationOptions", ["FedexWebServices::Soap::Rate::CustomerSpecifiedLabelGenerationOptionType[]", XSD::QName.new(NsV28, "GenerationOptions")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RequestedPackageLineItem,
    :schema_type => XSD::QName.new(NsV28, "RequestedPackageLineItem"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupNumber")], [0, 1]],
      ["groupPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupPackageCount")], [0, 1]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::Rate::VariableHandlingChargeDetail", XSD::QName.new(NsV28, "VariableHandlingChargeDetail")], [0, 1]],
      ["insuredValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "InsuredValue")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Rate::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]],
      ["physicalPackaging", ["FedexWebServices::Soap::Rate::PhysicalPackagingType", XSD::QName.new(NsV28, "PhysicalPackaging")], [0, 1]],
      ["associatedFreightLineItems", ["FedexWebServices::Soap::Rate::AssociatedFreightLineItemDetail[]", XSD::QName.new(NsV28, "AssociatedFreightLineItems")], [0, nil]],
      ["itemDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemDescription")], [0, 1]],
      ["itemDescriptionForClearance", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemDescriptionForClearance")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::Rate::CustomerReference[]", XSD::QName.new(NsV28, "CustomerReferences")], [0, 10]],
      ["specialServicesRequested", ["FedexWebServices::Soap::Rate::PackageSpecialServicesRequested", XSD::QName.new(NsV28, "SpecialServicesRequested")], [0, 1]],
      ["contentRecords", ["FedexWebServices::Soap::Rate::ContentRecord[]", XSD::QName.new(NsV28, "ContentRecords")], [0, nil]],
      ["conveyanceDetail", ["FedexWebServices::Soap::Rate::ShipperConveyanceDetail", XSD::QName.new(NsV28, "ConveyanceDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RequestedShipment,
    :schema_type => XSD::QName.new(NsV28, "RequestedShipment"),
    :schema_element => [
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ShipTimestamp")], [0, 1]],
      ["dropoffType", ["FedexWebServices::Soap::Rate::DropoffType", XSD::QName.new(NsV28, "DropoffType")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingType")], [0, 1]],
      ["variationOptions", ["FedexWebServices::Soap::Rate::ShipmentVariationOptionDetail[]", XSD::QName.new(NsV28, "VariationOptions")], [0, nil]],
      ["totalWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalWeight")], [0, 1]],
      ["totalInsuredValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalInsuredValue")], [0, 1]],
      ["preferredCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PreferredCurrency")], [0, 1]],
      ["shipmentAuthorizationDetail", ["FedexWebServices::Soap::Rate::ShipmentAuthorizationDetail", XSD::QName.new(NsV28, "ShipmentAuthorizationDetail")], [0, 1]],
      ["shipper", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "Shipper")], [0, 1]],
      ["recipient", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "Recipient")], [0, 1]],
      ["recipientLocationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RecipientLocationNumber")], [0, 1]],
      ["origin", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "Origin")], [0, 1]],
      ["soldTo", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "SoldTo")], [0, 1]],
      ["shippingChargesPayment", ["FedexWebServices::Soap::Rate::Payment", XSD::QName.new(NsV28, "ShippingChargesPayment")], [0, 1]],
      ["specialServicesRequested", ["FedexWebServices::Soap::Rate::ShipmentSpecialServicesRequested", XSD::QName.new(NsV28, "SpecialServicesRequested")], [0, 1]],
      ["expressFreightDetail", ["FedexWebServices::Soap::Rate::ExpressFreightDetail", XSD::QName.new(NsV28, "ExpressFreightDetail")], [0, 1]],
      ["freightShipmentDetail", ["FedexWebServices::Soap::Rate::FreightShipmentDetail", XSD::QName.new(NsV28, "FreightShipmentDetail")], [0, 1]],
      ["deliveryInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeliveryInstructions")], [0, 1]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::Rate::VariableHandlingChargeDetail", XSD::QName.new(NsV28, "VariableHandlingChargeDetail")], [0, 1]],
      ["customsClearanceDetail", ["FedexWebServices::Soap::Rate::CustomsClearanceDetail", XSD::QName.new(NsV28, "CustomsClearanceDetail")], [0, 1]],
      ["pickupDetail", ["FedexWebServices::Soap::Rate::PickupDetail", XSD::QName.new(NsV28, "PickupDetail")], [0, 1]],
      ["smartPostDetail", ["FedexWebServices::Soap::Rate::SmartPostShipmentDetail", XSD::QName.new(NsV28, "SmartPostDetail")], [0, 1]],
      ["blockInsightVisibility", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "BlockInsightVisibility")], [0, 1]],
      ["labelSpecification", ["FedexWebServices::Soap::Rate::LabelSpecification", XSD::QName.new(NsV28, "LabelSpecification")], [0, 1]],
      ["shippingDocumentSpecification", ["FedexWebServices::Soap::Rate::ShippingDocumentSpecification", XSD::QName.new(NsV28, "ShippingDocumentSpecification")], [0, 1]],
      ["rateRequestTypes", ["FedexWebServices::Soap::Rate::RateRequestType[]", XSD::QName.new(NsV28, "RateRequestTypes")], [0, nil]],
      ["edtRequestType", ["FedexWebServices::Soap::Rate::EdtRequestType", XSD::QName.new(NsV28, "EdtRequestType")], [0, 1]],
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PackageCount")], [0, 1]],
      ["shipmentOnlyFields", ["FedexWebServices::Soap::Rate::ShipmentOnlyFieldsType[]", XSD::QName.new(NsV28, "ShipmentOnlyFields")], [0, nil]],
      ["configurationData", ["FedexWebServices::Soap::Rate::ShipmentConfigurationData", XSD::QName.new(NsV28, "ConfigurationData")], [0, 1]],
      ["requestedPackageLineItems", ["FedexWebServices::Soap::Rate::RequestedPackageLineItem[]", XSD::QName.new(NsV28, "RequestedPackageLineItems")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnAssociationDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnAssociationDetail"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TrackingNumber")], [0, 1]],
      ["shipDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ShipDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnEMailDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnEMailDetail"),
    :schema_element => [
      ["merchantPhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MerchantPhoneNumber")], [0, 1]],
      ["allowedSpecialServices", ["FedexWebServices::Soap::Rate::ReturnEMailAllowedSpecialServiceType[]", XSD::QName.new(NsV28, "AllowedSpecialServices")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnInstructionsDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnInstructionsDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomText")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnShipmentDetail"),
    :schema_element => [
      ["returnType", ["FedexWebServices::Soap::Rate::ReturnType", XSD::QName.new(NsV28, "ReturnType")], [0, 1]],
      ["rma", ["FedexWebServices::Soap::Rate::Rma", XSD::QName.new(NsV28, "Rma")], [0, 1]],
      ["returnEMailDetail", ["FedexWebServices::Soap::Rate::ReturnEMailDetail", XSD::QName.new(NsV28, "ReturnEMailDetail")], [0, 1]],
      ["returnAssociation", ["FedexWebServices::Soap::Rate::ReturnAssociationDetail", XSD::QName.new(NsV28, "ReturnAssociation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Rma,
    :schema_type => XSD::QName.new(NsV28, "Rma"),
    :schema_element => [
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Reason")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ServiceDescription,
    :schema_type => XSD::QName.new(NsV28, "ServiceDescription"),
    :schema_element => [
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["names", ["FedexWebServices::Soap::Rate::ProductName[]", XSD::QName.new(NsV28, "Names")], [0, nil]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraDescription")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ServiceSubOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "ServiceSubOptionDetail"),
    :schema_element => [
      ["freightGuarantee", ["FedexWebServices::Soap::Rate::FreightGuaranteeType", XSD::QName.new(NsV28, "FreightGuarantee")], [0, 1]],
      ["smartPostHubId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SmartPostHubId")], [0, 1]],
      ["smartPostIndicia", ["FedexWebServices::Soap::Rate::SmartPostIndiciaType", XSD::QName.new(NsV28, "SmartPostIndicia")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentAuthorizationDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentAuthorizationDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentConfigurationData,
    :schema_type => XSD::QName.new(NsV28, "ShipmentConfigurationData"),
    :schema_element => [
      ["dangerousGoodsPackageConfigurations", ["FedexWebServices::Soap::Rate::DangerousGoodsDetail[]", XSD::QName.new(NsV28, "DangerousGoodsPackageConfigurations")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentDryIceDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceDetail"),
    :schema_element => [
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PackageCount")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalWeight")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Rate::ShipmentDryIceProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentDryIceProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Rate::ShipmentDryIceProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentEventNotificationDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentEventNotificationDetail"),
    :schema_element => [
      ["aggregationType", ["FedexWebServices::Soap::Rate::ShipmentNotificationAggregationType", XSD::QName.new(NsV28, "AggregationType")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PersonalMessage")], [0, 1]],
      ["eventNotifications", ["FedexWebServices::Soap::Rate::ShipmentEventNotificationSpecification[]", XSD::QName.new(NsV28, "EventNotifications")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentEventNotificationSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShipmentEventNotificationSpecification"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::Rate::ShipmentNotificationRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["events", ["FedexWebServices::Soap::Rate::NotificationEventType[]", XSD::QName.new(NsV28, "Events")], [0, nil]],
      ["notificationDetail", ["FedexWebServices::Soap::Rate::NotificationDetail", XSD::QName.new(NsV28, "NotificationDetail")], [0, 1]],
      ["formatSpecification", ["FedexWebServices::Soap::Rate::ShipmentNotificationFormatSpecification", XSD::QName.new(NsV28, "FormatSpecification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentLegRateDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentLegRateDetail"),
    :schema_element => [
      ["legDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegDescription")], [0, 1]],
      ["legOrigin", ["FedexWebServices::Soap::Rate::Address", XSD::QName.new(NsV28, "LegOrigin")], [0, 1]],
      ["legOriginLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegOriginLocationId")], [0, 1]],
      ["legDestination", ["FedexWebServices::Soap::Rate::Address", XSD::QName.new(NsV28, "LegDestination")], [0, 1]],
      ["legDestinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegDestinationLocationId")], [0, 1]],
      ["rateType", ["FedexWebServices::Soap::Rate::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::Rate::PricingCodeType", XSD::QName.new(NsV28, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Rate::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Rate::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::Rate::CurrencyExchangeRate", XSD::QName.new(NsV28, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::Rate::SpecialRatingAppliedType[]", XSD::QName.new(NsV28, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::Rate::RateDimensionalDivisorType", XSD::QName.new(NsV28, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["freightRateDetail", ["FedexWebServices::Soap::Rate::FreightRateDetail", XSD::QName.new(NsV28, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Rate::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Rate::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Rate::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Rate::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::Rate::EdtCommodityTax[]", XSD::QName.new(NsV28, "DutiesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Rate::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::Rate::VariableHandlingCharges", XSD::QName.new(NsV28, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentNotificationFormatSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationFormatSpecification"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::NotificationFormatType", XSD::QName.new(NsV28, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentRateDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::Rate::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::Rate::PricingCodeType", XSD::QName.new(NsV28, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Rate::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Rate::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::Rate::CurrencyExchangeRate", XSD::QName.new(NsV28, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::Rate::SpecialRatingAppliedType[]", XSD::QName.new(NsV28, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::Rate::RateDimensionalDivisorType", XSD::QName.new(NsV28, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalAncillaryFeesAndTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalAncillaryFeesAndTaxes")], [0, 1]],
      ["totalDutiesTaxesAndFees", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalDutiesTaxesAndFees")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["shipmentLegRateDetails", ["FedexWebServices::Soap::Rate::ShipmentLegRateDetail[]", XSD::QName.new(NsV28, "ShipmentLegRateDetails")], [0, nil]],
      ["freightRateDetail", ["FedexWebServices::Soap::Rate::FreightRateDetail", XSD::QName.new(NsV28, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Rate::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Rate::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Rate::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Rate::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::Rate::EdtCommodityTax[]", XSD::QName.new(NsV28, "DutiesAndTaxes")], [0, nil]],
      ["ancillaryFeesAndTaxes", ["FedexWebServices::Soap::Rate::AncillaryFeeAndTax[]", XSD::QName.new(NsV28, "AncillaryFeesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Rate::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::Rate::VariableHandlingCharges", XSD::QName.new(NsV28, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV28, "ShipmentSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::Rate::CodDetail", XSD::QName.new(NsV28, "CodDetail")], [0, 1]],
      ["deliveryOnInvoiceAcceptanceDetail", ["FedexWebServices::Soap::Rate::DeliveryOnInvoiceAcceptanceDetail", XSD::QName.new(NsV28, "DeliveryOnInvoiceAcceptanceDetail")], [0, 1]],
      ["holdAtLocationDetail", ["FedexWebServices::Soap::Rate::HoldAtLocationDetail", XSD::QName.new(NsV28, "HoldAtLocationDetail")], [0, 1]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::Rate::ShipmentEventNotificationDetail", XSD::QName.new(NsV28, "EventNotificationDetail")], [0, 1]],
      ["returnShipmentDetail", ["FedexWebServices::Soap::Rate::ReturnShipmentDetail", XSD::QName.new(NsV28, "ReturnShipmentDetail")], [0, 1]],
      ["pendingShipmentDetail", ["FedexWebServices::Soap::Rate::PendingShipmentDetail", XSD::QName.new(NsV28, "PendingShipmentDetail")], [0, 1]],
      ["internationalControlledExportDetail", ["FedexWebServices::Soap::Rate::InternationalControlledExportDetail", XSD::QName.new(NsV28, "InternationalControlledExportDetail")], [0, 1]],
      ["internationalTrafficInArmsRegulationsDetail", ["FedexWebServices::Soap::Rate::InternationalTrafficInArmsRegulationsDetail", XSD::QName.new(NsV28, "InternationalTrafficInArmsRegulationsDetail")], [0, 1]],
      ["shipmentDryIceDetail", ["FedexWebServices::Soap::Rate::ShipmentDryIceDetail", XSD::QName.new(NsV28, "ShipmentDryIceDetail")], [0, 1]],
      ["homeDeliveryPremiumDetail", ["FedexWebServices::Soap::Rate::HomeDeliveryPremiumDetail", XSD::QName.new(NsV28, "HomeDeliveryPremiumDetail")], [0, 1]],
      ["flatbedTrailerDetail", ["FedexWebServices::Soap::Rate::FlatbedTrailerDetail", XSD::QName.new(NsV28, "FlatbedTrailerDetail")], [0, 1]],
      ["freightGuaranteeDetail", ["FedexWebServices::Soap::Rate::FreightGuaranteeDetail", XSD::QName.new(NsV28, "FreightGuaranteeDetail")], [0, 1]],
      ["etdDetail", ["FedexWebServices::Soap::Rate::EtdDetail", XSD::QName.new(NsV28, "EtdDetail")], [0, 1]],
      ["customDeliveryWindowDetail", ["FedexWebServices::Soap::Rate::CustomDeliveryWindowDetail", XSD::QName.new(NsV28, "CustomDeliveryWindowDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentVariationOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentVariationOptionDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["values", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Values")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipperConveyanceDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipperConveyanceDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentDispositionDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentDispositionDetail"),
    :schema_element => [
      ["dispositionType", ["FedexWebServices::Soap::Rate::ShippingDocumentDispositionType", XSD::QName.new(NsV28, "DispositionType")], [0, 1]],
      ["grouping", ["FedexWebServices::Soap::Rate::ShippingDocumentGroupingType", XSD::QName.new(NsV28, "Grouping")], [0, 1]],
      ["eMailDetail", ["FedexWebServices::Soap::Rate::ShippingDocumentEMailDetail", XSD::QName.new(NsV28, "EMailDetail")], [0, 1]],
      ["printDetail", ["FedexWebServices::Soap::Rate::ShippingDocumentPrintDetail", XSD::QName.new(NsV28, "PrintDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentEMailDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailDetail"),
    :schema_element => [
      ["eMailRecipients", ["FedexWebServices::Soap::Rate::ShippingDocumentEMailRecipient[]", XSD::QName.new(NsV28, "EMailRecipients")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::Rate::ShippingDocumentEMailGroupingType", XSD::QName.new(NsV28, "Grouping")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentEMailRecipient,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailRecipient"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::Rate::EMailNotificationRecipientType", XSD::QName.new(NsV28, "RecipientType")], [0, 1]],
      ["address", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentFormat,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentFormat"),
    :schema_element => [
      ["dispositions", ["FedexWebServices::Soap::Rate::ShippingDocumentDispositionDetail[]", XSD::QName.new(NsV28, "Dispositions")], [0, nil]],
      ["topOfPageOffset", ["FedexWebServices::Soap::Rate::LinearMeasure", XSD::QName.new(NsV28, "TopOfPageOffset")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::Rate::ShippingDocumentImageType", XSD::QName.new(NsV28, "ImageType")], [0, 1]],
      ["stockType", ["FedexWebServices::Soap::Rate::ShippingDocumentStockType", XSD::QName.new(NsV28, "StockType")], [0, 1]],
      ["provideInstructions", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ProvideInstructions")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::Rate::DocumentFormatOptionsRequested", XSD::QName.new(NsV28, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentPrintDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentPrintDetail"),
    :schema_element => [
      ["printerId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PrinterId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentSpecification"),
    :schema_element => [
      ["shippingDocumentTypes", ["FedexWebServices::Soap::Rate::RequestedShippingDocumentType[]", XSD::QName.new(NsV28, "ShippingDocumentTypes")], [0, nil]],
      ["certificateOfOrigin", ["FedexWebServices::Soap::Rate::CertificateOfOriginDetail", XSD::QName.new(NsV28, "CertificateOfOrigin")], [0, 1]],
      ["commercialInvoiceDetail", ["FedexWebServices::Soap::Rate::CommercialInvoiceDetail", XSD::QName.new(NsV28, "CommercialInvoiceDetail")], [0, 1]],
      ["customPackageDocumentDetail", ["FedexWebServices::Soap::Rate::CustomDocumentDetail[]", XSD::QName.new(NsV28, "CustomPackageDocumentDetail")], [0, nil]],
      ["customShipmentDocumentDetail", ["FedexWebServices::Soap::Rate::CustomDocumentDetail[]", XSD::QName.new(NsV28, "CustomShipmentDocumentDetail")], [0, nil]],
      ["exportDeclarationDetail", ["FedexWebServices::Soap::Rate::ExportDeclarationDetail", XSD::QName.new(NsV28, "ExportDeclarationDetail")], [0, 1]],
      ["generalAgencyAgreementDetail", ["FedexWebServices::Soap::Rate::GeneralAgencyAgreementDetail", XSD::QName.new(NsV28, "GeneralAgencyAgreementDetail")], [0, 1]],
      ["naftaCertificateOfOriginDetail", ["FedexWebServices::Soap::Rate::NaftaCertificateOfOriginDetail", XSD::QName.new(NsV28, "NaftaCertificateOfOriginDetail")], [0, 1]],
      ["op900Detail", ["FedexWebServices::Soap::Rate::Op900Detail", XSD::QName.new(NsV28, "Op900Detail")], [0, 1]],
      ["dangerousGoodsShippersDeclarationDetail", ["FedexWebServices::Soap::Rate::DangerousGoodsShippersDeclarationDetail", XSD::QName.new(NsV28, "DangerousGoodsShippersDeclarationDetail")], [0, 1]],
      ["freightAddressLabelDetail", ["FedexWebServices::Soap::Rate::FreightAddressLabelDetail", XSD::QName.new(NsV28, "FreightAddressLabelDetail")], [0, 1]],
      ["returnInstructionsDetail", ["FedexWebServices::Soap::Rate::ReturnInstructionsDetail", XSD::QName.new(NsV28, "ReturnInstructionsDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SignatureOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "SignatureOptionDetail"),
    :schema_element => [
      ["optionType", ["FedexWebServices::Soap::Rate::SignatureOptionType", XSD::QName.new(NsV28, "OptionType")], [0, 1]],
      ["signatureReleaseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SignatureReleaseNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SmartPostShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentDetail"),
    :schema_element => [
      ["processingOptionsRequested", ["FedexWebServices::Soap::Rate::SmartPostShipmentProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptionsRequested")], [0, 1]],
      ["indicia", ["FedexWebServices::Soap::Rate::SmartPostIndiciaType", XSD::QName.new(NsV28, "Indicia")], [0, 1]],
      ["ancillaryEndorsement", ["FedexWebServices::Soap::Rate::SmartPostAncillaryEndorsementType", XSD::QName.new(NsV28, "AncillaryEndorsement")], [0, 1]],
      ["hubId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HubId")], [0, 1]],
      ["customerManifestId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerManifestId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SmartPostShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Rate::SmartPostShipmentProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Surcharge,
    :schema_type => XSD::QName.new(NsV28, "Surcharge"),
    :schema_element => [
      ["surchargeType", ["FedexWebServices::Soap::Rate::SurchargeType", XSD::QName.new(NsV28, "SurchargeType")], [0, 1]],
      ["level", ["FedexWebServices::Soap::Rate::SurchargeLevelType", XSD::QName.new(NsV28, "Level")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Tax,
    :schema_type => XSD::QName.new(NsV28, "Tax"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::Rate::TaxType", XSD::QName.new(NsV28, "TaxType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::TaxpayerIdentification,
    :schema_type => XSD::QName.new(NsV28, "TaxpayerIdentification"),
    :schema_element => [
      ["tinType", ["FedexWebServices::Soap::Rate::TinType", XSD::QName.new(NsV28, "TinType")], [0, 1]],
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Number")], [0, 1]],
      ["usage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Usage")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ExpirationDate")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::TrackingId,
    :schema_type => XSD::QName.new(NsV28, "TrackingId"),
    :schema_element => [
      ["trackingIdType", ["FedexWebServices::Soap::Rate::TrackingIdType", XSD::QName.new(NsV28, "TrackingIdType")], [0, 1]],
      ["formId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FormId")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TrackingNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::TransactionDetail,
    :schema_type => XSD::QName.new(NsV28, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::UploadDocumentReferenceDetail,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentReferenceDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerReference")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::Rate::UploadDocumentProducerType", XSD::QName.new(NsV28, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::Rate::UploadDocumentType", XSD::QName.new(NsV28, "DocumentType")], [0, 1]],
      ["documentId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DocumentId")], [0, 1]],
      ["documentIdProducer", ["FedexWebServices::Soap::Rate::UploadDocumentIdProducer", XSD::QName.new(NsV28, "DocumentIdProducer")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::VariableHandlingChargeDetail,
    :schema_type => XSD::QName.new(NsV28, "VariableHandlingChargeDetail"),
    :schema_element => [
      ["fixedValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "FixedValue")], [0, 1]],
      ["percentValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "PercentValue")], [0, 1]],
      ["rateElementBasis", ["FedexWebServices::Soap::Rate::RateElementBasisType", XSD::QName.new(NsV28, "RateElementBasis")], [0, 1]],
      ["rateTypeBasis", ["FedexWebServices::Soap::Rate::RateTypeBasisType", XSD::QName.new(NsV28, "RateTypeBasis")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::VariableHandlingCharges,
    :schema_type => XSD::QName.new(NsV28, "VariableHandlingCharges"),
    :schema_element => [
      ["variableHandlingCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "VariableHandlingCharge")], [0, 1]],
      ["fixedVariableHandlingCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "FixedVariableHandlingCharge")], [0, 1]],
      ["percentVariableHandlingCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "PercentVariableHandlingCharge")], [0, 1]],
      ["totalCustomerCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalCustomerCharge")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Volume,
    :schema_type => XSD::QName.new(NsV28, "Volume"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Rate::VolumeUnits", XSD::QName.new(NsV28, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::Weight,
    :schema_type => XSD::QName.new(NsV28, "Weight"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Rate::WeightUnits", XSD::QName.new(NsV28, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV28, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::Rate::WebAuthenticationCredential", XSD::QName.new(NsV28, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::Rate::WebAuthenticationCredential", XSD::QName.new(NsV28, "UserCredential")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV28, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Password")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::VersionId,
    :schema_type => XSD::QName.new(NsV28, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Minor")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::AdditionalLabelsType,
    :schema_type => XSD::QName.new(NsV28, "AdditionalLabelsType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::AlcoholRecipientType,
    :schema_type => XSD::QName.new(NsV28, "AlcoholRecipientType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::AncillaryFeeAndTaxType,
    :schema_type => XSD::QName.new(NsV28, "AncillaryFeeAndTaxType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::B13AFilingOptionType,
    :schema_type => XSD::QName.new(NsV28, "B13AFilingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::BarcodeSymbologyType,
    :schema_type => XSD::QName.new(NsV28, "BarcodeSymbologyType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::BatteryMaterialType,
    :schema_type => XSD::QName.new(NsV28, "BatteryMaterialType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::BatteryPackingType,
    :schema_type => XSD::QName.new(NsV28, "BatteryPackingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::BatteryRegulatorySubType,
    :schema_type => XSD::QName.new(NsV28, "BatteryRegulatorySubType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::BrokerType,
    :schema_type => XSD::QName.new(NsV28, "BrokerType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CarrierCodeType,
    :schema_type => XSD::QName.new(NsV28, "CarrierCodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ChargeBasisLevelType,
    :schema_type => XSD::QName.new(NsV28, "ChargeBasisLevelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ClearanceBrokerageType,
    :schema_type => XSD::QName.new(NsV28, "ClearanceBrokerageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CodAddTransportationChargeBasisType,
    :schema_type => XSD::QName.new(NsV28, "CodAddTransportationChargeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CodCollectionType,
    :schema_type => XSD::QName.new(NsV28, "CodCollectionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CodReturnReferenceIndicatorType,
    :schema_type => XSD::QName.new(NsV28, "CodReturnReferenceIndicatorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CommitmentDelayType,
    :schema_type => XSD::QName.new(NsV28, "CommitmentDelayType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CommodityPurposeType,
    :schema_type => XSD::QName.new(NsV28, "CommodityPurposeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ConsolidationType,
    :schema_type => XSD::QName.new(NsV28, "ConsolidationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomDeliveryWindowType,
    :schema_type => XSD::QName.new(NsV28, "CustomDeliveryWindowType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelCoordinateUnits,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelCoordinateUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerImageUsageType,
    :schema_type => XSD::QName.new(NsV28, "CustomerImageUsageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerReferenceType,
    :schema_type => XSD::QName.new(NsV28, "CustomerReferenceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerSpecifiedLabelGenerationOptionType,
    :schema_type => XSD::QName.new(NsV28, "CustomerSpecifiedLabelGenerationOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomsOptionType,
    :schema_type => XSD::QName.new(NsV28, "CustomsOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsAccessibilityType,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsAccessibilityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsPackingOptionType,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsPackingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DayOfWeekType,
    :schema_type => XSD::QName.new(NsV28, "DayOfWeekType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DelayLevelType,
    :schema_type => XSD::QName.new(NsV28, "DelayLevelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DelayPointType,
    :schema_type => XSD::QName.new(NsV28, "DelayPointType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DestinationControlStatementType,
    :schema_type => XSD::QName.new(NsV28, "DestinationControlStatementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DistanceUnits,
    :schema_type => XSD::QName.new(NsV28, "DistanceUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabContentType,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabZoneJustificationType,
    :schema_type => XSD::QName.new(NsV28, "DocTabZoneJustificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocumentFormatOptionType,
    :schema_type => XSD::QName.new(NsV28, "DocumentFormatOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::DropoffType,
    :schema_type => XSD::QName.new(NsV28, "DropoffType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::EMailNotificationRecipientType,
    :schema_type => XSD::QName.new(NsV28, "EMailNotificationRecipientType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::EdtRequestType,
    :schema_type => XSD::QName.new(NsV28, "EdtRequestType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::EdtTaxType,
    :schema_type => XSD::QName.new(NsV28, "EdtTaxType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::EtdAttributeType,
    :schema_type => XSD::QName.new(NsV28, "EtdAttributeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ExpressRegionCode,
    :schema_type => XSD::QName.new(NsV28, "ExpressRegionCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FedExLocationType,
    :schema_type => XSD::QName.new(NsV28, "FedExLocationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FlatbedTrailerOption,
    :schema_type => XSD::QName.new(NsV28, "FlatbedTrailerOption")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightBaseChargeCalculationType,
    :schema_type => XSD::QName.new(NsV28, "FreightBaseChargeCalculationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightChargeBasisType,
    :schema_type => XSD::QName.new(NsV28, "FreightChargeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightClassType,
    :schema_type => XSD::QName.new(NsV28, "FreightClassType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightCollectTermsType,
    :schema_type => XSD::QName.new(NsV28, "FreightCollectTermsType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightGuaranteeType,
    :schema_type => XSD::QName.new(NsV28, "FreightGuaranteeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightOnValueType,
    :schema_type => XSD::QName.new(NsV28, "FreightOnValueType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightRateQuoteType,
    :schema_type => XSD::QName.new(NsV28, "FreightRateQuoteType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightServiceSchedulingType,
    :schema_type => XSD::QName.new(NsV28, "FreightServiceSchedulingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightShipmentRoleType,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityDescriptionProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityDescriptionProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityLabelTextOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityLabelTextOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityPackingGroupType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackingGroupType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityQuantityType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityQuantityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityRegulationType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityRegulationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousContainerPackingType,
    :schema_type => XSD::QName.new(NsV28, "HazardousContainerPackingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::HomeDeliveryPremiumType,
    :schema_type => XSD::QName.new(NsV28, "HomeDeliveryPremiumType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ImageId,
    :schema_type => XSD::QName.new(NsV28, "ImageId")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::InternationalControlledExportType,
    :schema_type => XSD::QName.new(NsV28, "InternationalControlledExportType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::InternationalDocumentContentType,
    :schema_type => XSD::QName.new(NsV28, "InternationalDocumentContentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelFormatType,
    :schema_type => XSD::QName.new(NsV28, "LabelFormatType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelMaskableDataType,
    :schema_type => XSD::QName.new(NsV28, "LabelMaskableDataType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelOrderType,
    :schema_type => XSD::QName.new(NsV28, "LabelOrderType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelPrintingOrientationType,
    :schema_type => XSD::QName.new(NsV28, "LabelPrintingOrientationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelRotationType,
    :schema_type => XSD::QName.new(NsV28, "LabelRotationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelStockType,
    :schema_type => XSD::QName.new(NsV28, "LabelStockType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LiabilityCoverageType,
    :schema_type => XSD::QName.new(NsV28, "LiabilityCoverageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::LinearUnits,
    :schema_type => XSD::QName.new(NsV28, "LinearUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::MinimumChargeType,
    :schema_type => XSD::QName.new(NsV28, "MinimumChargeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaImporterSpecificationType,
    :schema_type => XSD::QName.new(NsV28, "NaftaImporterSpecificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaNetCostMethodCode,
    :schema_type => XSD::QName.new(NsV28, "NaftaNetCostMethodCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaPreferenceCriterionCode,
    :schema_type => XSD::QName.new(NsV28, "NaftaPreferenceCriterionCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaProducerDeterminationCode,
    :schema_type => XSD::QName.new(NsV28, "NaftaProducerDeterminationCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaProducerSpecificationType,
    :schema_type => XSD::QName.new(NsV28, "NaftaProducerSpecificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NetExplosiveClassificationType,
    :schema_type => XSD::QName.new(NsV28, "NetExplosiveClassificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationEventType,
    :schema_type => XSD::QName.new(NsV28, "NotificationEventType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationFormatType,
    :schema_type => XSD::QName.new(NsV28, "NotificationFormatType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV28, "NotificationSeverityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationType,
    :schema_type => XSD::QName.new(NsV28, "NotificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::OversizeClassType,
    :schema_type => XSD::QName.new(NsV28, "OversizeClassType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PageQuadrantType,
    :schema_type => XSD::QName.new(NsV28, "PageQuadrantType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PaymentType,
    :schema_type => XSD::QName.new(NsV28, "PaymentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PendingShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PendingShipmentType,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PhysicalFormType,
    :schema_type => XSD::QName.new(NsV28, "PhysicalFormType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PhysicalPackagingType,
    :schema_type => XSD::QName.new(NsV28, "PhysicalPackagingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PickupRequestSourceType,
    :schema_type => XSD::QName.new(NsV28, "PickupRequestSourceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PickupRequestType,
    :schema_type => XSD::QName.new(NsV28, "PickupRequestType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PricingCodeType,
    :schema_type => XSD::QName.new(NsV28, "PricingCodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PriorityAlertEnhancementType,
    :schema_type => XSD::QName.new(NsV28, "PriorityAlertEnhancementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::PurposeOfShipmentType,
    :schema_type => XSD::QName.new(NsV28, "PurposeOfShipmentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RadioactiveContainerClassType,
    :schema_type => XSD::QName.new(NsV28, "RadioactiveContainerClassType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RadioactivityUnitOfMeasure,
    :schema_type => XSD::QName.new(NsV28, "RadioactivityUnitOfMeasure")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateDimensionalDivisorType,
    :schema_type => XSD::QName.new(NsV28, "RateDimensionalDivisorType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateDiscountType,
    :schema_type => XSD::QName.new(NsV28, "RateDiscountType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateElementBasisType,
    :schema_type => XSD::QName.new(NsV28, "RateElementBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateRequestType,
    :schema_type => XSD::QName.new(NsV28, "RateRequestType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateTypeBasisType,
    :schema_type => XSD::QName.new(NsV28, "RateTypeBasisType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RatedWeightMethod,
    :schema_type => XSD::QName.new(NsV28, "RatedWeightMethod")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RebateType,
    :schema_type => XSD::QName.new(NsV28, "RebateType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RecipientCustomsIdType,
    :schema_type => XSD::QName.new(NsV28, "RecipientCustomsIdType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RecommendedDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RecommendedDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RegulatoryControlType,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryControlType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RegulatoryLabelType,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryLabelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RelativeVerticalPositionType,
    :schema_type => XSD::QName.new(NsV28, "RelativeVerticalPositionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RequestedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RequestedShippingDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RequiredShippingDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RequiredShippingDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnEMailAllowedSpecialServiceType,
    :schema_type => XSD::QName.new(NsV28, "ReturnEMailAllowedSpecialServiceType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnType,
    :schema_type => XSD::QName.new(NsV28, "ReturnType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnedRateType,
    :schema_type => XSD::QName.new(NsV28, "ReturnedRateType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::RotationType,
    :schema_type => XSD::QName.new(NsV28, "RotationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SecondaryBarcodeType,
    :schema_type => XSD::QName.new(NsV28, "SecondaryBarcodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ServiceOptionType,
    :schema_type => XSD::QName.new(NsV28, "ServiceOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentDryIceProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentNotificationAggregationType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationAggregationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentNotificationRoleType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentOnlyFieldsType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentOnlyFieldsType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentDispositionType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentDispositionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentEMailGroupingType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailGroupingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentGroupingType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentGroupingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentImageType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentImageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentStockType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentStockType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SignatureOptionType,
    :schema_type => XSD::QName.new(NsV28, "SignatureOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SmartPostAncillaryEndorsementType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostAncillaryEndorsementType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SmartPostIndiciaType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostIndiciaType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SmartPostShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SpecialRatingAppliedType,
    :schema_type => XSD::QName.new(NsV28, "SpecialRatingAppliedType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SurchargeLevelType,
    :schema_type => XSD::QName.new(NsV28, "SurchargeLevelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::SurchargeType,
    :schema_type => XSD::QName.new(NsV28, "SurchargeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::TaxType,
    :schema_type => XSD::QName.new(NsV28, "TaxType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::TaxesOrMiscellaneousChargeType,
    :schema_type => XSD::QName.new(NsV28, "TaxesOrMiscellaneousChargeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::TinType,
    :schema_type => XSD::QName.new(NsV28, "TinType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::TrackingIdType,
    :schema_type => XSD::QName.new(NsV28, "TrackingIdType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::TransitTimeType,
    :schema_type => XSD::QName.new(NsV28, "TransitTimeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::UploadDocumentIdProducer,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentIdProducer")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::UploadDocumentProducerType,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentProducerType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::UploadDocumentType,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::VolumeUnits,
    :schema_type => XSD::QName.new(NsV28, "VolumeUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Rate::WeightUnits,
    :schema_type => XSD::QName.new(NsV28, "WeightUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::AdditionalLabelsDetail,
    :schema_type => XSD::QName.new(NsV28, "AdditionalLabelsDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::AdditionalLabelsType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Count")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Address,
    :schema_type => XSD::QName.new(NsV28, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV28, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "Residential")], [0, 1]],
      ["geographicCoordinates", ["SOAP::SOAPString", XSD::QName.new(NsV28, "GeographicCoordinates")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::AlcoholDetail,
    :schema_type => XSD::QName.new(NsV28, "AlcoholDetail"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::Rate::AlcoholRecipientType", XSD::QName.new(NsV28, "RecipientType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::AncillaryFeeAndTax,
    :schema_type => XSD::QName.new(NsV28, "AncillaryFeeAndTax"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::AncillaryFeeAndTaxType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::AssociatedFreightLineItemDetail,
    :schema_type => XSD::QName.new(NsV28, "AssociatedFreightLineItemDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::BatteryClassificationDetail,
    :schema_type => XSD::QName.new(NsV28, "BatteryClassificationDetail"),
    :schema_element => [
      ["material", ["FedexWebServices::Soap::Rate::BatteryMaterialType", XSD::QName.new(NsV28, "Material")], [0, 1]],
      ["packing", ["FedexWebServices::Soap::Rate::BatteryPackingType", XSD::QName.new(NsV28, "Packing")], [0, 1]],
      ["regulatorySubType", ["FedexWebServices::Soap::Rate::BatteryRegulatorySubType", XSD::QName.new(NsV28, "RegulatorySubType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::BrokerDetail,
    :schema_type => XSD::QName.new(NsV28, "BrokerDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::BrokerType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["broker", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "Broker")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CertificateOfOriginDetail,
    :schema_type => XSD::QName.new(NsV28, "CertificateOfOriginDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CleansedAddressAndLocationDetail,
    :schema_type => XSD::QName.new(NsV28, "CleansedAddressAndLocationDetail"),
    :schema_element => [
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryCode")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PostalCode")], [0, 1]],
      ["serviceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceArea")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "LocationNumber")], [0, 1]],
      ["airportId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AirportId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ClientDetail,
    :schema_type => XSD::QName.new(NsV28, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MeterNumber")]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "IntegratorId")], [0, 1]],
      ["region", ["FedexWebServices::Soap::Rate::ExpressRegionCode", XSD::QName.new(NsV28, "Region")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CodAddTransportationChargesDetail,
    :schema_type => XSD::QName.new(NsV28, "CodAddTransportationChargesDetail"),
    :schema_element => [
      ["rateTypeBasis", ["FedexWebServices::Soap::Rate::RateTypeBasisType", XSD::QName.new(NsV28, "RateTypeBasis")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::Rate::CodAddTransportationChargeBasisType", XSD::QName.new(NsV28, "ChargeBasis")], [0, 1]],
      ["chargeBasisLevel", ["FedexWebServices::Soap::Rate::ChargeBasisLevelType", XSD::QName.new(NsV28, "ChargeBasisLevel")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CodDetail,
    :schema_type => XSD::QName.new(NsV28, "CodDetail"),
    :schema_element => [
      ["codCollectionAmount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "CodCollectionAmount")], [0, 1]],
      ["addTransportationChargesDetail", ["FedexWebServices::Soap::Rate::CodAddTransportationChargesDetail", XSD::QName.new(NsV28, "AddTransportationChargesDetail")], [0, 1]],
      ["collectionType", ["FedexWebServices::Soap::Rate::CodCollectionType", XSD::QName.new(NsV28, "CollectionType")], [0, 1]],
      ["codRecipient", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "CodRecipient")], [0, 1]],
      ["financialInstitutionContactAndAddress", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "FinancialInstitutionContactAndAddress")], [0, 1]],
      ["remitToName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RemitToName")], [0, 1]],
      ["referenceIndicator", ["FedexWebServices::Soap::Rate::CodReturnReferenceIndicatorType", XSD::QName.new(NsV28, "ReferenceIndicator")], [0, 1]],
      ["returnTrackingId", ["FedexWebServices::Soap::Rate::TrackingId", XSD::QName.new(NsV28, "ReturnTrackingId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CommercialInvoice,
    :schema_type => XSD::QName.new(NsV28, "CommercialInvoice"),
    :schema_element => [
      ["comments", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Comments")], [0, nil]],
      ["freightCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "FreightCharge")], [0, 1]],
      ["taxesOrMiscellaneousCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TaxesOrMiscellaneousCharge")], [0, 1]],
      ["taxesOrMiscellaneousChargeType", ["FedexWebServices::Soap::Rate::TaxesOrMiscellaneousChargeType", XSD::QName.new(NsV28, "TaxesOrMiscellaneousChargeType")], [0, 1]],
      ["packingCosts", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "PackingCosts")], [0, 1]],
      ["handlingCosts", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "HandlingCosts")], [0, 1]],
      ["specialInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecialInstructions")], [0, 1]],
      ["declarationStatement", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeclarationStatement")], [0, 1]],
      ["paymentTerms", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PaymentTerms")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::Rate::PurposeOfShipmentType", XSD::QName.new(NsV28, "Purpose")], [0, 1]],
      ["originatorName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "OriginatorName")], [0, 1]],
      ["termsOfSale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TermsOfSale")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CommercialInvoiceDetail,
    :schema_type => XSD::QName.new(NsV28, "CommercialInvoiceDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CommitDetail,
    :schema_type => XSD::QName.new(NsV28, "CommitDetail"),
    :schema_element => [
      ["commodityName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CommodityName")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["serviceDescription", ["FedexWebServices::Soap::Rate::ServiceDescription", XSD::QName.new(NsV28, "ServiceDescription")], [0, 1]],
      ["appliedOptions", ["FedexWebServices::Soap::Rate::ServiceOptionType[]", XSD::QName.new(NsV28, "AppliedOptions")], [0, nil]],
      ["appliedSubOptions", ["FedexWebServices::Soap::Rate::ServiceSubOptionDetail", XSD::QName.new(NsV28, "AppliedSubOptions")], [0, 1]],
      ["derivedShipmentSignatureOption", ["FedexWebServices::Soap::Rate::SignatureOptionDetail", XSD::QName.new(NsV28, "DerivedShipmentSignatureOption")], [0, 1]],
      ["derivedPackageSignatureOptions", ["FedexWebServices::Soap::Rate::SignatureOptionDetail[]", XSD::QName.new(NsV28, "DerivedPackageSignatureOptions")], [0, nil]],
      ["derivedOriginDetail", ["FedexWebServices::Soap::Rate::CleansedAddressAndLocationDetail", XSD::QName.new(NsV28, "DerivedOriginDetail")], [0, 1]],
      ["derivedDestinationDetail", ["FedexWebServices::Soap::Rate::CleansedAddressAndLocationDetail", XSD::QName.new(NsV28, "DerivedDestinationDetail")], [0, 1]],
      ["commitTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "CommitTimestamp")], [0, 1]],
      ["dayOfWeek", ["FedexWebServices::Soap::Rate::DayOfWeekType", XSD::QName.new(NsV28, "DayOfWeek")], [0, 1]],
      ["transitTime", ["FedexWebServices::Soap::Rate::TransitTimeType", XSD::QName.new(NsV28, "TransitTime")], [0, 1]],
      ["maximumTransitTime", ["FedexWebServices::Soap::Rate::TransitTimeType", XSD::QName.new(NsV28, "MaximumTransitTime")], [0, 1]],
      ["destinationServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationServiceArea")], [0, 1]],
      ["brokerAddress", ["FedexWebServices::Soap::Rate::Address", XSD::QName.new(NsV28, "BrokerAddress")], [0, 1]],
      ["brokerLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "BrokerLocationId")], [0, 1]],
      ["brokerCommitTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "BrokerCommitTimestamp")], [0, 1]],
      ["brokerCommitDayOfWeek", ["FedexWebServices::Soap::Rate::DayOfWeekType", XSD::QName.new(NsV28, "BrokerCommitDayOfWeek")], [0, 1]],
      ["brokerToDestinationDays", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "BrokerToDestinationDays")], [0, 1]],
      ["proofOfDeliveryDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ProofOfDeliveryDate")], [0, 1]],
      ["proofOfDeliveryDayOfWeek", ["FedexWebServices::Soap::Rate::DayOfWeekType", XSD::QName.new(NsV28, "ProofOfDeliveryDayOfWeek")], [0, 1]],
      ["commitMessages", ["FedexWebServices::Soap::Rate::Notification[]", XSD::QName.new(NsV28, "CommitMessages")], [0, nil]],
      ["deliveryMessages", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DeliveryMessages")], [0, nil]],
      ["delayDetails", ["FedexWebServices::Soap::Rate::DelayDetail[]", XSD::QName.new(NsV28, "DelayDetails")], [0, nil]],
      ["documentContent", ["FedexWebServices::Soap::Rate::InternationalDocumentContentType", XSD::QName.new(NsV28, "DocumentContent")], [0, 1]],
      ["requiredDocuments", ["FedexWebServices::Soap::Rate::RequiredShippingDocumentType[]", XSD::QName.new(NsV28, "RequiredDocuments")], [0, nil]],
      ["freightCommitDetail", ["FedexWebServices::Soap::Rate::FreightCommitDetail", XSD::QName.new(NsV28, "FreightCommitDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Commodity,
    :schema_type => XSD::QName.new(NsV28, "Commodity"),
    :schema_element => [
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["numberOfPieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "NumberOfPieces")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::Rate::CommodityPurposeType", XSD::QName.new(NsV28, "Purpose")], [0, 1]],
      ["countryOfManufacture", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CountryOfManufacture")], [0, 1]],
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HarmonizedCode")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["quantityUnits", ["SOAP::SOAPString", XSD::QName.new(NsV28, "QuantityUnits")], [0, 1]],
      ["additionalMeasures", ["FedexWebServices::Soap::Rate::Measure[]", XSD::QName.new(NsV28, "AdditionalMeasures")], [0, nil]],
      ["unitPrice", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "UnitPrice")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "CustomsValue")], [0, 1]],
      ["exciseConditions", ["FedexWebServices::Soap::Rate::EdtExciseCondition[]", XSD::QName.new(NsV28, "ExciseConditions")], [0, nil]],
      ["exportLicenseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExportLicenseNumber")], [0, 1]],
      ["exportLicenseExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ExportLicenseExpirationDate")], [0, 1]],
      ["cIMarksAndNumbers", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CIMarksAndNumbers")], [0, 1]],
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PartNumber")], [0, 1]],
      ["naftaDetail", ["FedexWebServices::Soap::Rate::NaftaCommodityDetail", XSD::QName.new(NsV28, "NaftaDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ConfigurableLabelReferenceEntry,
    :schema_type => XSD::QName.new(NsV28, "ConfigurableLabelReferenceEntry"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ZoneNumber")], [0, 1]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LiteralValue")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ConsolidationKey,
    :schema_type => XSD::QName.new(NsV28, "ConsolidationKey"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::ConsolidationType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["index", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Index")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Contact,
    :schema_type => XSD::QName.new(NsV28, "Contact"),
    :schema_element => [
      ["contactId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContactId")], [0, 1]],
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EMailAddress")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ContactAndAddress,
    :schema_type => XSD::QName.new(NsV28, "ContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::Rate::Contact", XSD::QName.new(NsV28, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Rate::Address", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ContentRecord,
    :schema_type => XSD::QName.new(NsV28, "ContentRecord"),
    :schema_element => [
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PartNumber")], [0, 1]],
      ["itemNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemNumber")], [0, 1]],
      ["receivedQuantity", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "ReceivedQuantity")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CurrencyExchangeRate,
    :schema_type => XSD::QName.new(NsV28, "CurrencyExchangeRate"),
    :schema_element => [
      ["fromCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FromCurrency")], [0, 1]],
      ["intoCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "IntoCurrency")], [0, 1]],
      ["rate", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Rate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomDeliveryWindowDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomDeliveryWindowDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::CustomDeliveryWindowType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["requestTime", ["SOAP::SOAPTime", XSD::QName.new(NsV28, "RequestTime")], [0, 1]],
      ["requestRange", ["FedexWebServices::Soap::Rate::DateRange", XSD::QName.new(NsV28, "RequestRange")], [0, 1]],
      ["requestDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "RequestDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomDocumentDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomDocumentDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::Rate::LabelPrintingOrientationType", XSD::QName.new(NsV28, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::Rate::LabelRotationType", XSD::QName.new(NsV28, "LabelRotation")], [0, 1]],
      ["specificationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecificationId")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Rate::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelBarcodeEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelBarcodeEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["barHeight", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "BarHeight")], [0, 1]],
      ["thinBarWidth", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "ThinBarWidth")], [0, 1]],
      ["barcodeSymbology", ["FedexWebServices::Soap::Rate::BarcodeSymbologyType", XSD::QName.new(NsV28, "BarcodeSymbology")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelBoxEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "TopLeftCorner")], [0, 1]],
      ["bottomRightCorner", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "BottomRightCorner")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelDetail"),
    :schema_element => [
      ["coordinateUnits", ["FedexWebServices::Soap::Rate::CustomLabelCoordinateUnits", XSD::QName.new(NsV28, "CoordinateUnits")], [0, 1]],
      ["textEntries", ["FedexWebServices::Soap::Rate::CustomLabelTextEntry[]", XSD::QName.new(NsV28, "TextEntries")], [0, nil]],
      ["graphicEntries", ["FedexWebServices::Soap::Rate::CustomLabelGraphicEntry[]", XSD::QName.new(NsV28, "GraphicEntries")], [0, nil]],
      ["boxEntries", ["FedexWebServices::Soap::Rate::CustomLabelBoxEntry[]", XSD::QName.new(NsV28, "BoxEntries")], [0, nil]],
      ["textBoxEntries", ["FedexWebServices::Soap::Rate::CustomLabelTextBoxEntry[]", XSD::QName.new(NsV28, "TextBoxEntries")], [0, nil]],
      ["barcodeEntries", ["FedexWebServices::Soap::Rate::CustomLabelBarcodeEntry[]", XSD::QName.new(NsV28, "BarcodeEntries")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelGraphicEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelGraphicEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["printerGraphicId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PrinterGraphicId")], [0, 1]],
      ["fileGraphicFullName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FileGraphicFullName")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelPosition,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelPosition"),
    :schema_element => [
      ["x", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "X")], [0, 1]],
      ["y", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Y")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelTextBoxEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelTextBoxEntry"),
    :schema_element => [
      ["topLeftCorner", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "TopLeftCorner")], [0, 1]],
      ["bottomRightCorner", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "BottomRightCorner")], [0, 1]],
      ["position", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::Rate::RotationType", XSD::QName.new(NsV28, "Rotation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelTextEntry,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelTextEntry"),
    :schema_element => [
      ["position", ["FedexWebServices::Soap::Rate::CustomLabelPosition", XSD::QName.new(NsV28, "Position")], [0, 1]],
      ["format", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["dataFields", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "DataFields")], [0, nil]],
      ["thermalFontId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ThermalFontId")], [0, 1]],
      ["fontName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FontName")], [0, 1]],
      ["fontSize", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "FontSize")], [0, 1]],
      ["rotation", ["FedexWebServices::Soap::Rate::RotationType", XSD::QName.new(NsV28, "Rotation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerImageUsage,
    :schema_type => XSD::QName.new(NsV28, "CustomerImageUsage"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::CustomerImageUsageType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["id", ["FedexWebServices::Soap::Rate::ImageId", XSD::QName.new(NsV28, "Id")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerReference,
    :schema_type => XSD::QName.new(NsV28, "CustomerReference"),
    :schema_element => [
      ["customerReferenceType", ["FedexWebServices::Soap::Rate::CustomerReferenceType", XSD::QName.new(NsV28, "CustomerReferenceType")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerSpecifiedLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomerSpecifiedLabelDetail"),
    :schema_element => [
      ["docTabContent", ["FedexWebServices::Soap::Rate::DocTabContent", XSD::QName.new(NsV28, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::Rate::RelativeVerticalPositionType", XSD::QName.new(NsV28, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Rate::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]],
      ["configurableReferenceEntries", ["FedexWebServices::Soap::Rate::ConfigurableLabelReferenceEntry[]", XSD::QName.new(NsV28, "ConfigurableReferenceEntries")], [0, nil]],
      ["maskedData", ["FedexWebServices::Soap::Rate::LabelMaskableDataType[]", XSD::QName.new(NsV28, "MaskedData")], [0, nil]],
      ["secondaryBarcode", ["FedexWebServices::Soap::Rate::SecondaryBarcodeType", XSD::QName.new(NsV28, "SecondaryBarcode")], [0, 1]],
      ["termsAndConditionsLocalization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "TermsAndConditionsLocalization")], [0, 1]],
      ["regulatoryLabels", ["FedexWebServices::Soap::Rate::RegulatoryLabelContentDetail[]", XSD::QName.new(NsV28, "RegulatoryLabels")], [0, nil]],
      ["additionalLabels", ["FedexWebServices::Soap::Rate::AdditionalLabelsDetail[]", XSD::QName.new(NsV28, "AdditionalLabels")], [0, nil]],
      ["airWaybillSuppressionCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "AirWaybillSuppressionCount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomsClearanceDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomsClearanceDetail"),
    :schema_element => [
      ["brokers", ["FedexWebServices::Soap::Rate::BrokerDetail[]", XSD::QName.new(NsV28, "Brokers")], [0, nil]],
      ["clearanceBrokerage", ["FedexWebServices::Soap::Rate::ClearanceBrokerageType", XSD::QName.new(NsV28, "ClearanceBrokerage")], [0, 1]],
      ["customsOptions", ["FedexWebServices::Soap::Rate::CustomsOptionDetail", XSD::QName.new(NsV28, "CustomsOptions")], [0, 1]],
      ["importerOfRecord", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "ImporterOfRecord")], [0, 1]],
      ["recipientCustomsId", ["FedexWebServices::Soap::Rate::RecipientCustomsId", XSD::QName.new(NsV28, "RecipientCustomsId")], [0, 1]],
      ["dutiesPayment", ["FedexWebServices::Soap::Rate::Payment", XSD::QName.new(NsV28, "DutiesPayment")], [0, 1]],
      ["documentContent", ["FedexWebServices::Soap::Rate::InternationalDocumentContentType", XSD::QName.new(NsV28, "DocumentContent")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "CustomsValue")], [0, 1]],
      ["freightOnValue", ["FedexWebServices::Soap::Rate::FreightOnValueType", XSD::QName.new(NsV28, "FreightOnValue")], [0, 1]],
      ["insuranceCharges", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "InsuranceCharges")], [0, 1]],
      ["partiesToTransactionAreRelated", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "PartiesToTransactionAreRelated")], [0, 1]],
      ["commercialInvoice", ["FedexWebServices::Soap::Rate::CommercialInvoice", XSD::QName.new(NsV28, "CommercialInvoice")], [0, 1]],
      ["commodities", ["FedexWebServices::Soap::Rate::Commodity[]", XSD::QName.new(NsV28, "Commodities")], [0, nil]],
      ["exportDetail", ["FedexWebServices::Soap::Rate::ExportDetail", XSD::QName.new(NsV28, "ExportDetail")], [0, 1]],
      ["regulatoryControls", ["FedexWebServices::Soap::Rate::RegulatoryControlType[]", XSD::QName.new(NsV28, "RegulatoryControls")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomsOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "CustomsOptionDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::CustomsOptionType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsContainer,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsContainer"),
    :schema_element => [
      ["packingType", ["FedexWebServices::Soap::Rate::HazardousContainerPackingType", XSD::QName.new(NsV28, "PackingType")], [0, 1]],
      ["containerType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContainerType")], [0, 1]],
      ["radioactiveContainerClass", ["FedexWebServices::Soap::Rate::RadioactiveContainerClassType", XSD::QName.new(NsV28, "RadioactiveContainerClass")], [0, 1]],
      ["numberOfContainers", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "NumberOfContainers")], [0, 1]],
      ["hazardousCommodities", ["FedexWebServices::Soap::Rate::HazardousCommodityContent[]", XSD::QName.new(NsV28, "HazardousCommodities")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsDetail,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsDetail"),
    :schema_element => [
      ["regulation", ["FedexWebServices::Soap::Rate::HazardousCommodityRegulationType", XSD::QName.new(NsV28, "Regulation")], [0, 1]],
      ["accessibility", ["FedexWebServices::Soap::Rate::DangerousGoodsAccessibilityType", XSD::QName.new(NsV28, "Accessibility")], [0, 1]],
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "CargoAircraftOnly")], [0, 1]],
      ["options", ["FedexWebServices::Soap::Rate::HazardousCommodityOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]],
      ["packingOption", ["FedexWebServices::Soap::Rate::DangerousGoodsPackingOptionType", XSD::QName.new(NsV28, "PackingOption")], [0, 1]],
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ReferenceId")], [0, 1]],
      ["containers", ["FedexWebServices::Soap::Rate::DangerousGoodsContainer[]", XSD::QName.new(NsV28, "Containers")], [0, nil]],
      ["packaging", ["FedexWebServices::Soap::Rate::HazardousCommodityPackagingDetail", XSD::QName.new(NsV28, "Packaging")], [0, 1]],
      ["signatory", ["FedexWebServices::Soap::Rate::DangerousGoodsSignatory", XSD::QName.new(NsV28, "Signatory")], [0, 1]],
      ["emergencyContactNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmergencyContactNumber")], [0, 1]],
      ["offeror", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Offeror")], [0, 1]],
      ["infectiousSubstanceResponsibleContact", ["FedexWebServices::Soap::Rate::Contact", XSD::QName.new(NsV28, "InfectiousSubstanceResponsibleContact")], [0, 1]],
      ["additionalHandling", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AdditionalHandling")], [0, 1]],
      ["radioactivityDetail", ["FedexWebServices::Soap::Rate::RadioactivityDetail", XSD::QName.new(NsV28, "RadioactivityDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsShippersDeclarationDetail,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsShippersDeclarationDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsSignatory,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsSignatory"),
    :schema_element => [
      ["contactName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ContactName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Title")], [0, 1]],
      ["place", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Place")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DateRange,
    :schema_type => XSD::QName.new(NsV28, "DateRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Ends")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DelayDetail,
    :schema_type => XSD::QName.new(NsV28, "DelayDetail"),
    :schema_element => [
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]],
      ["dayOfWeek", ["FedexWebServices::Soap::Rate::DayOfWeekType", XSD::QName.new(NsV28, "DayOfWeek")], [0, 1]],
      ["level", ["FedexWebServices::Soap::Rate::DelayLevelType", XSD::QName.new(NsV28, "Level")], [0, 1]],
      ["point", ["FedexWebServices::Soap::Rate::DelayPointType", XSD::QName.new(NsV28, "Point")], [0, 1]],
      ["type", ["FedexWebServices::Soap::Rate::CommitmentDelayType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DeliveryOnInvoiceAcceptanceDetail,
    :schema_type => XSD::QName.new(NsV28, "DeliveryOnInvoiceAcceptanceDetail"),
    :schema_element => [
      ["recipient", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "Recipient")], [0, 1]],
      ["trackingId", ["FedexWebServices::Soap::Rate::TrackingId", XSD::QName.new(NsV28, "TrackingId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DestinationControlDetail,
    :schema_type => XSD::QName.new(NsV28, "DestinationControlDetail"),
    :schema_element => [
      ["statementTypes", ["FedexWebServices::Soap::Rate::DestinationControlStatementType[]", XSD::QName.new(NsV28, "StatementTypes")], [0, nil]],
      ["destinationCountries", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationCountries")], [0, 1]],
      ["endUser", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EndUser")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Dimensions,
    :schema_type => XSD::QName.new(NsV28, "Dimensions"),
    :schema_element => [
      ["length", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Length")], [0, 1]],
      ["width", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Width")], [0, 1]],
      ["height", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Height")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Rate::LinearUnits", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Distance,
    :schema_type => XSD::QName.new(NsV28, "Distance"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Rate::DistanceUnits", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabContent,
    :schema_type => XSD::QName.new(NsV28, "DocTabContent"),
    :schema_element => [
      ["docTabContentType", ["FedexWebServices::Soap::Rate::DocTabContentType", XSD::QName.new(NsV28, "DocTabContentType")], [0, 1]],
      ["zone001", ["FedexWebServices::Soap::Rate::DocTabContentZone001", XSD::QName.new(NsV28, "Zone001")], [0, 1]],
      ["barcoded", ["FedexWebServices::Soap::Rate::DocTabContentBarcoded", XSD::QName.new(NsV28, "Barcoded")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabContentBarcoded,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentBarcoded"),
    :schema_element => [
      ["symbology", ["FedexWebServices::Soap::Rate::BarcodeSymbologyType", XSD::QName.new(NsV28, "Symbology")], [0, 1]],
      ["specification", ["FedexWebServices::Soap::Rate::DocTabZoneSpecification", XSD::QName.new(NsV28, "Specification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabContentZone001,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentZone001"),
    :schema_element => [
      ["docTabZoneSpecifications", ["FedexWebServices::Soap::Rate::DocTabZoneSpecification[]", XSD::QName.new(NsV28, "DocTabZoneSpecifications")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabZoneSpecification,
    :schema_type => XSD::QName.new(NsV28, "DocTabZoneSpecification"),
    :schema_element => [
      ["zoneNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ZoneNumber")], [0, 1]],
      ["header", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Header")], [0, 1]],
      ["dataField", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DataField")], [0, 1]],
      ["literalValue", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LiteralValue")], [0, 1]],
      ["justification", ["FedexWebServices::Soap::Rate::DocTabZoneJustificationType", XSD::QName.new(NsV28, "Justification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocumentFormatOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "DocumentFormatOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Rate::DocumentFormatOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::EMailDetail,
    :schema_type => XSD::QName.new(NsV28, "EMailDetail"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EmailAddress")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::EdtCommodityTax,
    :schema_type => XSD::QName.new(NsV28, "EdtCommodityTax"),
    :schema_element => [
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HarmonizedCode")], [0, 1]],
      ["taxes", ["FedexWebServices::Soap::Rate::EdtTaxDetail[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["total", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Total")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::EdtExciseCondition,
    :schema_type => XSD::QName.new(NsV28, "EdtExciseCondition"),
    :schema_element => [
      ["category", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Category")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::EdtTaxDetail,
    :schema_type => XSD::QName.new(NsV28, "EdtTaxDetail"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::Rate::EdtTaxType", XSD::QName.new(NsV28, "TaxType")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "EffectiveDate")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["taxableValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TaxableValue")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["formula", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Formula")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::EtdDetail,
    :schema_type => XSD::QName.new(NsV28, "EtdDetail"),
    :schema_element => [
      ["attributes", ["FedexWebServices::Soap::Rate::EtdAttributeType[]", XSD::QName.new(NsV28, "Attributes")], [0, nil]],
      ["requestedDocumentCopies", ["FedexWebServices::Soap::Rate::RequestedShippingDocumentType[]", XSD::QName.new(NsV28, "RequestedDocumentCopies")], [0, nil]],
      ["documentReferences", ["FedexWebServices::Soap::Rate::UploadDocumentReferenceDetail[]", XSD::QName.new(NsV28, "DocumentReferences")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ExportDeclarationDetail,
    :schema_type => XSD::QName.new(NsV28, "ExportDeclarationDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "DocumentFormat")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ExportDetail,
    :schema_type => XSD::QName.new(NsV28, "ExportDetail"),
    :schema_element => [
      ["b13AFilingOption", ["FedexWebServices::Soap::Rate::B13AFilingOptionType", XSD::QName.new(NsV28, "B13AFilingOption")], [0, 1]],
      ["exportComplianceStatement", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ExportComplianceStatement")], [0, 1]],
      ["permitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PermitNumber")], [0, 1]],
      ["destinationControlDetail", ["FedexWebServices::Soap::Rate::DestinationControlDetail", XSD::QName.new(NsV28, "DestinationControlDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ExpressFreightDetail,
    :schema_type => XSD::QName.new(NsV28, "ExpressFreightDetail"),
    :schema_element => [
      ["packingListEnclosed", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "PackingListEnclosed")], [0, 1]],
      ["shippersLoadAndCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "ShippersLoadAndCount")], [0, 1]],
      ["bookingConfirmationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "BookingConfirmationNumber")], [0, 1]],
      ["referenceLabelRequested", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReferenceLabelRequested")], [0, 1]],
      ["beforeDeliveryContact", ["FedexWebServices::Soap::Rate::ExpressFreightDetailContact", XSD::QName.new(NsV28, "BeforeDeliveryContact")], [0, 1]],
      ["undeliverableContact", ["FedexWebServices::Soap::Rate::ExpressFreightDetailContact", XSD::QName.new(NsV28, "UndeliverableContact")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ExpressFreightDetailContact,
    :schema_type => XSD::QName.new(NsV28, "ExpressFreightDetailContact"),
    :schema_element => [
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Name")], [0, 1]],
      ["phone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Phone")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FlatbedTrailerDetail,
    :schema_type => XSD::QName.new(NsV28, "FlatbedTrailerDetail"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Rate::FlatbedTrailerOption[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightAddressLabelDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightAddressLabelDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["copies", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Copies")], [0, 1]],
      ["startingPosition", ["FedexWebServices::Soap::Rate::PageQuadrantType", XSD::QName.new(NsV28, "StartingPosition")], [0, 1]],
      ["docTabContent", ["FedexWebServices::Soap::Rate::DocTabContent", XSD::QName.new(NsV28, "DocTabContent")], [0, 1]],
      ["customContentPosition", ["FedexWebServices::Soap::Rate::RelativeVerticalPositionType", XSD::QName.new(NsV28, "CustomContentPosition")], [0, 1]],
      ["customContent", ["FedexWebServices::Soap::Rate::CustomLabelDetail", XSD::QName.new(NsV28, "CustomContent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightBaseCharge,
    :schema_type => XSD::QName.new(NsV28, "FreightBaseCharge"),
    :schema_element => [
      ["freightClass", ["FedexWebServices::Soap::Rate::FreightClassType", XSD::QName.new(NsV28, "FreightClass")], [0, 1]],
      ["ratedAsClass", ["FedexWebServices::Soap::Rate::FreightClassType", XSD::QName.new(NsV28, "RatedAsClass")], [0, 1]],
      ["nmfcCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "NmfcCode")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["chargeRate", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "ChargeRate")], [0, 1]],
      ["chargeBasis", ["FedexWebServices::Soap::Rate::FreightChargeBasisType", XSD::QName.new(NsV28, "ChargeBasis")], [0, 1]],
      ["extendedAmount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "ExtendedAmount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightCommitDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightCommitDetail"),
    :schema_element => [
      ["originDetail", ["FedexWebServices::Soap::Rate::FreightServiceCenterDetail", XSD::QName.new(NsV28, "OriginDetail")], [0, 1]],
      ["destinationDetail", ["FedexWebServices::Soap::Rate::FreightServiceCenterDetail", XSD::QName.new(NsV28, "DestinationDetail")], [0, 1]],
      ["totalDistance", ["FedexWebServices::Soap::Rate::Distance", XSD::QName.new(NsV28, "TotalDistance")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightGuaranteeDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightGuaranteeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::FreightGuaranteeType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightRateDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightRateDetail"),
    :schema_element => [
      ["quoteNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "QuoteNumber")], [0, 1]],
      ["quoteType", ["FedexWebServices::Soap::Rate::FreightRateQuoteType", XSD::QName.new(NsV28, "QuoteType")], [0, 1]],
      ["baseChargeCalculation", ["FedexWebServices::Soap::Rate::FreightBaseChargeCalculationType", XSD::QName.new(NsV28, "BaseChargeCalculation")], [0, 1]],
      ["baseCharges", ["FedexWebServices::Soap::Rate::FreightBaseCharge[]", XSD::QName.new(NsV28, "BaseCharges")], [0, nil]],
      ["notations", ["FedexWebServices::Soap::Rate::FreightRateNotation[]", XSD::QName.new(NsV28, "Notations")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightRateNotation,
    :schema_type => XSD::QName.new(NsV28, "FreightRateNotation"),
    :schema_element => [
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightServiceCenterDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightServiceCenterDetail"),
    :schema_element => [
      ["interlineCarrierCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "InterlineCarrierCode")], [0, 1]],
      ["interlineCarrierName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "InterlineCarrierName")], [0, 1]],
      ["additionalDays", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "AdditionalDays")], [0, 1]],
      ["localService", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocalService")], [0, 1]],
      ["localDistance", ["FedexWebServices::Soap::Rate::Distance", XSD::QName.new(NsV28, "LocalDistance")], [0, 1]],
      ["localDuration", ["SOAP::SOAPDuration", XSD::QName.new(NsV28, "LocalDuration")], [0, 1]],
      ["localServiceScheduling", ["FedexWebServices::Soap::Rate::FreightServiceSchedulingType", XSD::QName.new(NsV28, "LocalServiceScheduling")], [0, 1]],
      ["limitedServiceDays", ["FedexWebServices::Soap::Rate::DayOfWeekType[]", XSD::QName.new(NsV28, "LimitedServiceDays")], [0, nil]],
      ["gatewayLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "GatewayLocationId")], [0, 1]],
      ["location", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Location")], [0, 1]],
      ["contactAndAddress", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "ContactAndAddress")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentDetail"),
    :schema_element => [
      ["fedExFreightAccountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FedExFreightAccountNumber")], [0, 1]],
      ["fedExFreightBillingContactAndAddress", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "FedExFreightBillingContactAndAddress")], [0, 1]],
      ["alternateBilling", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "AlternateBilling")], [0, 1]],
      ["role", ["FedexWebServices::Soap::Rate::FreightShipmentRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["collectTermsType", ["FedexWebServices::Soap::Rate::FreightCollectTermsType", XSD::QName.new(NsV28, "CollectTermsType")], [0, 1]],
      ["declaredValuePerUnit", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "DeclaredValuePerUnit")], [0, 1]],
      ["declaredValueUnits", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeclaredValueUnits")], [0, 1]],
      ["liabilityCoverageDetail", ["FedexWebServices::Soap::Rate::LiabilityCoverageDetail", XSD::QName.new(NsV28, "LiabilityCoverageDetail")], [0, 1]],
      ["coupons", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Coupons")], [0, nil]],
      ["totalHandlingUnits", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "TotalHandlingUnits")], [0, 1]],
      ["clientDiscountPercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "ClientDiscountPercent")], [0, 1]],
      ["palletWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "PalletWeight")], [0, 1]],
      ["shipmentDimensions", ["FedexWebServices::Soap::Rate::Dimensions", XSD::QName.new(NsV28, "ShipmentDimensions")], [0, 1]],
      ["comment", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Comment")], [0, 1]],
      ["specialServicePayments", ["FedexWebServices::Soap::Rate::FreightSpecialServicePayment[]", XSD::QName.new(NsV28, "SpecialServicePayments")], [0, nil]],
      ["hazardousMaterialsOfferor", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardousMaterialsOfferor")], [0, 1]],
      ["lineItems", ["FedexWebServices::Soap::Rate::FreightShipmentLineItem[]", XSD::QName.new(NsV28, "LineItems")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightShipmentLineItem,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentLineItem"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["freightClass", ["FedexWebServices::Soap::Rate::FreightClassType", XSD::QName.new(NsV28, "FreightClass")], [0, 1]],
      ["packaging", ["FedexWebServices::Soap::Rate::PhysicalPackagingType", XSD::QName.new(NsV28, "Packaging")], [0, 1]],
      ["pieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Pieces")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Rate::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]],
      ["volume", ["FedexWebServices::Soap::Rate::Volume", XSD::QName.new(NsV28, "Volume")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightSpecialServicePayment,
    :schema_type => XSD::QName.new(NsV28, "FreightSpecialServicePayment"),
    :schema_element => [
      ["specialService", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SpecialService")], [0, 1]],
      ["paymentType", ["FedexWebServices::Soap::Rate::FreightShipmentRoleType", XSD::QName.new(NsV28, "PaymentType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::GeneralAgencyAgreementDetail,
    :schema_type => XSD::QName.new(NsV28, "GeneralAgencyAgreementDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityContent,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityContent"),
    :schema_element => [
      ["description", ["FedexWebServices::Soap::Rate::HazardousCommodityDescription", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["quantity", ["FedexWebServices::Soap::Rate::HazardousCommodityQuantityDetail", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["innerReceptacles", ["FedexWebServices::Soap::Rate::HazardousCommodityInnerReceptacleDetail[]", XSD::QName.new(NsV28, "InnerReceptacles")], [0, nil]],
      ["options", ["FedexWebServices::Soap::Rate::HazardousCommodityOptionDetail", XSD::QName.new(NsV28, "Options")], [0, 1]],
      ["radionuclideDetail", ["FedexWebServices::Soap::Rate::RadionuclideDetail", XSD::QName.new(NsV28, "RadionuclideDetail")], [0, 1]],
      ["netExplosiveDetail", ["FedexWebServices::Soap::Rate::NetExplosiveDetail", XSD::QName.new(NsV28, "NetExplosiveDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityDescription,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityDescription"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["packingGroup", ["FedexWebServices::Soap::Rate::HazardousCommodityPackingGroupType", XSD::QName.new(NsV28, "PackingGroup")], [0, 1]],
      ["packingDetails", ["FedexWebServices::Soap::Rate::HazardousCommodityPackingDetail", XSD::QName.new(NsV28, "PackingDetails")], [0, 1]],
      ["reportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReportableQuantity")], [0, 1]],
      ["properShippingName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ProperShippingName")], [0, 1]],
      ["technicalName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TechnicalName")], [0, 1]],
      ["percentage", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percentage")], [0, 1]],
      ["hazardClass", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HazardClass")], [0, 1]],
      ["subsidiaryClasses", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SubsidiaryClasses")], [0, nil]],
      ["labelText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LabelText")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Rate::HazardousCommodityDescriptionProcessingOptionType[]", XSD::QName.new(NsV28, "ProcessingOptions")], [0, nil]],
      ["authorization", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Authorization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityInnerReceptacleDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityInnerReceptacleDetail"),
    :schema_element => [
      ["quantity", ["FedexWebServices::Soap::Rate::HazardousCommodityQuantityDetail", XSD::QName.new(NsV28, "Quantity")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityOptionDetail"),
    :schema_element => [
      ["labelTextOption", ["FedexWebServices::Soap::Rate::HazardousCommodityLabelTextOptionType", XSD::QName.new(NsV28, "LabelTextOption")], [0, 1]],
      ["customerSuppliedLabelText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerSuppliedLabelText")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityPackagingDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackagingDetail"),
    :schema_element => [
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "Count")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityPackingDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackingDetail"),
    :schema_element => [
      ["cargoAircraftOnly", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "CargoAircraftOnly")], [0, 1]],
      ["packingInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackingInstructions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityQuantityDetail,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityQuantityDetail"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]],
      ["quantityType", ["FedexWebServices::Soap::Rate::HazardousCommodityQuantityType", XSD::QName.new(NsV28, "QuantityType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HoldAtLocationDetail,
    :schema_type => XSD::QName.new(NsV28, "HoldAtLocationDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]],
      ["locationContactAndAddress", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "LocationContactAndAddress")], [0, 1]],
      ["locationType", ["FedexWebServices::Soap::Rate::FedExLocationType", XSD::QName.new(NsV28, "LocationType")], [0, 1]],
      ["locationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocationId")], [0, 1]],
      ["locationNumber", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "LocationNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HomeDeliveryPremiumDetail,
    :schema_type => XSD::QName.new(NsV28, "HomeDeliveryPremiumDetail"),
    :schema_element => [
      ["homeDeliveryPremiumType", ["FedexWebServices::Soap::Rate::HomeDeliveryPremiumType", XSD::QName.new(NsV28, "HomeDeliveryPremiumType")], [0, 1]],
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "Date")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PhoneNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::InternationalControlledExportDetail,
    :schema_type => XSD::QName.new(NsV28, "InternationalControlledExportDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::InternationalControlledExportType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["foreignTradeZoneCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ForeignTradeZoneCode")], [0, 1]],
      ["entryNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "EntryNumber")], [0, 1]],
      ["licenseOrPermitNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LicenseOrPermitNumber")], [0, 1]],
      ["licenseOrPermitExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "LicenseOrPermitExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::InternationalTrafficInArmsRegulationsDetail,
    :schema_type => XSD::QName.new(NsV28, "InternationalTrafficInArmsRegulationsDetail"),
    :schema_element => [
      ["licenseOrExemptionNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LicenseOrExemptionNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelSpecification,
    :schema_type => XSD::QName.new(NsV28, "LabelSpecification"),
    :schema_element => [
      ["labelFormatType", ["FedexWebServices::Soap::Rate::LabelFormatType", XSD::QName.new(NsV28, "LabelFormatType")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::Rate::ShippingDocumentImageType", XSD::QName.new(NsV28, "ImageType")], [0, 1]],
      ["labelStockType", ["FedexWebServices::Soap::Rate::LabelStockType", XSD::QName.new(NsV28, "LabelStockType")], [0, 1]],
      ["labelPrintingOrientation", ["FedexWebServices::Soap::Rate::LabelPrintingOrientationType", XSD::QName.new(NsV28, "LabelPrintingOrientation")], [0, 1]],
      ["labelRotation", ["FedexWebServices::Soap::Rate::LabelRotationType", XSD::QName.new(NsV28, "LabelRotation")], [0, 1]],
      ["labelOrder", ["FedexWebServices::Soap::Rate::LabelOrderType", XSD::QName.new(NsV28, "LabelOrder")], [0, 1]],
      ["printedLabelOrigin", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "PrintedLabelOrigin")], [0, 1]],
      ["customerSpecifiedDetail", ["FedexWebServices::Soap::Rate::CustomerSpecifiedLabelDetail", XSD::QName.new(NsV28, "CustomerSpecifiedDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LiabilityCoverageDetail,
    :schema_type => XSD::QName.new(NsV28, "LiabilityCoverageDetail"),
    :schema_element => [
      ["coverageType", ["FedexWebServices::Soap::Rate::LiabilityCoverageType", XSD::QName.new(NsV28, "CoverageType")], [0, 1]],
      ["coverageAmount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "CoverageAmount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LinearMeasure,
    :schema_type => XSD::QName.new(NsV28, "LinearMeasure"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Rate::LinearUnits", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Localization,
    :schema_type => XSD::QName.new(NsV28, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocaleCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Measure,
    :schema_type => XSD::QName.new(NsV28, "Measure"),
    :schema_element => [
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Quantity")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Money,
    :schema_type => XSD::QName.new(NsV28, "Money"),
    :schema_element => [
      ["currency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Currency")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaCertificateOfOriginDetail,
    :schema_type => XSD::QName.new(NsV28, "NaftaCertificateOfOriginDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["blanketPeriod", ["FedexWebServices::Soap::Rate::DateRange", XSD::QName.new(NsV28, "BlanketPeriod")], [0, 1]],
      ["importerSpecification", ["FedexWebServices::Soap::Rate::NaftaImporterSpecificationType", XSD::QName.new(NsV28, "ImporterSpecification")], [0, 1]],
      ["signatureContact", ["FedexWebServices::Soap::Rate::Contact", XSD::QName.new(NsV28, "SignatureContact")], [0, 1]],
      ["producerSpecification", ["FedexWebServices::Soap::Rate::NaftaProducerSpecificationType", XSD::QName.new(NsV28, "ProducerSpecification")], [0, 1]],
      ["producers", ["FedexWebServices::Soap::Rate::NaftaProducer[]", XSD::QName.new(NsV28, "Producers")], [0, nil]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaCommodityDetail,
    :schema_type => XSD::QName.new(NsV28, "NaftaCommodityDetail"),
    :schema_element => [
      ["preferenceCriterion", ["FedexWebServices::Soap::Rate::NaftaPreferenceCriterionCode", XSD::QName.new(NsV28, "PreferenceCriterion")], [0, 1]],
      ["producerDetermination", ["FedexWebServices::Soap::Rate::NaftaProducerDeterminationCode", XSD::QName.new(NsV28, "ProducerDetermination")], [0, 1]],
      ["producerId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ProducerId")], [0, 1]],
      ["netCostMethod", ["FedexWebServices::Soap::Rate::NaftaNetCostMethodCode", XSD::QName.new(NsV28, "NetCostMethod")], [0, 1]],
      ["netCostDateRange", ["FedexWebServices::Soap::Rate::DateRange", XSD::QName.new(NsV28, "NetCostDateRange")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaProducer,
    :schema_type => XSD::QName.new(NsV28, "NaftaProducer"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["producer", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "Producer")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NetExplosiveDetail,
    :schema_type => XSD::QName.new(NsV28, "NetExplosiveDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::NetExplosiveClassificationType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Notification,
    :schema_type => XSD::QName.new(NsV28, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::Rate::NotificationSeverityType", XSD::QName.new(NsV28, "Severity")], [0, 1]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Source")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::Rate::NotificationParameter[]", XSD::QName.new(NsV28, "MessageParameters")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationDetail,
    :schema_type => XSD::QName.new(NsV28, "NotificationDetail"),
    :schema_element => [
      ["notificationType", ["FedexWebServices::Soap::Rate::NotificationType", XSD::QName.new(NsV28, "NotificationType")], [0, 1]],
      ["emailDetail", ["FedexWebServices::Soap::Rate::EMailDetail", XSD::QName.new(NsV28, "EmailDetail")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationParameter,
    :schema_type => XSD::QName.new(NsV28, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Op900Detail,
    :schema_type => XSD::QName.new(NsV28, "Op900Detail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["reference", ["FedexWebServices::Soap::Rate::CustomerReferenceType", XSD::QName.new(NsV28, "Reference")], [0, 1]],
      ["customerImageUsages", ["FedexWebServices::Soap::Rate::CustomerImageUsage[]", XSD::QName.new(NsV28, "CustomerImageUsages")], [0, nil]],
      ["signatureName", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SignatureName")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PackageRateDetail,
    :schema_type => XSD::QName.new(NsV28, "PackageRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::Rate::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Rate::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Rate::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["billingWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "BillingWeight")], [0, 1]],
      ["dimWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "DimWeight")], [0, 1]],
      ["oversizeWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "OversizeWeight")], [0, 1]],
      ["baseCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "BaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["netFreight", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "NetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["netFedExCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "NetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["netCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "NetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Rate::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Rate::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Rate::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Rate::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Rate::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PackageSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV28, "PackageSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::Rate::CodDetail", XSD::QName.new(NsV28, "CodDetail")], [0, 1]],
      ["dangerousGoodsDetail", ["FedexWebServices::Soap::Rate::DangerousGoodsDetail", XSD::QName.new(NsV28, "DangerousGoodsDetail")], [0, 1]],
      ["batteryDetails", ["FedexWebServices::Soap::Rate::BatteryClassificationDetail[]", XSD::QName.new(NsV28, "BatteryDetails")], [0, nil]],
      ["dryIceWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "DryIceWeight")], [0, 1]],
      ["signatureOptionDetail", ["FedexWebServices::Soap::Rate::SignatureOptionDetail", XSD::QName.new(NsV28, "SignatureOptionDetail")], [0, 1]],
      ["priorityAlertDetail", ["FedexWebServices::Soap::Rate::PriorityAlertDetail", XSD::QName.new(NsV28, "PriorityAlertDetail")], [0, 1]],
      ["alcoholDetail", ["FedexWebServices::Soap::Rate::AlcoholDetail", XSD::QName.new(NsV28, "AlcoholDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Party,
    :schema_type => XSD::QName.new(NsV28, "Party"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")], [0, 1]],
      ["tins", ["FedexWebServices::Soap::Rate::TaxpayerIdentification[]", XSD::QName.new(NsV28, "Tins")], [0, nil]],
      ["contact", ["FedexWebServices::Soap::Rate::Contact", XSD::QName.new(NsV28, "Contact")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Rate::Address", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Payment,
    :schema_type => XSD::QName.new(NsV28, "Payment"),
    :schema_element => [
      ["paymentType", ["FedexWebServices::Soap::Rate::PaymentType", XSD::QName.new(NsV28, "PaymentType")], [0, 1]],
      ["payor", ["FedexWebServices::Soap::Rate::Payor", XSD::QName.new(NsV28, "Payor")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Payor,
    :schema_type => XSD::QName.new(NsV28, "Payor"),
    :schema_element => [
      ["responsibleParty", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "ResponsibleParty")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PendingShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::PendingShipmentType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ExpirationDate")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Rate::PendingShipmentProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptions")], [0, 1]],
      ["recommendedDocumentSpecification", ["FedexWebServices::Soap::Rate::RecommendedDocumentSpecification", XSD::QName.new(NsV28, "RecommendedDocumentSpecification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PendingShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Rate::PendingShipmentProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PickupDetail,
    :schema_type => XSD::QName.new(NsV28, "PickupDetail"),
    :schema_element => [
      ["readyDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ReadyDateTime")], [0, 1]],
      ["latestPickupDateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "LatestPickupDateTime")], [0, 1]],
      ["courierInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CourierInstructions")], [0, 1]],
      ["requestType", ["FedexWebServices::Soap::Rate::PickupRequestType", XSD::QName.new(NsV28, "RequestType")], [0, 1]],
      ["requestSource", ["FedexWebServices::Soap::Rate::PickupRequestSourceType", XSD::QName.new(NsV28, "RequestSource")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PriorityAlertDetail,
    :schema_type => XSD::QName.new(NsV28, "PriorityAlertDetail"),
    :schema_element => [
      ["enhancementTypes", ["FedexWebServices::Soap::Rate::PriorityAlertEnhancementType[]", XSD::QName.new(NsV28, "EnhancementTypes")], [0, nil]],
      ["content", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Content")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ProductName,
    :schema_type => XSD::QName.new(NsV28, "ProductName"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["encoding", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Encoding")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RadioactivityDetail,
    :schema_type => XSD::QName.new(NsV28, "RadioactivityDetail"),
    :schema_element => [
      ["transportIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "TransportIndex")], [0, 1]],
      ["surfaceReading", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "SurfaceReading")], [0, 1]],
      ["criticalitySafetyIndex", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "CriticalitySafetyIndex")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Rate::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RadionuclideActivity,
    :schema_type => XSD::QName.new(NsV28, "RadionuclideActivity"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]],
      ["unitOfMeasure", ["FedexWebServices::Soap::Rate::RadioactivityUnitOfMeasure", XSD::QName.new(NsV28, "UnitOfMeasure")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RadionuclideDetail,
    :schema_type => XSD::QName.new(NsV28, "RadionuclideDetail"),
    :schema_element => [
      ["radionuclide", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Radionuclide")], [0, 1]],
      ["activity", ["FedexWebServices::Soap::Rate::RadionuclideActivity", XSD::QName.new(NsV28, "Activity")], [0, 1]],
      ["exceptedPackagingIsReportableQuantity", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ExceptedPackagingIsReportableQuantity")], [0, 1]],
      ["physicalForm", ["FedexWebServices::Soap::Rate::PhysicalFormType", XSD::QName.new(NsV28, "PhysicalForm")], [0, 1]],
      ["chemicalForm", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ChemicalForm")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateDiscount,
    :schema_type => XSD::QName.new(NsV28, "RateDiscount"),
    :schema_element => [
      ["rateDiscountType", ["FedexWebServices::Soap::Rate::RateDiscountType", XSD::QName.new(NsV28, "RateDiscountType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateReply,
    :schema_type => XSD::QName.new(NsV28, "RateReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Rate::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Rate::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Rate::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Rate::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["rateReplyDetails", ["FedexWebServices::Soap::Rate::RateReplyDetail[]", XSD::QName.new(NsV28, "RateReplyDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateReplyDetail,
    :schema_type => XSD::QName.new(NsV28, "RateReplyDetail"),
    :schema_element => [
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["serviceDescription", ["FedexWebServices::Soap::Rate::ServiceDescription", XSD::QName.new(NsV28, "ServiceDescription")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingType")], [0, 1]],
      ["appliedOptions", ["FedexWebServices::Soap::Rate::ServiceOptionType[]", XSD::QName.new(NsV28, "AppliedOptions")], [0, nil]],
      ["appliedSubOptions", ["FedexWebServices::Soap::Rate::ServiceSubOptionDetail", XSD::QName.new(NsV28, "AppliedSubOptions")], [0, 1]],
      ["deliveryStation", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeliveryStation")], [0, 1]],
      ["deliveryDayOfWeek", ["FedexWebServices::Soap::Rate::DayOfWeekType", XSD::QName.new(NsV28, "DeliveryDayOfWeek")], [0, 1]],
      ["deliveryTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "DeliveryTimestamp")], [0, 1]],
      ["commitDetails", ["FedexWebServices::Soap::Rate::CommitDetail[]", XSD::QName.new(NsV28, "CommitDetails")], [0, nil]],
      ["destinationAirportId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationAirportId")], [0, 1]],
      ["ineligibleForMoneyBackGuarantee", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "IneligibleForMoneyBackGuarantee")], [0, 1]],
      ["originServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "OriginServiceArea")], [0, 1]],
      ["destinationServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DestinationServiceArea")], [0, 1]],
      ["transitTime", ["FedexWebServices::Soap::Rate::TransitTimeType", XSD::QName.new(NsV28, "TransitTime")], [0, 1]],
      ["maximumTransitTime", ["FedexWebServices::Soap::Rate::TransitTimeType", XSD::QName.new(NsV28, "MaximumTransitTime")], [0, 1]],
      ["signatureOption", ["FedexWebServices::Soap::Rate::SignatureOptionType", XSD::QName.new(NsV28, "SignatureOption")], [0, 1]],
      ["actualRateType", ["FedexWebServices::Soap::Rate::ReturnedRateType", XSD::QName.new(NsV28, "ActualRateType")], [0, 1]],
      ["ratedShipmentDetails", ["FedexWebServices::Soap::Rate::RatedShipmentDetail[]", XSD::QName.new(NsV28, "RatedShipmentDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateRequest,
    :schema_type => XSD::QName.new(NsV28, "RateRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Rate::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Rate::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Rate::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Rate::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["returnTransitAndCommit", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReturnTransitAndCommit")], [0, 1]],
      ["carrierCodes", ["FedexWebServices::Soap::Rate::CarrierCodeType[]", XSD::QName.new(NsV28, "CarrierCodes")], [0, nil]],
      ["variableOptions", ["FedexWebServices::Soap::Rate::ServiceOptionType[]", XSD::QName.new(NsV28, "VariableOptions")], [0, nil]],
      ["consolidationKey", ["FedexWebServices::Soap::Rate::ConsolidationKey", XSD::QName.new(NsV28, "ConsolidationKey")], [0, 1]],
      ["requestedShipment", ["FedexWebServices::Soap::Rate::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RatedPackageDetail,
    :schema_type => XSD::QName.new(NsV28, "RatedPackageDetail"),
    :schema_element => [
      ["trackingIds", ["FedexWebServices::Soap::Rate::TrackingId[]", XSD::QName.new(NsV28, "TrackingIds")], [0, nil]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupNumber")], [0, 1]],
      ["effectiveNetDiscount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "EffectiveNetDiscount")], [0, 1]],
      ["adjustedCodCollectionAmount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "AdjustedCodCollectionAmount")], [0, 1]],
      ["oversizeClass", ["FedexWebServices::Soap::Rate::OversizeClassType", XSD::QName.new(NsV28, "OversizeClass")], [0, 1]],
      ["packageRateDetail", ["FedexWebServices::Soap::Rate::PackageRateDetail", XSD::QName.new(NsV28, "PackageRateDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RatedShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "RatedShipmentDetail"),
    :schema_element => [
      ["effectiveNetDiscount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "EffectiveNetDiscount")], [0, 1]],
      ["adjustedCodCollectionAmount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "AdjustedCodCollectionAmount")], [0, 1]],
      ["shipmentRateDetail", ["FedexWebServices::Soap::Rate::ShipmentRateDetail", XSD::QName.new(NsV28, "ShipmentRateDetail")], [0, 1]],
      ["ratedPackages", ["FedexWebServices::Soap::Rate::RatedPackageDetail[]", XSD::QName.new(NsV28, "RatedPackages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Rebate,
    :schema_type => XSD::QName.new(NsV28, "Rebate"),
    :schema_element => [
      ["rebateType", ["FedexWebServices::Soap::Rate::RebateType", XSD::QName.new(NsV28, "RebateType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]],
      ["percent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Percent")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RecipientCustomsId,
    :schema_type => XSD::QName.new(NsV28, "RecipientCustomsId"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::RecipientCustomsIdType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RecommendedDocumentSpecification,
    :schema_type => XSD::QName.new(NsV28, "RecommendedDocumentSpecification"),
    :schema_element => [
      ["types", ["FedexWebServices::Soap::Rate::RecommendedDocumentType[]", XSD::QName.new(NsV28, "Types")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RegulatoryLabelContentDetail,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryLabelContentDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::RegulatoryLabelType", XSD::QName.new(NsV28, "Type")], [0, 1]],
      ["generationOptions", ["FedexWebServices::Soap::Rate::CustomerSpecifiedLabelGenerationOptionType[]", XSD::QName.new(NsV28, "GenerationOptions")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RequestedPackageLineItem,
    :schema_type => XSD::QName.new(NsV28, "RequestedPackageLineItem"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV28, "SequenceNumber")], [0, 1]],
      ["groupNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupNumber")], [0, 1]],
      ["groupPackageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "GroupPackageCount")], [0, 1]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::Rate::VariableHandlingChargeDetail", XSD::QName.new(NsV28, "VariableHandlingChargeDetail")], [0, 1]],
      ["insuredValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "InsuredValue")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "Weight")], [0, 1]],
      ["dimensions", ["FedexWebServices::Soap::Rate::Dimensions", XSD::QName.new(NsV28, "Dimensions")], [0, 1]],
      ["physicalPackaging", ["FedexWebServices::Soap::Rate::PhysicalPackagingType", XSD::QName.new(NsV28, "PhysicalPackaging")], [0, 1]],
      ["associatedFreightLineItems", ["FedexWebServices::Soap::Rate::AssociatedFreightLineItemDetail[]", XSD::QName.new(NsV28, "AssociatedFreightLineItems")], [0, nil]],
      ["itemDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemDescription")], [0, 1]],
      ["itemDescriptionForClearance", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ItemDescriptionForClearance")], [0, 1]],
      ["customerReferences", ["FedexWebServices::Soap::Rate::CustomerReference[]", XSD::QName.new(NsV28, "CustomerReferences")], [0, 10]],
      ["specialServicesRequested", ["FedexWebServices::Soap::Rate::PackageSpecialServicesRequested", XSD::QName.new(NsV28, "SpecialServicesRequested")], [0, 1]],
      ["contentRecords", ["FedexWebServices::Soap::Rate::ContentRecord[]", XSD::QName.new(NsV28, "ContentRecords")], [0, nil]],
      ["conveyanceDetail", ["FedexWebServices::Soap::Rate::ShipperConveyanceDetail", XSD::QName.new(NsV28, "ConveyanceDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RequestedShipment,
    :schema_type => XSD::QName.new(NsV28, "RequestedShipment"),
    :schema_element => [
      ["shipTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ShipTimestamp")], [0, 1]],
      ["dropoffType", ["FedexWebServices::Soap::Rate::DropoffType", XSD::QName.new(NsV28, "DropoffType")], [0, 1]],
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["packagingType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PackagingType")], [0, 1]],
      ["variationOptions", ["FedexWebServices::Soap::Rate::ShipmentVariationOptionDetail[]", XSD::QName.new(NsV28, "VariationOptions")], [0, nil]],
      ["totalWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalWeight")], [0, 1]],
      ["totalInsuredValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalInsuredValue")], [0, 1]],
      ["preferredCurrency", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PreferredCurrency")], [0, 1]],
      ["shipmentAuthorizationDetail", ["FedexWebServices::Soap::Rate::ShipmentAuthorizationDetail", XSD::QName.new(NsV28, "ShipmentAuthorizationDetail")], [0, 1]],
      ["shipper", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "Shipper")], [0, 1]],
      ["recipient", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "Recipient")], [0, 1]],
      ["recipientLocationNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RecipientLocationNumber")], [0, 1]],
      ["origin", ["FedexWebServices::Soap::Rate::ContactAndAddress", XSD::QName.new(NsV28, "Origin")], [0, 1]],
      ["soldTo", ["FedexWebServices::Soap::Rate::Party", XSD::QName.new(NsV28, "SoldTo")], [0, 1]],
      ["shippingChargesPayment", ["FedexWebServices::Soap::Rate::Payment", XSD::QName.new(NsV28, "ShippingChargesPayment")], [0, 1]],
      ["specialServicesRequested", ["FedexWebServices::Soap::Rate::ShipmentSpecialServicesRequested", XSD::QName.new(NsV28, "SpecialServicesRequested")], [0, 1]],
      ["expressFreightDetail", ["FedexWebServices::Soap::Rate::ExpressFreightDetail", XSD::QName.new(NsV28, "ExpressFreightDetail")], [0, 1]],
      ["freightShipmentDetail", ["FedexWebServices::Soap::Rate::FreightShipmentDetail", XSD::QName.new(NsV28, "FreightShipmentDetail")], [0, 1]],
      ["deliveryInstructions", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DeliveryInstructions")], [0, 1]],
      ["variableHandlingChargeDetail", ["FedexWebServices::Soap::Rate::VariableHandlingChargeDetail", XSD::QName.new(NsV28, "VariableHandlingChargeDetail")], [0, 1]],
      ["customsClearanceDetail", ["FedexWebServices::Soap::Rate::CustomsClearanceDetail", XSD::QName.new(NsV28, "CustomsClearanceDetail")], [0, 1]],
      ["pickupDetail", ["FedexWebServices::Soap::Rate::PickupDetail", XSD::QName.new(NsV28, "PickupDetail")], [0, 1]],
      ["smartPostDetail", ["FedexWebServices::Soap::Rate::SmartPostShipmentDetail", XSD::QName.new(NsV28, "SmartPostDetail")], [0, 1]],
      ["blockInsightVisibility", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "BlockInsightVisibility")], [0, 1]],
      ["labelSpecification", ["FedexWebServices::Soap::Rate::LabelSpecification", XSD::QName.new(NsV28, "LabelSpecification")], [0, 1]],
      ["shippingDocumentSpecification", ["FedexWebServices::Soap::Rate::ShippingDocumentSpecification", XSD::QName.new(NsV28, "ShippingDocumentSpecification")], [0, 1]],
      ["rateRequestTypes", ["FedexWebServices::Soap::Rate::RateRequestType[]", XSD::QName.new(NsV28, "RateRequestTypes")], [0, nil]],
      ["edtRequestType", ["FedexWebServices::Soap::Rate::EdtRequestType", XSD::QName.new(NsV28, "EdtRequestType")], [0, 1]],
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PackageCount")], [0, 1]],
      ["shipmentOnlyFields", ["FedexWebServices::Soap::Rate::ShipmentOnlyFieldsType[]", XSD::QName.new(NsV28, "ShipmentOnlyFields")], [0, nil]],
      ["configurationData", ["FedexWebServices::Soap::Rate::ShipmentConfigurationData", XSD::QName.new(NsV28, "ConfigurationData")], [0, 1]],
      ["requestedPackageLineItems", ["FedexWebServices::Soap::Rate::RequestedPackageLineItem[]", XSD::QName.new(NsV28, "RequestedPackageLineItems")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnAssociationDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnAssociationDetail"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TrackingNumber")], [0, 1]],
      ["shipDate", ["SOAP::SOAPDate", XSD::QName.new(NsV28, "ShipDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnEMailDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnEMailDetail"),
    :schema_element => [
      ["merchantPhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "MerchantPhoneNumber")], [0, 1]],
      ["allowedSpecialServices", ["FedexWebServices::Soap::Rate::ReturnEMailAllowedSpecialServiceType[]", XSD::QName.new(NsV28, "AllowedSpecialServices")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnInstructionsDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnInstructionsDetail"),
    :schema_element => [
      ["format", ["FedexWebServices::Soap::Rate::ShippingDocumentFormat", XSD::QName.new(NsV28, "Format")], [0, 1]],
      ["customText", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomText")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "ReturnShipmentDetail"),
    :schema_element => [
      ["returnType", ["FedexWebServices::Soap::Rate::ReturnType", XSD::QName.new(NsV28, "ReturnType")], [0, 1]],
      ["rma", ["FedexWebServices::Soap::Rate::Rma", XSD::QName.new(NsV28, "Rma")], [0, 1]],
      ["returnEMailDetail", ["FedexWebServices::Soap::Rate::ReturnEMailDetail", XSD::QName.new(NsV28, "ReturnEMailDetail")], [0, 1]],
      ["returnAssociation", ["FedexWebServices::Soap::Rate::ReturnAssociationDetail", XSD::QName.new(NsV28, "ReturnAssociation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Rma,
    :schema_type => XSD::QName.new(NsV28, "Rma"),
    :schema_element => [
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Reason")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ServiceDescription,
    :schema_type => XSD::QName.new(NsV28, "ServiceDescription"),
    :schema_element => [
      ["serviceType", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceType")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Code")], [0, 1]],
      ["names", ["FedexWebServices::Soap::Rate::ProductName[]", XSD::QName.new(NsV28, "Names")], [0, nil]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["astraDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AstraDescription")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ServiceSubOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "ServiceSubOptionDetail"),
    :schema_element => [
      ["freightGuarantee", ["FedexWebServices::Soap::Rate::FreightGuaranteeType", XSD::QName.new(NsV28, "FreightGuarantee")], [0, 1]],
      ["smartPostHubId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SmartPostHubId")], [0, 1]],
      ["smartPostIndicia", ["FedexWebServices::Soap::Rate::SmartPostIndiciaType", XSD::QName.new(NsV28, "SmartPostIndicia")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentAuthorizationDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentAuthorizationDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "AccountNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentConfigurationData,
    :schema_type => XSD::QName.new(NsV28, "ShipmentConfigurationData"),
    :schema_element => [
      ["dangerousGoodsPackageConfigurations", ["FedexWebServices::Soap::Rate::DangerousGoodsDetail[]", XSD::QName.new(NsV28, "DangerousGoodsPackageConfigurations")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentDryIceDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceDetail"),
    :schema_element => [
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "PackageCount")], [0, 1]],
      ["totalWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalWeight")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Rate::ShipmentDryIceProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentDryIceProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Rate::ShipmentDryIceProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentEventNotificationDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentEventNotificationDetail"),
    :schema_element => [
      ["aggregationType", ["FedexWebServices::Soap::Rate::ShipmentNotificationAggregationType", XSD::QName.new(NsV28, "AggregationType")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PersonalMessage")], [0, 1]],
      ["eventNotifications", ["FedexWebServices::Soap::Rate::ShipmentEventNotificationSpecification[]", XSD::QName.new(NsV28, "EventNotifications")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentEventNotificationSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShipmentEventNotificationSpecification"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::Rate::ShipmentNotificationRoleType", XSD::QName.new(NsV28, "Role")], [0, 1]],
      ["events", ["FedexWebServices::Soap::Rate::NotificationEventType[]", XSD::QName.new(NsV28, "Events")], [0, nil]],
      ["notificationDetail", ["FedexWebServices::Soap::Rate::NotificationDetail", XSD::QName.new(NsV28, "NotificationDetail")], [0, 1]],
      ["formatSpecification", ["FedexWebServices::Soap::Rate::ShipmentNotificationFormatSpecification", XSD::QName.new(NsV28, "FormatSpecification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentLegRateDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentLegRateDetail"),
    :schema_element => [
      ["legDescription", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegDescription")], [0, 1]],
      ["legOrigin", ["FedexWebServices::Soap::Rate::Address", XSD::QName.new(NsV28, "LegOrigin")], [0, 1]],
      ["legOriginLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegOriginLocationId")], [0, 1]],
      ["legDestination", ["FedexWebServices::Soap::Rate::Address", XSD::QName.new(NsV28, "LegDestination")], [0, 1]],
      ["legDestinationLocationId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "LegDestinationLocationId")], [0, 1]],
      ["rateType", ["FedexWebServices::Soap::Rate::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::Rate::PricingCodeType", XSD::QName.new(NsV28, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Rate::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Rate::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::Rate::CurrencyExchangeRate", XSD::QName.new(NsV28, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::Rate::SpecialRatingAppliedType[]", XSD::QName.new(NsV28, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::Rate::RateDimensionalDivisorType", XSD::QName.new(NsV28, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["freightRateDetail", ["FedexWebServices::Soap::Rate::FreightRateDetail", XSD::QName.new(NsV28, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Rate::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Rate::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Rate::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Rate::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::Rate::EdtCommodityTax[]", XSD::QName.new(NsV28, "DutiesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Rate::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::Rate::VariableHandlingCharges", XSD::QName.new(NsV28, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentNotificationFormatSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationFormatSpecification"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Rate::NotificationFormatType", XSD::QName.new(NsV28, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentRateDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentRateDetail"),
    :schema_element => [
      ["rateType", ["FedexWebServices::Soap::Rate::ReturnedRateType", XSD::QName.new(NsV28, "RateType")], [0, 1]],
      ["rateScale", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateScale")], [0, 1]],
      ["rateZone", ["SOAP::SOAPString", XSD::QName.new(NsV28, "RateZone")], [0, 1]],
      ["pricingCode", ["FedexWebServices::Soap::Rate::PricingCodeType", XSD::QName.new(NsV28, "PricingCode")], [0, 1]],
      ["ratedWeightMethod", ["FedexWebServices::Soap::Rate::RatedWeightMethod", XSD::QName.new(NsV28, "RatedWeightMethod")], [0, 1]],
      ["minimumChargeType", ["FedexWebServices::Soap::Rate::MinimumChargeType", XSD::QName.new(NsV28, "MinimumChargeType")], [0, 1]],
      ["currencyExchangeRate", ["FedexWebServices::Soap::Rate::CurrencyExchangeRate", XSD::QName.new(NsV28, "CurrencyExchangeRate")], [0, 1]],
      ["specialRatingApplied", ["FedexWebServices::Soap::Rate::SpecialRatingAppliedType[]", XSD::QName.new(NsV28, "SpecialRatingApplied")], [0, nil]],
      ["dimDivisor", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "DimDivisor")], [0, 1]],
      ["dimDivisorType", ["FedexWebServices::Soap::Rate::RateDimensionalDivisorType", XSD::QName.new(NsV28, "DimDivisorType")], [0, 1]],
      ["fuelSurchargePercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "FuelSurchargePercent")], [0, 1]],
      ["totalBillingWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalBillingWeight")], [0, 1]],
      ["totalDimWeight", ["FedexWebServices::Soap::Rate::Weight", XSD::QName.new(NsV28, "TotalDimWeight")], [0, 1]],
      ["totalBaseCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalBaseCharge")], [0, 1]],
      ["totalFreightDiscounts", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalFreightDiscounts")], [0, 1]],
      ["totalNetFreight", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetFreight")], [0, 1]],
      ["totalSurcharges", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalSurcharges")], [0, 1]],
      ["totalNetFedExCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetFedExCharge")], [0, 1]],
      ["totalTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalTaxes")], [0, 1]],
      ["totalNetCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetCharge")], [0, 1]],
      ["totalRebates", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalRebates")], [0, 1]],
      ["totalDutiesAndTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalDutiesAndTaxes")], [0, 1]],
      ["totalAncillaryFeesAndTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalAncillaryFeesAndTaxes")], [0, 1]],
      ["totalDutiesTaxesAndFees", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalDutiesTaxesAndFees")], [0, 1]],
      ["totalNetChargeWithDutiesAndTaxes", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalNetChargeWithDutiesAndTaxes")], [0, 1]],
      ["shipmentLegRateDetails", ["FedexWebServices::Soap::Rate::ShipmentLegRateDetail[]", XSD::QName.new(NsV28, "ShipmentLegRateDetails")], [0, nil]],
      ["freightRateDetail", ["FedexWebServices::Soap::Rate::FreightRateDetail", XSD::QName.new(NsV28, "FreightRateDetail")], [0, 1]],
      ["freightDiscounts", ["FedexWebServices::Soap::Rate::RateDiscount[]", XSD::QName.new(NsV28, "FreightDiscounts")], [0, nil]],
      ["rebates", ["FedexWebServices::Soap::Rate::Rebate[]", XSD::QName.new(NsV28, "Rebates")], [0, nil]],
      ["surcharges", ["FedexWebServices::Soap::Rate::Surcharge[]", XSD::QName.new(NsV28, "Surcharges")], [0, nil]],
      ["taxes", ["FedexWebServices::Soap::Rate::Tax[]", XSD::QName.new(NsV28, "Taxes")], [0, nil]],
      ["dutiesAndTaxes", ["FedexWebServices::Soap::Rate::EdtCommodityTax[]", XSD::QName.new(NsV28, "DutiesAndTaxes")], [0, nil]],
      ["ancillaryFeesAndTaxes", ["FedexWebServices::Soap::Rate::AncillaryFeeAndTax[]", XSD::QName.new(NsV28, "AncillaryFeesAndTaxes")], [0, nil]],
      ["variableHandlingCharges", ["FedexWebServices::Soap::Rate::VariableHandlingCharges", XSD::QName.new(NsV28, "VariableHandlingCharges")], [0, 1]],
      ["totalVariableHandlingCharges", ["FedexWebServices::Soap::Rate::VariableHandlingCharges", XSD::QName.new(NsV28, "TotalVariableHandlingCharges")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentSpecialServicesRequested,
    :schema_type => XSD::QName.new(NsV28, "ShipmentSpecialServicesRequested"),
    :schema_element => [
      ["specialServiceTypes", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "SpecialServiceTypes")], [0, nil]],
      ["codDetail", ["FedexWebServices::Soap::Rate::CodDetail", XSD::QName.new(NsV28, "CodDetail")], [0, 1]],
      ["deliveryOnInvoiceAcceptanceDetail", ["FedexWebServices::Soap::Rate::DeliveryOnInvoiceAcceptanceDetail", XSD::QName.new(NsV28, "DeliveryOnInvoiceAcceptanceDetail")], [0, 1]],
      ["holdAtLocationDetail", ["FedexWebServices::Soap::Rate::HoldAtLocationDetail", XSD::QName.new(NsV28, "HoldAtLocationDetail")], [0, 1]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::Rate::ShipmentEventNotificationDetail", XSD::QName.new(NsV28, "EventNotificationDetail")], [0, 1]],
      ["returnShipmentDetail", ["FedexWebServices::Soap::Rate::ReturnShipmentDetail", XSD::QName.new(NsV28, "ReturnShipmentDetail")], [0, 1]],
      ["pendingShipmentDetail", ["FedexWebServices::Soap::Rate::PendingShipmentDetail", XSD::QName.new(NsV28, "PendingShipmentDetail")], [0, 1]],
      ["internationalControlledExportDetail", ["FedexWebServices::Soap::Rate::InternationalControlledExportDetail", XSD::QName.new(NsV28, "InternationalControlledExportDetail")], [0, 1]],
      ["internationalTrafficInArmsRegulationsDetail", ["FedexWebServices::Soap::Rate::InternationalTrafficInArmsRegulationsDetail", XSD::QName.new(NsV28, "InternationalTrafficInArmsRegulationsDetail")], [0, 1]],
      ["shipmentDryIceDetail", ["FedexWebServices::Soap::Rate::ShipmentDryIceDetail", XSD::QName.new(NsV28, "ShipmentDryIceDetail")], [0, 1]],
      ["homeDeliveryPremiumDetail", ["FedexWebServices::Soap::Rate::HomeDeliveryPremiumDetail", XSD::QName.new(NsV28, "HomeDeliveryPremiumDetail")], [0, 1]],
      ["flatbedTrailerDetail", ["FedexWebServices::Soap::Rate::FlatbedTrailerDetail", XSD::QName.new(NsV28, "FlatbedTrailerDetail")], [0, 1]],
      ["freightGuaranteeDetail", ["FedexWebServices::Soap::Rate::FreightGuaranteeDetail", XSD::QName.new(NsV28, "FreightGuaranteeDetail")], [0, 1]],
      ["etdDetail", ["FedexWebServices::Soap::Rate::EtdDetail", XSD::QName.new(NsV28, "EtdDetail")], [0, 1]],
      ["customDeliveryWindowDetail", ["FedexWebServices::Soap::Rate::CustomDeliveryWindowDetail", XSD::QName.new(NsV28, "CustomDeliveryWindowDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentVariationOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipmentVariationOptionDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]],
      ["values", ["SOAP::SOAPString[]", XSD::QName.new(NsV28, "Values")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipperConveyanceDetail,
    :schema_type => XSD::QName.new(NsV28, "ShipperConveyanceDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Id")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentDispositionDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentDispositionDetail"),
    :schema_element => [
      ["dispositionType", ["FedexWebServices::Soap::Rate::ShippingDocumentDispositionType", XSD::QName.new(NsV28, "DispositionType")], [0, 1]],
      ["grouping", ["FedexWebServices::Soap::Rate::ShippingDocumentGroupingType", XSD::QName.new(NsV28, "Grouping")], [0, 1]],
      ["eMailDetail", ["FedexWebServices::Soap::Rate::ShippingDocumentEMailDetail", XSD::QName.new(NsV28, "EMailDetail")], [0, 1]],
      ["printDetail", ["FedexWebServices::Soap::Rate::ShippingDocumentPrintDetail", XSD::QName.new(NsV28, "PrintDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentEMailDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailDetail"),
    :schema_element => [
      ["eMailRecipients", ["FedexWebServices::Soap::Rate::ShippingDocumentEMailRecipient[]", XSD::QName.new(NsV28, "EMailRecipients")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::Rate::ShippingDocumentEMailGroupingType", XSD::QName.new(NsV28, "Grouping")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentEMailRecipient,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailRecipient"),
    :schema_element => [
      ["recipientType", ["FedexWebServices::Soap::Rate::EMailNotificationRecipientType", XSD::QName.new(NsV28, "RecipientType")], [0, 1]],
      ["address", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentFormat,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentFormat"),
    :schema_element => [
      ["dispositions", ["FedexWebServices::Soap::Rate::ShippingDocumentDispositionDetail[]", XSD::QName.new(NsV28, "Dispositions")], [0, nil]],
      ["topOfPageOffset", ["FedexWebServices::Soap::Rate::LinearMeasure", XSD::QName.new(NsV28, "TopOfPageOffset")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::Rate::ShippingDocumentImageType", XSD::QName.new(NsV28, "ImageType")], [0, 1]],
      ["stockType", ["FedexWebServices::Soap::Rate::ShippingDocumentStockType", XSD::QName.new(NsV28, "StockType")], [0, 1]],
      ["provideInstructions", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ProvideInstructions")], [0, 1]],
      ["optionsRequested", ["FedexWebServices::Soap::Rate::DocumentFormatOptionsRequested", XSD::QName.new(NsV28, "OptionsRequested")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentPrintDetail,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentPrintDetail"),
    :schema_element => [
      ["printerId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "PrinterId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentSpecification,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentSpecification"),
    :schema_element => [
      ["shippingDocumentTypes", ["FedexWebServices::Soap::Rate::RequestedShippingDocumentType[]", XSD::QName.new(NsV28, "ShippingDocumentTypes")], [0, nil]],
      ["certificateOfOrigin", ["FedexWebServices::Soap::Rate::CertificateOfOriginDetail", XSD::QName.new(NsV28, "CertificateOfOrigin")], [0, 1]],
      ["commercialInvoiceDetail", ["FedexWebServices::Soap::Rate::CommercialInvoiceDetail", XSD::QName.new(NsV28, "CommercialInvoiceDetail")], [0, 1]],
      ["customPackageDocumentDetail", ["FedexWebServices::Soap::Rate::CustomDocumentDetail[]", XSD::QName.new(NsV28, "CustomPackageDocumentDetail")], [0, nil]],
      ["customShipmentDocumentDetail", ["FedexWebServices::Soap::Rate::CustomDocumentDetail[]", XSD::QName.new(NsV28, "CustomShipmentDocumentDetail")], [0, nil]],
      ["exportDeclarationDetail", ["FedexWebServices::Soap::Rate::ExportDeclarationDetail", XSD::QName.new(NsV28, "ExportDeclarationDetail")], [0, 1]],
      ["generalAgencyAgreementDetail", ["FedexWebServices::Soap::Rate::GeneralAgencyAgreementDetail", XSD::QName.new(NsV28, "GeneralAgencyAgreementDetail")], [0, 1]],
      ["naftaCertificateOfOriginDetail", ["FedexWebServices::Soap::Rate::NaftaCertificateOfOriginDetail", XSD::QName.new(NsV28, "NaftaCertificateOfOriginDetail")], [0, 1]],
      ["op900Detail", ["FedexWebServices::Soap::Rate::Op900Detail", XSD::QName.new(NsV28, "Op900Detail")], [0, 1]],
      ["dangerousGoodsShippersDeclarationDetail", ["FedexWebServices::Soap::Rate::DangerousGoodsShippersDeclarationDetail", XSD::QName.new(NsV28, "DangerousGoodsShippersDeclarationDetail")], [0, 1]],
      ["freightAddressLabelDetail", ["FedexWebServices::Soap::Rate::FreightAddressLabelDetail", XSD::QName.new(NsV28, "FreightAddressLabelDetail")], [0, 1]],
      ["returnInstructionsDetail", ["FedexWebServices::Soap::Rate::ReturnInstructionsDetail", XSD::QName.new(NsV28, "ReturnInstructionsDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SignatureOptionDetail,
    :schema_type => XSD::QName.new(NsV28, "SignatureOptionDetail"),
    :schema_element => [
      ["optionType", ["FedexWebServices::Soap::Rate::SignatureOptionType", XSD::QName.new(NsV28, "OptionType")], [0, 1]],
      ["signatureReleaseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "SignatureReleaseNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SmartPostShipmentDetail,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentDetail"),
    :schema_element => [
      ["processingOptionsRequested", ["FedexWebServices::Soap::Rate::SmartPostShipmentProcessingOptionsRequested", XSD::QName.new(NsV28, "ProcessingOptionsRequested")], [0, 1]],
      ["indicia", ["FedexWebServices::Soap::Rate::SmartPostIndiciaType", XSD::QName.new(NsV28, "Indicia")], [0, 1]],
      ["ancillaryEndorsement", ["FedexWebServices::Soap::Rate::SmartPostAncillaryEndorsementType", XSD::QName.new(NsV28, "AncillaryEndorsement")], [0, 1]],
      ["hubId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "HubId")], [0, 1]],
      ["customerManifestId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerManifestId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SmartPostShipmentProcessingOptionsRequested,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentProcessingOptionsRequested"),
    :schema_element => [
      ["options", ["FedexWebServices::Soap::Rate::SmartPostShipmentProcessingOptionType[]", XSD::QName.new(NsV28, "Options")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Surcharge,
    :schema_type => XSD::QName.new(NsV28, "Surcharge"),
    :schema_element => [
      ["surchargeType", ["FedexWebServices::Soap::Rate::SurchargeType", XSD::QName.new(NsV28, "SurchargeType")], [0, 1]],
      ["level", ["FedexWebServices::Soap::Rate::SurchargeLevelType", XSD::QName.new(NsV28, "Level")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Tax,
    :schema_type => XSD::QName.new(NsV28, "Tax"),
    :schema_element => [
      ["taxType", ["FedexWebServices::Soap::Rate::TaxType", XSD::QName.new(NsV28, "TaxType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["amount", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::TaxpayerIdentification,
    :schema_type => XSD::QName.new(NsV28, "TaxpayerIdentification"),
    :schema_element => [
      ["tinType", ["FedexWebServices::Soap::Rate::TinType", XSD::QName.new(NsV28, "TinType")], [0, 1]],
      ["number", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Number")], [0, 1]],
      ["usage", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Usage")], [0, 1]],
      ["effectiveDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "EffectiveDate")], [0, 1]],
      ["expirationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsV28, "ExpirationDate")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::TrackingId,
    :schema_type => XSD::QName.new(NsV28, "TrackingId"),
    :schema_element => [
      ["trackingIdType", ["FedexWebServices::Soap::Rate::TrackingIdType", XSD::QName.new(NsV28, "TrackingIdType")], [0, 1]],
      ["formId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "FormId")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV28, "TrackingNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::TransactionDetail,
    :schema_type => XSD::QName.new(NsV28, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Rate::Localization", XSD::QName.new(NsV28, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::UploadDocumentReferenceDetail,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentReferenceDetail"),
    :schema_element => [
      ["lineNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV28, "LineNumber")], [0, 1]],
      ["customerReference", ["SOAP::SOAPString", XSD::QName.new(NsV28, "CustomerReference")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Description")], [0, 1]],
      ["documentProducer", ["FedexWebServices::Soap::Rate::UploadDocumentProducerType", XSD::QName.new(NsV28, "DocumentProducer")], [0, 1]],
      ["documentType", ["FedexWebServices::Soap::Rate::UploadDocumentType", XSD::QName.new(NsV28, "DocumentType")], [0, 1]],
      ["documentId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "DocumentId")], [0, 1]],
      ["documentIdProducer", ["FedexWebServices::Soap::Rate::UploadDocumentIdProducer", XSD::QName.new(NsV28, "DocumentIdProducer")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::VariableHandlingChargeDetail,
    :schema_type => XSD::QName.new(NsV28, "VariableHandlingChargeDetail"),
    :schema_element => [
      ["fixedValue", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "FixedValue")], [0, 1]],
      ["percentValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "PercentValue")], [0, 1]],
      ["rateElementBasis", ["FedexWebServices::Soap::Rate::RateElementBasisType", XSD::QName.new(NsV28, "RateElementBasis")], [0, 1]],
      ["rateTypeBasis", ["FedexWebServices::Soap::Rate::RateTypeBasisType", XSD::QName.new(NsV28, "RateTypeBasis")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::VariableHandlingCharges,
    :schema_type => XSD::QName.new(NsV28, "VariableHandlingCharges"),
    :schema_element => [
      ["variableHandlingCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "VariableHandlingCharge")], [0, 1]],
      ["fixedVariableHandlingCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "FixedVariableHandlingCharge")], [0, 1]],
      ["percentVariableHandlingCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "PercentVariableHandlingCharge")], [0, 1]],
      ["totalCustomerCharge", ["FedexWebServices::Soap::Rate::Money", XSD::QName.new(NsV28, "TotalCustomerCharge")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Volume,
    :schema_type => XSD::QName.new(NsV28, "Volume"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Rate::VolumeUnits", XSD::QName.new(NsV28, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::Weight,
    :schema_type => XSD::QName.new(NsV28, "Weight"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Rate::WeightUnits", XSD::QName.new(NsV28, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV28, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV28, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::Rate::WebAuthenticationCredential", XSD::QName.new(NsV28, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::Rate::WebAuthenticationCredential", XSD::QName.new(NsV28, "UserCredential")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV28, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV28, "Password")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::VersionId,
    :schema_type => XSD::QName.new(NsV28, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV28, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV28, "Minor")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::AdditionalLabelsType,
    :schema_type => XSD::QName.new(NsV28, "AdditionalLabelsType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::AlcoholRecipientType,
    :schema_type => XSD::QName.new(NsV28, "AlcoholRecipientType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::AncillaryFeeAndTaxType,
    :schema_type => XSD::QName.new(NsV28, "AncillaryFeeAndTaxType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::B13AFilingOptionType,
    :schema_type => XSD::QName.new(NsV28, "B13AFilingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::BarcodeSymbologyType,
    :schema_type => XSD::QName.new(NsV28, "BarcodeSymbologyType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::BatteryMaterialType,
    :schema_type => XSD::QName.new(NsV28, "BatteryMaterialType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::BatteryPackingType,
    :schema_type => XSD::QName.new(NsV28, "BatteryPackingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::BatteryRegulatorySubType,
    :schema_type => XSD::QName.new(NsV28, "BatteryRegulatorySubType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::BrokerType,
    :schema_type => XSD::QName.new(NsV28, "BrokerType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CarrierCodeType,
    :schema_type => XSD::QName.new(NsV28, "CarrierCodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ChargeBasisLevelType,
    :schema_type => XSD::QName.new(NsV28, "ChargeBasisLevelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ClearanceBrokerageType,
    :schema_type => XSD::QName.new(NsV28, "ClearanceBrokerageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CodAddTransportationChargeBasisType,
    :schema_type => XSD::QName.new(NsV28, "CodAddTransportationChargeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CodCollectionType,
    :schema_type => XSD::QName.new(NsV28, "CodCollectionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CodReturnReferenceIndicatorType,
    :schema_type => XSD::QName.new(NsV28, "CodReturnReferenceIndicatorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CommitmentDelayType,
    :schema_type => XSD::QName.new(NsV28, "CommitmentDelayType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CommodityPurposeType,
    :schema_type => XSD::QName.new(NsV28, "CommodityPurposeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ConsolidationType,
    :schema_type => XSD::QName.new(NsV28, "ConsolidationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomDeliveryWindowType,
    :schema_type => XSD::QName.new(NsV28, "CustomDeliveryWindowType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomLabelCoordinateUnits,
    :schema_type => XSD::QName.new(NsV28, "CustomLabelCoordinateUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerImageUsageType,
    :schema_type => XSD::QName.new(NsV28, "CustomerImageUsageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerReferenceType,
    :schema_type => XSD::QName.new(NsV28, "CustomerReferenceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomerSpecifiedLabelGenerationOptionType,
    :schema_type => XSD::QName.new(NsV28, "CustomerSpecifiedLabelGenerationOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::CustomsOptionType,
    :schema_type => XSD::QName.new(NsV28, "CustomsOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsAccessibilityType,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsAccessibilityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DangerousGoodsPackingOptionType,
    :schema_type => XSD::QName.new(NsV28, "DangerousGoodsPackingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DayOfWeekType,
    :schema_type => XSD::QName.new(NsV28, "DayOfWeekType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DelayLevelType,
    :schema_type => XSD::QName.new(NsV28, "DelayLevelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DelayPointType,
    :schema_type => XSD::QName.new(NsV28, "DelayPointType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DestinationControlStatementType,
    :schema_type => XSD::QName.new(NsV28, "DestinationControlStatementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DistanceUnits,
    :schema_type => XSD::QName.new(NsV28, "DistanceUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabContentType,
    :schema_type => XSD::QName.new(NsV28, "DocTabContentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocTabZoneJustificationType,
    :schema_type => XSD::QName.new(NsV28, "DocTabZoneJustificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DocumentFormatOptionType,
    :schema_type => XSD::QName.new(NsV28, "DocumentFormatOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::DropoffType,
    :schema_type => XSD::QName.new(NsV28, "DropoffType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::EMailNotificationRecipientType,
    :schema_type => XSD::QName.new(NsV28, "EMailNotificationRecipientType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::EdtRequestType,
    :schema_type => XSD::QName.new(NsV28, "EdtRequestType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::EdtTaxType,
    :schema_type => XSD::QName.new(NsV28, "EdtTaxType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::EtdAttributeType,
    :schema_type => XSD::QName.new(NsV28, "EtdAttributeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ExpressRegionCode,
    :schema_type => XSD::QName.new(NsV28, "ExpressRegionCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FedExLocationType,
    :schema_type => XSD::QName.new(NsV28, "FedExLocationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FlatbedTrailerOption,
    :schema_type => XSD::QName.new(NsV28, "FlatbedTrailerOption")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightBaseChargeCalculationType,
    :schema_type => XSD::QName.new(NsV28, "FreightBaseChargeCalculationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightChargeBasisType,
    :schema_type => XSD::QName.new(NsV28, "FreightChargeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightClassType,
    :schema_type => XSD::QName.new(NsV28, "FreightClassType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightCollectTermsType,
    :schema_type => XSD::QName.new(NsV28, "FreightCollectTermsType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightGuaranteeType,
    :schema_type => XSD::QName.new(NsV28, "FreightGuaranteeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightOnValueType,
    :schema_type => XSD::QName.new(NsV28, "FreightOnValueType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightRateQuoteType,
    :schema_type => XSD::QName.new(NsV28, "FreightRateQuoteType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightServiceSchedulingType,
    :schema_type => XSD::QName.new(NsV28, "FreightServiceSchedulingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::FreightShipmentRoleType,
    :schema_type => XSD::QName.new(NsV28, "FreightShipmentRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityDescriptionProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityDescriptionProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityLabelTextOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityLabelTextOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityOptionType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityPackingGroupType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityPackingGroupType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityQuantityType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityQuantityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousCommodityRegulationType,
    :schema_type => XSD::QName.new(NsV28, "HazardousCommodityRegulationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HazardousContainerPackingType,
    :schema_type => XSD::QName.new(NsV28, "HazardousContainerPackingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::HomeDeliveryPremiumType,
    :schema_type => XSD::QName.new(NsV28, "HomeDeliveryPremiumType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ImageId,
    :schema_type => XSD::QName.new(NsV28, "ImageId")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::InternationalControlledExportType,
    :schema_type => XSD::QName.new(NsV28, "InternationalControlledExportType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::InternationalDocumentContentType,
    :schema_type => XSD::QName.new(NsV28, "InternationalDocumentContentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelFormatType,
    :schema_type => XSD::QName.new(NsV28, "LabelFormatType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelMaskableDataType,
    :schema_type => XSD::QName.new(NsV28, "LabelMaskableDataType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelOrderType,
    :schema_type => XSD::QName.new(NsV28, "LabelOrderType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelPrintingOrientationType,
    :schema_type => XSD::QName.new(NsV28, "LabelPrintingOrientationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelRotationType,
    :schema_type => XSD::QName.new(NsV28, "LabelRotationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LabelStockType,
    :schema_type => XSD::QName.new(NsV28, "LabelStockType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LiabilityCoverageType,
    :schema_type => XSD::QName.new(NsV28, "LiabilityCoverageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::LinearUnits,
    :schema_type => XSD::QName.new(NsV28, "LinearUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::MinimumChargeType,
    :schema_type => XSD::QName.new(NsV28, "MinimumChargeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaImporterSpecificationType,
    :schema_type => XSD::QName.new(NsV28, "NaftaImporterSpecificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaNetCostMethodCode,
    :schema_type => XSD::QName.new(NsV28, "NaftaNetCostMethodCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaPreferenceCriterionCode,
    :schema_type => XSD::QName.new(NsV28, "NaftaPreferenceCriterionCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaProducerDeterminationCode,
    :schema_type => XSD::QName.new(NsV28, "NaftaProducerDeterminationCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NaftaProducerSpecificationType,
    :schema_type => XSD::QName.new(NsV28, "NaftaProducerSpecificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NetExplosiveClassificationType,
    :schema_type => XSD::QName.new(NsV28, "NetExplosiveClassificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationEventType,
    :schema_type => XSD::QName.new(NsV28, "NotificationEventType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationFormatType,
    :schema_type => XSD::QName.new(NsV28, "NotificationFormatType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV28, "NotificationSeverityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::NotificationType,
    :schema_type => XSD::QName.new(NsV28, "NotificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::OversizeClassType,
    :schema_type => XSD::QName.new(NsV28, "OversizeClassType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PageQuadrantType,
    :schema_type => XSD::QName.new(NsV28, "PageQuadrantType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PaymentType,
    :schema_type => XSD::QName.new(NsV28, "PaymentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PendingShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PendingShipmentType,
    :schema_type => XSD::QName.new(NsV28, "PendingShipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PhysicalFormType,
    :schema_type => XSD::QName.new(NsV28, "PhysicalFormType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PhysicalPackagingType,
    :schema_type => XSD::QName.new(NsV28, "PhysicalPackagingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PickupRequestSourceType,
    :schema_type => XSD::QName.new(NsV28, "PickupRequestSourceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PickupRequestType,
    :schema_type => XSD::QName.new(NsV28, "PickupRequestType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PricingCodeType,
    :schema_type => XSD::QName.new(NsV28, "PricingCodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PriorityAlertEnhancementType,
    :schema_type => XSD::QName.new(NsV28, "PriorityAlertEnhancementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::PurposeOfShipmentType,
    :schema_type => XSD::QName.new(NsV28, "PurposeOfShipmentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RadioactiveContainerClassType,
    :schema_type => XSD::QName.new(NsV28, "RadioactiveContainerClassType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RadioactivityUnitOfMeasure,
    :schema_type => XSD::QName.new(NsV28, "RadioactivityUnitOfMeasure")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateDimensionalDivisorType,
    :schema_type => XSD::QName.new(NsV28, "RateDimensionalDivisorType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateDiscountType,
    :schema_type => XSD::QName.new(NsV28, "RateDiscountType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateElementBasisType,
    :schema_type => XSD::QName.new(NsV28, "RateElementBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateRequestType,
    :schema_type => XSD::QName.new(NsV28, "RateRequestType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateTypeBasisType,
    :schema_type => XSD::QName.new(NsV28, "RateTypeBasisType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RatedWeightMethod,
    :schema_type => XSD::QName.new(NsV28, "RatedWeightMethod")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RebateType,
    :schema_type => XSD::QName.new(NsV28, "RebateType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RecipientCustomsIdType,
    :schema_type => XSD::QName.new(NsV28, "RecipientCustomsIdType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RecommendedDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RecommendedDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RegulatoryControlType,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryControlType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RegulatoryLabelType,
    :schema_type => XSD::QName.new(NsV28, "RegulatoryLabelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RelativeVerticalPositionType,
    :schema_type => XSD::QName.new(NsV28, "RelativeVerticalPositionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RequestedShippingDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RequestedShippingDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RequiredShippingDocumentType,
    :schema_type => XSD::QName.new(NsV28, "RequiredShippingDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnEMailAllowedSpecialServiceType,
    :schema_type => XSD::QName.new(NsV28, "ReturnEMailAllowedSpecialServiceType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnType,
    :schema_type => XSD::QName.new(NsV28, "ReturnType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ReturnedRateType,
    :schema_type => XSD::QName.new(NsV28, "ReturnedRateType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RotationType,
    :schema_type => XSD::QName.new(NsV28, "RotationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SecondaryBarcodeType,
    :schema_type => XSD::QName.new(NsV28, "SecondaryBarcodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ServiceOptionType,
    :schema_type => XSD::QName.new(NsV28, "ServiceOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentDryIceProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentDryIceProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentNotificationAggregationType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationAggregationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentNotificationRoleType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentNotificationRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShipmentOnlyFieldsType,
    :schema_type => XSD::QName.new(NsV28, "ShipmentOnlyFieldsType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentDispositionType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentDispositionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentEMailGroupingType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentEMailGroupingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentGroupingType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentGroupingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentImageType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentImageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::ShippingDocumentStockType,
    :schema_type => XSD::QName.new(NsV28, "ShippingDocumentStockType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SignatureOptionType,
    :schema_type => XSD::QName.new(NsV28, "SignatureOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SmartPostAncillaryEndorsementType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostAncillaryEndorsementType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SmartPostIndiciaType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostIndiciaType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SmartPostShipmentProcessingOptionType,
    :schema_type => XSD::QName.new(NsV28, "SmartPostShipmentProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SpecialRatingAppliedType,
    :schema_type => XSD::QName.new(NsV28, "SpecialRatingAppliedType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SurchargeLevelType,
    :schema_type => XSD::QName.new(NsV28, "SurchargeLevelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::SurchargeType,
    :schema_type => XSD::QName.new(NsV28, "SurchargeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::TaxType,
    :schema_type => XSD::QName.new(NsV28, "TaxType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::TaxesOrMiscellaneousChargeType,
    :schema_type => XSD::QName.new(NsV28, "TaxesOrMiscellaneousChargeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::TinType,
    :schema_type => XSD::QName.new(NsV28, "TinType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::TrackingIdType,
    :schema_type => XSD::QName.new(NsV28, "TrackingIdType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::TransitTimeType,
    :schema_type => XSD::QName.new(NsV28, "TransitTimeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::UploadDocumentIdProducer,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentIdProducer")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::UploadDocumentProducerType,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentProducerType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::UploadDocumentType,
    :schema_type => XSD::QName.new(NsV28, "UploadDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::VolumeUnits,
    :schema_type => XSD::QName.new(NsV28, "VolumeUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::WeightUnits,
    :schema_type => XSD::QName.new(NsV28, "WeightUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateReply,
    :schema_name => XSD::QName.new(NsV28, "RateReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Rate::NotificationSeverityType", XSD::QName.new(NsV28, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Rate::Notification[]", XSD::QName.new(NsV28, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Rate::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Rate::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["rateReplyDetails", ["FedexWebServices::Soap::Rate::RateReplyDetail[]", XSD::QName.new(NsV28, "RateReplyDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Rate::RateRequest,
    :schema_name => XSD::QName.new(NsV28, "RateRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Rate::WebAuthenticationDetail", XSD::QName.new(NsV28, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Rate::ClientDetail", XSD::QName.new(NsV28, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Rate::TransactionDetail", XSD::QName.new(NsV28, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Rate::VersionId", XSD::QName.new(NsV28, "Version")]],
      ["returnTransitAndCommit", ["SOAP::SOAPBoolean", XSD::QName.new(NsV28, "ReturnTransitAndCommit")], [0, 1]],
      ["carrierCodes", ["FedexWebServices::Soap::Rate::CarrierCodeType[]", XSD::QName.new(NsV28, "CarrierCodes")], [0, nil]],
      ["variableOptions", ["FedexWebServices::Soap::Rate::ServiceOptionType[]", XSD::QName.new(NsV28, "VariableOptions")], [0, nil]],
      ["consolidationKey", ["FedexWebServices::Soap::Rate::ConsolidationKey", XSD::QName.new(NsV28, "ConsolidationKey")], [0, 1]],
      ["requestedShipment", ["FedexWebServices::Soap::Rate::RequestedShipment", XSD::QName.new(NsV28, "RequestedShipment")], [0, 1]]
    ]
  )
end

end; end; end
