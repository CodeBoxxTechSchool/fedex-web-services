# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.4)
require 'xsd/qname'

module FedexWebServices; module Soap; module Locations


# {http://fedex.com/ws/locs/v12}Address
#   streetLines - SOAP::SOAPString
#   city - SOAP::SOAPString
#   stateOrProvinceCode - SOAP::SOAPString
#   postalCode - SOAP::SOAPString
#   urbanizationCode - SOAP::SOAPString
#   countryCode - SOAP::SOAPString
#   countryName - SOAP::SOAPString
#   residential - SOAP::SOAPBoolean
#   geographicCoordinates - SOAP::SOAPString
class Address
  attr_accessor :streetLines
  attr_accessor :city
  attr_accessor :stateOrProvinceCode
  attr_accessor :postalCode
  attr_accessor :urbanizationCode
  attr_accessor :countryCode
  attr_accessor :countryName
  attr_accessor :residential
  attr_accessor :geographicCoordinates

  def initialize(streetLines = [], city = nil, stateOrProvinceCode = nil, postalCode = nil, urbanizationCode = nil, countryCode = nil, countryName = nil, residential = nil, geographicCoordinates = nil)
    @streetLines = streetLines
    @city = city
    @stateOrProvinceCode = stateOrProvinceCode
    @postalCode = postalCode
    @urbanizationCode = urbanizationCode
    @countryCode = countryCode
    @countryName = countryName
    @residential = residential
    @geographicCoordinates = geographicCoordinates
  end
end

# {http://fedex.com/ws/locs/v12}AddressAncillaryDetail
#   locationInCity - SOAP::SOAPString
#   locationInProperty - SOAP::SOAPString
#   accessibility - FedexWebServices::Soap::Locations::LocationAccessibilityType
#   building - SOAP::SOAPString
#   department - SOAP::SOAPString
#   roomFloor - SOAP::SOAPString
#   suite - SOAP::SOAPString
#   apartment - SOAP::SOAPString
#   room - SOAP::SOAPString
#   crossStreet - SOAP::SOAPString
#   additionalDescriptions - SOAP::SOAPString
class AddressAncillaryDetail
  attr_accessor :locationInCity
  attr_accessor :locationInProperty
  attr_accessor :accessibility
  attr_accessor :building
  attr_accessor :department
  attr_accessor :roomFloor
  attr_accessor :suite
  attr_accessor :apartment
  attr_accessor :room
  attr_accessor :crossStreet
  attr_accessor :additionalDescriptions

  def initialize(locationInCity = nil, locationInProperty = nil, accessibility = nil, building = nil, department = nil, roomFloor = nil, suite = nil, apartment = nil, room = nil, crossStreet = nil, additionalDescriptions = [])
    @locationInCity = locationInCity
    @locationInProperty = locationInProperty
    @accessibility = accessibility
    @building = building
    @department = department
    @roomFloor = roomFloor
    @suite = suite
    @apartment = apartment
    @room = room
    @crossStreet = crossStreet
    @additionalDescriptions = additionalDescriptions
  end
end

# {http://fedex.com/ws/locs/v12}AddressToLocationRelationshipDetail
#   matchedAddress - FedexWebServices::Soap::Locations::Address
#   matchedAddressGeographicCoordinates - SOAP::SOAPString
#   distanceAndLocationDetails - FedexWebServices::Soap::Locations::DistanceAndLocationDetail
class AddressToLocationRelationshipDetail
  attr_accessor :matchedAddress
  attr_accessor :matchedAddressGeographicCoordinates
  attr_accessor :distanceAndLocationDetails

  def initialize(matchedAddress = nil, matchedAddressGeographicCoordinates = nil, distanceAndLocationDetails = [])
    @matchedAddress = matchedAddress
    @matchedAddressGeographicCoordinates = matchedAddressGeographicCoordinates
    @distanceAndLocationDetails = distanceAndLocationDetails
  end
end

# {http://fedex.com/ws/locs/v12}CarrierDetail
#   carrier - FedexWebServices::Soap::Locations::CarrierCodeType
#   serviceCategory - FedexWebServices::Soap::Locations::ServiceCategoryType
#   serviceType - SOAP::SOAPString
#   countryRelationship - FedexWebServices::Soap::Locations::CountryRelationshipType
#   normalLatestDropOffDetails - FedexWebServices::Soap::Locations::LatestDropOffDetail
#   exceptionalLatestDropOffDetails - FedexWebServices::Soap::Locations::LatestDropOffDetail
#   effectiveLatestDropOffDetails - FedexWebServices::Soap::Locations::LatestDropOffDetail
#   shippingHolidays - FedexWebServices::Soap::Locations::ShippingHoliday
class CarrierDetail
  attr_accessor :carrier
  attr_accessor :serviceCategory
  attr_accessor :serviceType
  attr_accessor :countryRelationship
  attr_accessor :normalLatestDropOffDetails
  attr_accessor :exceptionalLatestDropOffDetails
  attr_accessor :effectiveLatestDropOffDetails
  attr_accessor :shippingHolidays

  def initialize(carrier = nil, serviceCategory = nil, serviceType = nil, countryRelationship = nil, normalLatestDropOffDetails = [], exceptionalLatestDropOffDetails = [], effectiveLatestDropOffDetails = nil, shippingHolidays = [])
    @carrier = carrier
    @serviceCategory = serviceCategory
    @serviceType = serviceType
    @countryRelationship = countryRelationship
    @normalLatestDropOffDetails = normalLatestDropOffDetails
    @exceptionalLatestDropOffDetails = exceptionalLatestDropOffDetails
    @effectiveLatestDropOffDetails = effectiveLatestDropOffDetails
    @shippingHolidays = shippingHolidays
  end
end

# {http://fedex.com/ws/locs/v12}ClearanceCountryDetail
#   clearanceCountry - SOAP::SOAPString
#   servicesSupported - SOAP::SOAPString
#   specialServicesSupported - SOAP::SOAPString
class ClearanceCountryDetail
  attr_accessor :clearanceCountry
  attr_accessor :servicesSupported
  attr_accessor :specialServicesSupported

  def initialize(clearanceCountry = nil, servicesSupported = [], specialServicesSupported = [])
    @clearanceCountry = clearanceCountry
    @servicesSupported = servicesSupported
    @specialServicesSupported = specialServicesSupported
  end
end

# {http://fedex.com/ws/locs/v12}ClearanceLocationDetail
#   servicesSupported - SOAP::SOAPString
#   consolidationType - FedexWebServices::Soap::Locations::ConsolidationType
#   clearanceLocationType - FedexWebServices::Soap::Locations::DistributionClearanceType
#   specialServicesSupported - SOAP::SOAPString
#   clearanceCountries - FedexWebServices::Soap::Locations::ClearanceCountryDetail
#   clearanceRoutingCode - SOAP::SOAPString
class ClearanceLocationDetail
  attr_accessor :servicesSupported
  attr_accessor :consolidationType
  attr_accessor :clearanceLocationType
  attr_accessor :specialServicesSupported
  attr_accessor :clearanceCountries
  attr_accessor :clearanceRoutingCode

  def initialize(servicesSupported = [], consolidationType = nil, clearanceLocationType = nil, specialServicesSupported = [], clearanceCountries = [], clearanceRoutingCode = nil)
    @servicesSupported = servicesSupported
    @consolidationType = consolidationType
    @clearanceLocationType = clearanceLocationType
    @specialServicesSupported = specialServicesSupported
    @clearanceCountries = clearanceCountries
    @clearanceRoutingCode = clearanceRoutingCode
  end
end

# {http://fedex.com/ws/locs/v12}ClientDetail
#   accountNumber - SOAP::SOAPString
#   meterNumber - SOAP::SOAPString
#   meterInstance - SOAP::SOAPString
#   integratorId - SOAP::SOAPString
#   region - FedexWebServices::Soap::Locations::ExpressRegionCode
#   localization - FedexWebServices::Soap::Locations::Localization
class ClientDetail
  attr_accessor :accountNumber
  attr_accessor :meterNumber
  attr_accessor :meterInstance
  attr_accessor :integratorId
  attr_accessor :region
  attr_accessor :localization

  def initialize(accountNumber = nil, meterNumber = nil, meterInstance = nil, integratorId = nil, region = nil, localization = nil)
    @accountNumber = accountNumber
    @meterNumber = meterNumber
    @meterInstance = meterInstance
    @integratorId = integratorId
    @region = region
    @localization = localization
  end
end

# {http://fedex.com/ws/locs/v12}Contact
#   contactId - SOAP::SOAPString
#   personName - SOAP::SOAPString
#   title - SOAP::SOAPString
#   companyName - SOAP::SOAPString
#   phoneNumber - SOAP::SOAPString
#   phoneExtension - SOAP::SOAPString
#   tollFreePhoneNumber - SOAP::SOAPString
#   pagerNumber - SOAP::SOAPString
#   faxNumber - SOAP::SOAPString
#   eMailAddress - SOAP::SOAPString
class Contact
  attr_accessor :contactId
  attr_accessor :personName
  attr_accessor :title
  attr_accessor :companyName
  attr_accessor :phoneNumber
  attr_accessor :phoneExtension
  attr_accessor :tollFreePhoneNumber
  attr_accessor :pagerNumber
  attr_accessor :faxNumber
  attr_accessor :eMailAddress

  def initialize(contactId = nil, personName = nil, title = nil, companyName = nil, phoneNumber = nil, phoneExtension = nil, tollFreePhoneNumber = nil, pagerNumber = nil, faxNumber = nil, eMailAddress = nil)
    @contactId = contactId
    @personName = personName
    @title = title
    @companyName = companyName
    @phoneNumber = phoneNumber
    @phoneExtension = phoneExtension
    @tollFreePhoneNumber = tollFreePhoneNumber
    @pagerNumber = pagerNumber
    @faxNumber = faxNumber
    @eMailAddress = eMailAddress
  end
end

# {http://fedex.com/ws/locs/v12}Dimensions
#   length - SOAP::SOAPNonNegativeInteger
#   width - SOAP::SOAPNonNegativeInteger
#   height - SOAP::SOAPNonNegativeInteger
#   units - FedexWebServices::Soap::Locations::LinearUnits
class Dimensions
  attr_accessor :length
  attr_accessor :width
  attr_accessor :height
  attr_accessor :units

  def initialize(length = nil, width = nil, height = nil, units = nil)
    @length = length
    @width = width
    @height = height
    @units = units
  end
end

# {http://fedex.com/ws/locs/v12}Distance
#   value - SOAP::SOAPDecimal
#   units - FedexWebServices::Soap::Locations::DistanceUnits
class Distance
  attr_accessor :value
  attr_accessor :units

  def initialize(value = nil, units = nil)
    @value = value
    @units = units
  end
end

# {http://fedex.com/ws/locs/v12}DistanceAndLocationDetail
#   distance - FedexWebServices::Soap::Locations::Distance
#   reservationAvailabilityDetail - FedexWebServices::Soap::Locations::ReservationAvailabilityDetail
#   supportedRedirectToHoldServices - FedexWebServices::Soap::Locations::SupportedRedirectToHoldServiceType
#   locationDetail - FedexWebServices::Soap::Locations::LocationDetail
class DistanceAndLocationDetail
  attr_accessor :distance
  attr_accessor :reservationAvailabilityDetail
  attr_accessor :supportedRedirectToHoldServices
  attr_accessor :locationDetail

  def initialize(distance = nil, reservationAvailabilityDetail = nil, supportedRedirectToHoldServices = [], locationDetail = nil)
    @distance = distance
    @reservationAvailabilityDetail = reservationAvailabilityDetail
    @supportedRedirectToHoldServices = supportedRedirectToHoldServices
    @locationDetail = locationDetail
  end
end

# {http://fedex.com/ws/locs/v12}Holiday
#   name - SOAP::SOAPString
#   date - SOAP::SOAPDate
class Holiday
  attr_accessor :name
  attr_accessor :date

  def initialize(name = nil, date = nil)
    @name = name
    @date = date
  end
end

# {http://fedex.com/ws/locs/v12}LatestDropOffDetail
#   dayOfWeek - FedexWebServices::Soap::Locations::DayOfWeekType
#   time - SOAP::SOAPTime
#   overlays - FedexWebServices::Soap::Locations::LatestDropoffOverlayDetail
class LatestDropOffDetail
  attr_accessor :dayOfWeek
  attr_accessor :time
  attr_accessor :overlays

  def initialize(dayOfWeek = nil, time = nil, overlays = [])
    @dayOfWeek = dayOfWeek
    @time = time
    @overlays = overlays
  end
end

# {http://fedex.com/ws/locs/v12}LatestDropoffOverlayDetail
#   type - FedexWebServices::Soap::Locations::LatestDropOffOverlayType
#   time - SOAP::SOAPTime
class LatestDropoffOverlayDetail
  attr_accessor :type
  attr_accessor :time

  def initialize(type = nil, time = nil)
    @type = type
    @time = time
  end
end

# {http://fedex.com/ws/locs/v12}Localization
#   languageCode - SOAP::SOAPString
#   localeCode - SOAP::SOAPString
class Localization
  attr_accessor :languageCode
  attr_accessor :localeCode

  def initialize(languageCode = nil, localeCode = nil)
    @languageCode = languageCode
    @localeCode = localeCode
  end
end

# {http://fedex.com/ws/locs/v12}LocationCapabilityDetail
#   carrierCode - FedexWebServices::Soap::Locations::CarrierCodeType
#   serviceType - SOAP::SOAPString
#   serviceCategory - FedexWebServices::Soap::Locations::ServiceCategoryType
#   transferOfPossessionType - FedexWebServices::Soap::Locations::LocationTransferOfPossessionType
#   daysOfWeek - FedexWebServices::Soap::Locations::DayOfWeekType
class LocationCapabilityDetail
  attr_accessor :carrierCode
  attr_accessor :serviceType
  attr_accessor :serviceCategory
  attr_accessor :transferOfPossessionType
  attr_accessor :daysOfWeek

  def initialize(carrierCode = nil, serviceType = nil, serviceCategory = nil, transferOfPossessionType = nil, daysOfWeek = [])
    @carrierCode = carrierCode
    @serviceType = serviceType
    @serviceCategory = serviceCategory
    @transferOfPossessionType = transferOfPossessionType
    @daysOfWeek = daysOfWeek
  end
end

# {http://fedex.com/ws/locs/v12}LocationContactAndAddress
#   contact - FedexWebServices::Soap::Locations::Contact
#   address - FedexWebServices::Soap::Locations::Address
#   addressAncillaryDetail - FedexWebServices::Soap::Locations::AddressAncillaryDetail
class LocationContactAndAddress
  attr_accessor :contact
  attr_accessor :address
  attr_accessor :addressAncillaryDetail

  def initialize(contact = nil, address = nil, addressAncillaryDetail = nil)
    @contact = contact
    @address = address
    @addressAncillaryDetail = addressAncillaryDetail
  end
end

# {http://fedex.com/ws/locs/v12}LocationDetail
#   locationId - SOAP::SOAPString
#   storeNumber - SOAP::SOAPString
#   locationContactAndAddress - FedexWebServices::Soap::Locations::LocationContactAndAddress
#   specialInstructions - SOAP::SOAPString
#   timeZoneOffset - SOAP::SOAPString
#   locationType - FedexWebServices::Soap::Locations::FedExLocationType
#   locationTypeForDisplay - SOAP::SOAPString
#   internalFieldsDetail - FedexWebServices::Soap::Locations::LocationFieldsForInternalFedexUseDetail
#   attributes - FedexWebServices::Soap::Locations::LocationAttributesType
#   locationCapabilities - FedexWebServices::Soap::Locations::LocationCapabilityDetail
#   packageMaximumLimits - FedexWebServices::Soap::Locations::LocationPackageLimitsDetail
#   clearanceLocationDetail - FedexWebServices::Soap::Locations::ClearanceLocationDetail
#   servicingLocationDetails - FedexWebServices::Soap::Locations::LocationIdentificationDetail
#   acceptedCurrency - SOAP::SOAPString
#   locationHolidays - FedexWebServices::Soap::Locations::Holiday
#   mapUrl - SOAP::SOAPString
#   entityId - SOAP::SOAPString
#   normalHours - FedexWebServices::Soap::Locations::LocationHours
#   exceptionalHours - FedexWebServices::Soap::Locations::LocationHours
#   hoursForEffectiveDate - FedexWebServices::Soap::Locations::LocationHours
#   carrierDetails - FedexWebServices::Soap::Locations::CarrierDetail
class LocationDetail
  attr_accessor :locationId
  attr_accessor :storeNumber
  attr_accessor :locationContactAndAddress
  attr_accessor :specialInstructions
  attr_accessor :timeZoneOffset
  attr_accessor :locationType
  attr_accessor :locationTypeForDisplay
  attr_accessor :internalFieldsDetail
  attr_accessor :attributes
  attr_accessor :locationCapabilities
  attr_accessor :packageMaximumLimits
  attr_accessor :clearanceLocationDetail
  attr_accessor :servicingLocationDetails
  attr_accessor :acceptedCurrency
  attr_accessor :locationHolidays
  attr_accessor :mapUrl
  attr_accessor :entityId
  attr_accessor :normalHours
  attr_accessor :exceptionalHours
  attr_accessor :hoursForEffectiveDate
  attr_accessor :carrierDetails

  def initialize(locationId = nil, storeNumber = nil, locationContactAndAddress = nil, specialInstructions = nil, timeZoneOffset = nil, locationType = nil, locationTypeForDisplay = nil, internalFieldsDetail = nil, attributes = [], locationCapabilities = [], packageMaximumLimits = nil, clearanceLocationDetail = nil, servicingLocationDetails = [], acceptedCurrency = nil, locationHolidays = [], mapUrl = nil, entityId = nil, normalHours = [], exceptionalHours = [], hoursForEffectiveDate = [], carrierDetails = [])
    @locationId = locationId
    @storeNumber = storeNumber
    @locationContactAndAddress = locationContactAndAddress
    @specialInstructions = specialInstructions
    @timeZoneOffset = timeZoneOffset
    @locationType = locationType
    @locationTypeForDisplay = locationTypeForDisplay
    @internalFieldsDetail = internalFieldsDetail
    @attributes = attributes
    @locationCapabilities = locationCapabilities
    @packageMaximumLimits = packageMaximumLimits
    @clearanceLocationDetail = clearanceLocationDetail
    @servicingLocationDetails = servicingLocationDetails
    @acceptedCurrency = acceptedCurrency
    @locationHolidays = locationHolidays
    @mapUrl = mapUrl
    @entityId = entityId
    @normalHours = normalHours
    @exceptionalHours = exceptionalHours
    @hoursForEffectiveDate = hoursForEffectiveDate
    @carrierDetails = carrierDetails
  end
end

# {http://fedex.com/ws/locs/v12}LocationFieldsForInternalFedexUseDetail
#   nonRevenueAccountNumber - SOAP::SOAPString
#   cityCenterAccountNumber - SOAP::SOAPString
#   customsLocationId - SOAP::SOAPString
#   costCenterCode - SOAP::SOAPString
#   attributes - FedexWebServices::Soap::Locations::LocationAttributesForInternalFedexUseType
#   operationalContact - FedexWebServices::Soap::Locations::Contact
#   localAirportId - SOAP::SOAPString
#   regionalAirportId - SOAP::SOAPString
class LocationFieldsForInternalFedexUseDetail
  attr_accessor :nonRevenueAccountNumber
  attr_accessor :cityCenterAccountNumber
  attr_accessor :customsLocationId
  attr_accessor :costCenterCode
  attr_accessor :attributes
  attr_accessor :operationalContact
  attr_accessor :localAirportId
  attr_accessor :regionalAirportId

  def initialize(nonRevenueAccountNumber = nil, cityCenterAccountNumber = nil, customsLocationId = nil, costCenterCode = nil, attributes = [], operationalContact = nil, localAirportId = nil, regionalAirportId = nil)
    @nonRevenueAccountNumber = nonRevenueAccountNumber
    @cityCenterAccountNumber = cityCenterAccountNumber
    @customsLocationId = customsLocationId
    @costCenterCode = costCenterCode
    @attributes = attributes
    @operationalContact = operationalContact
    @localAirportId = localAirportId
    @regionalAirportId = regionalAirportId
  end
end

# {http://fedex.com/ws/locs/v12}LocationHours
#   dayofWeek - FedexWebServices::Soap::Locations::DayOfWeekType
#   operationalHours - FedexWebServices::Soap::Locations::OperationalHoursType
#   hours - FedexWebServices::Soap::Locations::TimeRange
class LocationHours
  attr_accessor :dayofWeek
  attr_accessor :operationalHours
  attr_accessor :hours

  def initialize(dayofWeek = nil, operationalHours = nil, hours = [])
    @dayofWeek = dayofWeek
    @operationalHours = operationalHours
    @hours = hours
  end
end

# {http://fedex.com/ws/locs/v12}LocationIdentificationDetail
#   type - FedexWebServices::Soap::Locations::FedExLocationType
#   id - SOAP::SOAPString
#   number - SOAP::SOAPInt
class LocationIdentificationDetail
  attr_accessor :type
  attr_accessor :id
  attr_accessor :number

  def initialize(type = nil, id = nil, number = nil)
    @type = type
    @id = id
    @number = number
  end
end

# {http://fedex.com/ws/locs/v12}LocationPackageLimitsDetail
#   weight - FedexWebServices::Soap::Locations::Weight
#   dimensions - FedexWebServices::Soap::Locations::Dimensions
class LocationPackageLimitsDetail
  attr_accessor :weight
  attr_accessor :dimensions

  def initialize(weight = nil, dimensions = nil)
    @weight = weight
    @dimensions = dimensions
  end
end

# {http://fedex.com/ws/locs/v12}LocationSortDetail
#   criterion - FedexWebServices::Soap::Locations::LocationSortCriteriaType
#   order - FedexWebServices::Soap::Locations::LocationSortOrderType
class LocationSortDetail
  attr_accessor :criterion
  attr_accessor :order

  def initialize(criterion = nil, order = nil)
    @criterion = criterion
    @order = order
  end
end

# {http://fedex.com/ws/locs/v12}LocationSupportedPackageDetail
#   weight - FedexWebServices::Soap::Locations::Weight
#   dimensions - FedexWebServices::Soap::Locations::Dimensions
#   serviceOptions - SOAP::SOAPString
class LocationSupportedPackageDetail
  attr_accessor :weight
  attr_accessor :dimensions
  attr_accessor :serviceOptions

  def initialize(weight = nil, dimensions = nil, serviceOptions = [])
    @weight = weight
    @dimensions = dimensions
    @serviceOptions = serviceOptions
  end
end

# {http://fedex.com/ws/locs/v12}LocationSupportedShipmentDetail
class LocationSupportedShipmentDetail < ::Array
end

# {http://fedex.com/ws/locs/v12}Notification
#   severity - FedexWebServices::Soap::Locations::NotificationSeverityType
#   source - SOAP::SOAPString
#   code - SOAP::SOAPString
#   message - SOAP::SOAPString
#   localizedMessage - SOAP::SOAPString
#   messageParameters - FedexWebServices::Soap::Locations::NotificationParameter
class Notification
  attr_accessor :severity
  attr_accessor :source
  attr_accessor :code
  attr_accessor :message
  attr_accessor :localizedMessage
  attr_accessor :messageParameters

  def initialize(severity = nil, source = nil, code = nil, message = nil, localizedMessage = nil, messageParameters = [])
    @severity = severity
    @source = source
    @code = code
    @message = message
    @localizedMessage = localizedMessage
    @messageParameters = messageParameters
  end
end

# {http://fedex.com/ws/locs/v12}NotificationParameter
#   id - SOAP::SOAPString
#   value - SOAP::SOAPString
class NotificationParameter
  attr_accessor :id
  attr_accessor :value

  def initialize(id = nil, value = nil)
    @id = id
    @value = value
  end
end

# {http://fedex.com/ws/locs/v12}ReservationAvailabilityDetail
class ReservationAvailabilityDetail < ::Array
end

# {http://fedex.com/ws/locs/v12}SearchLocationConstraints
#   radiusDistance - FedexWebServices::Soap::Locations::Distance
#   dropOffTimeNeeded - SOAP::SOAPTime
#   resultsFilters - FedexWebServices::Soap::Locations::LocationSearchFilterType
#   supportedRedirectToHoldServices - FedexWebServices::Soap::Locations::SupportedRedirectToHoldServiceType
#   requiredLocationAttributes - FedexWebServices::Soap::Locations::LocationAttributesType
#   requiredLocationCapabilities - FedexWebServices::Soap::Locations::LocationCapabilityDetail
#   shipmentDetail - FedexWebServices::Soap::Locations::LocationSupportedShipmentDetail
#   resultsToSkip - SOAP::SOAPNonNegativeInteger
#   resultsRequested - SOAP::SOAPNonNegativeInteger
#   locationContentOptions - FedexWebServices::Soap::Locations::LocationContentOptionType
#   locationTypesToInclude - FedexWebServices::Soap::Locations::FedExLocationType
class SearchLocationConstraints
  attr_accessor :radiusDistance
  attr_accessor :dropOffTimeNeeded
  attr_accessor :resultsFilters
  attr_accessor :supportedRedirectToHoldServices
  attr_accessor :requiredLocationAttributes
  attr_accessor :requiredLocationCapabilities
  attr_accessor :shipmentDetail
  attr_accessor :resultsToSkip
  attr_accessor :resultsRequested
  attr_accessor :locationContentOptions
  attr_accessor :locationTypesToInclude

  def initialize(radiusDistance = nil, dropOffTimeNeeded = nil, resultsFilters = [], supportedRedirectToHoldServices = [], requiredLocationAttributes = [], requiredLocationCapabilities = [], shipmentDetail = nil, resultsToSkip = nil, resultsRequested = nil, locationContentOptions = [], locationTypesToInclude = [])
    @radiusDistance = radiusDistance
    @dropOffTimeNeeded = dropOffTimeNeeded
    @resultsFilters = resultsFilters
    @supportedRedirectToHoldServices = supportedRedirectToHoldServices
    @requiredLocationAttributes = requiredLocationAttributes
    @requiredLocationCapabilities = requiredLocationCapabilities
    @shipmentDetail = shipmentDetail
    @resultsToSkip = resultsToSkip
    @resultsRequested = resultsRequested
    @locationContentOptions = locationContentOptions
    @locationTypesToInclude = locationTypesToInclude
  end
end

# {http://fedex.com/ws/locs/v12}SearchLocationsReply
#   highestSeverity - FedexWebServices::Soap::Locations::NotificationSeverityType
#   notifications - FedexWebServices::Soap::Locations::Notification
#   transactionDetail - FedexWebServices::Soap::Locations::TransactionDetail
#   version - FedexWebServices::Soap::Locations::VersionId
#   totalResultsAvailable - SOAP::SOAPNonNegativeInteger
#   resultsReturned - SOAP::SOAPNonNegativeInteger
#   formattedAddress - FedexWebServices::Soap::Locations::Address
#   addressToLocationRelationships - FedexWebServices::Soap::Locations::AddressToLocationRelationshipDetail
class SearchLocationsReply
  attr_accessor :highestSeverity
  attr_accessor :notifications
  attr_accessor :transactionDetail
  attr_accessor :version
  attr_accessor :totalResultsAvailable
  attr_accessor :resultsReturned
  attr_accessor :formattedAddress
  attr_accessor :addressToLocationRelationships

  def initialize(highestSeverity = nil, notifications = [], transactionDetail = nil, version = nil, totalResultsAvailable = nil, resultsReturned = nil, formattedAddress = nil, addressToLocationRelationships = [])
    @highestSeverity = highestSeverity
    @notifications = notifications
    @transactionDetail = transactionDetail
    @version = version
    @totalResultsAvailable = totalResultsAvailable
    @resultsReturned = resultsReturned
    @formattedAddress = formattedAddress
    @addressToLocationRelationships = addressToLocationRelationships
  end
end

# {http://fedex.com/ws/locs/v12}SearchLocationsRequest
#   webAuthenticationDetail - FedexWebServices::Soap::Locations::WebAuthenticationDetail
#   clientDetail - FedexWebServices::Soap::Locations::ClientDetail
#   transactionDetail - FedexWebServices::Soap::Locations::TransactionDetail
#   version - FedexWebServices::Soap::Locations::VersionId
#   effectiveDate - SOAP::SOAPDate
#   locationsSearchCriterion - FedexWebServices::Soap::Locations::LocationsSearchCriteriaType
#   shipperAccountNumber - SOAP::SOAPString
#   uniqueTrackingNumber - FedexWebServices::Soap::Locations::UniqueTrackingNumber
#   address - FedexWebServices::Soap::Locations::Address
#   phoneNumber - SOAP::SOAPString
#   geographicCoordinates - SOAP::SOAPString
#   multipleMatchesAction - FedexWebServices::Soap::Locations::MultipleMatchesActionType
#   sortDetail - FedexWebServices::Soap::Locations::LocationSortDetail
#   constraints - FedexWebServices::Soap::Locations::SearchLocationConstraints
class SearchLocationsRequest
  attr_accessor :webAuthenticationDetail
  attr_accessor :clientDetail
  attr_accessor :transactionDetail
  attr_accessor :version
  attr_accessor :effectiveDate
  attr_accessor :locationsSearchCriterion
  attr_accessor :shipperAccountNumber
  attr_accessor :uniqueTrackingNumber
  attr_accessor :address
  attr_accessor :phoneNumber
  attr_accessor :geographicCoordinates
  attr_accessor :multipleMatchesAction
  attr_accessor :sortDetail
  attr_accessor :constraints

  def initialize(webAuthenticationDetail = nil, clientDetail = nil, transactionDetail = nil, version = nil, effectiveDate = nil, locationsSearchCriterion = nil, shipperAccountNumber = nil, uniqueTrackingNumber = nil, address = nil, phoneNumber = nil, geographicCoordinates = nil, multipleMatchesAction = nil, sortDetail = nil, constraints = nil)
    @webAuthenticationDetail = webAuthenticationDetail
    @clientDetail = clientDetail
    @transactionDetail = transactionDetail
    @version = version
    @effectiveDate = effectiveDate
    @locationsSearchCriterion = locationsSearchCriterion
    @shipperAccountNumber = shipperAccountNumber
    @uniqueTrackingNumber = uniqueTrackingNumber
    @address = address
    @phoneNumber = phoneNumber
    @geographicCoordinates = geographicCoordinates
    @multipleMatchesAction = multipleMatchesAction
    @sortDetail = sortDetail
    @constraints = constraints
  end
end

# {http://fedex.com/ws/locs/v12}ShippingHoliday
#   holiday - FedexWebServices::Soap::Locations::Holiday
#   unavailableActions - FedexWebServices::Soap::Locations::ShippingActionType
class ShippingHoliday
  attr_accessor :holiday
  attr_accessor :unavailableActions

  def initialize(holiday = nil, unavailableActions = [])
    @holiday = holiday
    @unavailableActions = unavailableActions
  end
end

# {http://fedex.com/ws/locs/v12}TimeRange
#   begins - SOAP::SOAPTime
#   ends - SOAP::SOAPTime
class TimeRange
  attr_accessor :begins
  attr_accessor :ends

  def initialize(begins = nil, ends = nil)
    @begins = begins
    @ends = ends
  end
end

# {http://fedex.com/ws/locs/v12}TransactionDetail
#   customerTransactionId - SOAP::SOAPString
#   localization - FedexWebServices::Soap::Locations::Localization
class TransactionDetail
  attr_accessor :customerTransactionId
  attr_accessor :localization

  def initialize(customerTransactionId = nil, localization = nil)
    @customerTransactionId = customerTransactionId
    @localization = localization
  end
end

# {http://fedex.com/ws/locs/v12}UniqueTrackingNumber
#   trackingNumber - SOAP::SOAPString
#   trackingNumberUniqueIdentifier - SOAP::SOAPString
#   shipDate - SOAP::SOAPDate
class UniqueTrackingNumber
  attr_accessor :trackingNumber
  attr_accessor :trackingNumberUniqueIdentifier
  attr_accessor :shipDate

  def initialize(trackingNumber = nil, trackingNumberUniqueIdentifier = nil, shipDate = nil)
    @trackingNumber = trackingNumber
    @trackingNumberUniqueIdentifier = trackingNumberUniqueIdentifier
    @shipDate = shipDate
  end
end

# {http://fedex.com/ws/locs/v12}Weight
#   units - FedexWebServices::Soap::Locations::WeightUnits
#   value - SOAP::SOAPDecimal
class Weight
  attr_accessor :units
  attr_accessor :value

  def initialize(units = nil, value = nil)
    @units = units
    @value = value
  end
end

# {http://fedex.com/ws/locs/v12}WebAuthenticationDetail
#   parentCredential - FedexWebServices::Soap::Locations::WebAuthenticationCredential
#   userCredential - FedexWebServices::Soap::Locations::WebAuthenticationCredential
class WebAuthenticationDetail
  attr_accessor :parentCredential
  attr_accessor :userCredential

  def initialize(parentCredential = nil, userCredential = nil)
    @parentCredential = parentCredential
    @userCredential = userCredential
  end
end

# {http://fedex.com/ws/locs/v12}WebAuthenticationCredential
#   key - SOAP::SOAPString
#   password - SOAP::SOAPString
class WebAuthenticationCredential
  attr_accessor :key
  attr_accessor :password

  def initialize(key = nil, password = nil)
    @key = key
    @password = password
  end
end

# {http://fedex.com/ws/locs/v12}VersionId
#   serviceId - SOAP::SOAPString
#   major - SOAP::SOAPInt
#   intermediate - SOAP::SOAPInt
#   minor - SOAP::SOAPInt
class VersionId
  attr_accessor :serviceId
  attr_accessor :major
  attr_accessor :intermediate
  attr_accessor :minor

  def initialize(serviceId = nil, major = nil, intermediate = nil, minor = nil)
    @serviceId = serviceId
    @major = major
    @intermediate = intermediate
    @minor = minor
  end
end

# {http://fedex.com/ws/locs/v12}CarrierCodeType
class CarrierCodeType < ::String
  FDXC = new("FDXC")
  FDXE = new("FDXE")
  FDXG = new("FDXG")
  FDXO = new("FDXO")
  FXCC = new("FXCC")
  FXFR = new("FXFR")
  FXSP = new("FXSP")
end

# {http://fedex.com/ws/locs/v12}ConsolidationType
class ConsolidationType < ::String
  INTERNATIONAL_DISTRIBUTION_FREIGHT = new("INTERNATIONAL_DISTRIBUTION_FREIGHT")
  INTERNATIONAL_ECONOMY_DISTRIBUTION = new("INTERNATIONAL_ECONOMY_DISTRIBUTION")
  INTERNATIONAL_GROUND_DISTRIBUTION = new("INTERNATIONAL_GROUND_DISTRIBUTION")
  INTERNATIONAL_PRIORITY_DISTRIBUTION = new("INTERNATIONAL_PRIORITY_DISTRIBUTION")
  TRANSBORDER_DISTRIBUTION = new("TRANSBORDER_DISTRIBUTION")
end

# {http://fedex.com/ws/locs/v12}CountryRelationshipType
class CountryRelationshipType < ::String
  DOMESTIC = new("DOMESTIC")
  INTERNATIONAL = new("INTERNATIONAL")
end

# {http://fedex.com/ws/locs/v12}DayOfWeekType
class DayOfWeekType < ::String
  FRI = new("FRI")
  MON = new("MON")
  SAT = new("SAT")
  SUN = new("SUN")
  THU = new("THU")
  TUE = new("TUE")
  WED = new("WED")
end

# {http://fedex.com/ws/locs/v12}DistanceUnits
class DistanceUnits < ::String
  KM = new("KM")
  MI = new("MI")
end

# {http://fedex.com/ws/locs/v12}DistributionClearanceType
class DistributionClearanceType < ::String
  DESTINATION_COUNTRY_CLEARANCE = new("DESTINATION_COUNTRY_CLEARANCE")
  SINGLE_POINT_OF_CLEARANCE = new("SINGLE_POINT_OF_CLEARANCE")
end

# {http://fedex.com/ws/locs/v12}ExpressRegionCode
class ExpressRegionCode < ::String
  APAC = new("APAC")
  CA = new("CA")
  EMEA = new("EMEA")
  LAC = new("LAC")
  US = new("US")
end

# {http://fedex.com/ws/locs/v12}FedExLocationType
class FedExLocationType < ::String
  FEDEX_AUTHORIZED_SHIP_CENTER = new("FEDEX_AUTHORIZED_SHIP_CENTER")
  FEDEX_EXPRESS_STATION = new("FEDEX_EXPRESS_STATION")
  FEDEX_FACILITY = new("FEDEX_FACILITY")
  FEDEX_FREIGHT_SERVICE_CENTER = new("FEDEX_FREIGHT_SERVICE_CENTER")
  FEDEX_GROUND_TERMINAL = new("FEDEX_GROUND_TERMINAL")
  FEDEX_HOME_DELIVERY_STATION = new("FEDEX_HOME_DELIVERY_STATION")
  FEDEX_OFFICE = new("FEDEX_OFFICE")
  FEDEX_ONSITE = new("FEDEX_ONSITE")
  FEDEX_SELF_SERVICE_LOCATION = new("FEDEX_SELF_SERVICE_LOCATION")
  FEDEX_SHIPSITE = new("FEDEX_SHIPSITE")
  FEDEX_SHIP_AND_GET = new("FEDEX_SHIP_AND_GET")
  FEDEX_SMART_POST_HUB = new("FEDEX_SMART_POST_HUB")
end

# {http://fedex.com/ws/locs/v12}LatestDropOffOverlayType
class LatestDropOffOverlayType < ::String
  US_WEST_COAST = new("US_WEST_COAST")
end

# {http://fedex.com/ws/locs/v12}LinearUnits
class LinearUnits < ::String
  CM = new("CM")
  IN = new("IN")
end

# {http://fedex.com/ws/locs/v12}LocationAccessibilityType
class LocationAccessibilityType < ::String
  INSIDE = new("INSIDE")
  OUTSIDE = new("OUTSIDE")
end

# {http://fedex.com/ws/locs/v12}LocationAttributesForInternalFedexUseType
class LocationAttributesForInternalFedexUseType < ::String
  FAMIS_LOCATION = new("FAMIS_LOCATION")
end

# {http://fedex.com/ws/locs/v12}LocationAttributesType
class LocationAttributesType < ::String
  ACCEPTS_CASH = new("ACCEPTS_CASH")
  ALREADY_OPEN = new("ALREADY_OPEN")
  CLEARANCE_SERVICES = new("CLEARANCE_SERVICES")
  COPY_AND_PRINT_SERVICES = new("COPY_AND_PRINT_SERVICES")
  DANGEROUS_GOODS_SERVICES = new("DANGEROUS_GOODS_SERVICES")
  DIRECT_MAIL_SERVICES = new("DIRECT_MAIL_SERVICES")
  DOMESTIC_SHIPPING_SERVICES = new("DOMESTIC_SHIPPING_SERVICES")
  DROP_BOX = new("DROP_BOX")
  INTERNATIONAL_SHIPPING_SERVICES = new("INTERNATIONAL_SHIPPING_SERVICES")
  LOCATION_IS_IN_AIRPORT = new("LOCATION_IS_IN_AIRPORT")
  NOTARY_SERVICES = new("NOTARY_SERVICES")
  OBSERVES_DAY_LIGHT_SAVING_TIMES = new("OBSERVES_DAY_LIGHT_SAVING_TIMES")
  OPEN_TWENTY_FOUR_HOURS = new("OPEN_TWENTY_FOUR_HOURS")
  PACKAGING_SUPPLIES = new("PACKAGING_SUPPLIES")
  PACK_AND_SHIP = new("PACK_AND_SHIP")
  PASSPORT_PHOTO_SERVICES = new("PASSPORT_PHOTO_SERVICES")
  RETURNS_SERVICES = new("RETURNS_SERVICES")
  SIGNS_AND_BANNERS_SERVICE = new("SIGNS_AND_BANNERS_SERVICE")
  SONY_PICTURE_STATION = new("SONY_PICTURE_STATION")
end

# {http://fedex.com/ws/locs/v12}LocationContentOptionType
class LocationContentOptionType < ::String
  HOLIDAYS = new("HOLIDAYS")
  LOCATION_DROPOFF_TIMES = new("LOCATION_DROPOFF_TIMES")
  MAP_URL = new("MAP_URL")
  TIMEZONE_OFFSET = new("TIMEZONE_OFFSET")
end

# {http://fedex.com/ws/locs/v12}LocationSearchFilterType
class LocationSearchFilterType < ::String
  EXCLUDE_LOCATIONS_OUTSIDE_COUNTRY = new("EXCLUDE_LOCATIONS_OUTSIDE_COUNTRY")
  EXCLUDE_LOCATIONS_OUTSIDE_STATE_OR_PROVINCE = new("EXCLUDE_LOCATIONS_OUTSIDE_STATE_OR_PROVINCE")
  EXCLUDE_UNAVAILABLE_LOCATIONS = new("EXCLUDE_UNAVAILABLE_LOCATIONS")
end

# {http://fedex.com/ws/locs/v12}LocationSortCriteriaType
class LocationSortCriteriaType < ::String
  DISTANCE = new("DISTANCE")
  LATEST_EXPRESS_DROPOFF_TIME = new("LATEST_EXPRESS_DROPOFF_TIME")
  LATEST_GROUND_DROPOFF_TIME = new("LATEST_GROUND_DROPOFF_TIME")
  LOCATION_TYPE = new("LOCATION_TYPE")
end

# {http://fedex.com/ws/locs/v12}LocationSortOrderType
class LocationSortOrderType < ::String
  HIGHEST_TO_LOWEST = new("HIGHEST_TO_LOWEST")
  LOWEST_TO_HIGHEST = new("LOWEST_TO_HIGHEST")
end

# {http://fedex.com/ws/locs/v12}LocationTransferOfPossessionType
class LocationTransferOfPossessionType < ::String
  DROPOFF = new("DROPOFF")
  HOLD_AT_LOCATION = new("HOLD_AT_LOCATION")
  REDIRECT_TO_HOLD_AT_LOCATION = new("REDIRECT_TO_HOLD_AT_LOCATION")
end

# {http://fedex.com/ws/locs/v12}LocationsSearchCriteriaType
class LocationsSearchCriteriaType < ::String
  ADDRESS = new("ADDRESS")
  GEOGRAPHIC_COORDINATES = new("GEOGRAPHIC_COORDINATES")
  PHONE_NUMBER = new("PHONE_NUMBER")
end

# {http://fedex.com/ws/locs/v12}MultipleMatchesActionType
class MultipleMatchesActionType < ::String
  RETURN_ALL = new("RETURN_ALL")
  RETURN_ERROR = new("RETURN_ERROR")
  RETURN_FIRST = new("RETURN_FIRST")
end

# {http://fedex.com/ws/locs/v12}NotificationSeverityType
class NotificationSeverityType < ::String
  ERROR = new("ERROR")
  FAILURE = new("FAILURE")
  NOTE = new("NOTE")
  SUCCESS = new("SUCCESS")
  WARNING = new("WARNING")
end

# {http://fedex.com/ws/locs/v12}OperationalHoursType
class OperationalHoursType < ::String
  CLOSED_ALL_DAY = new("CLOSED_ALL_DAY")
  OPEN_ALL_DAY = new("OPEN_ALL_DAY")
  OPEN_BY_HOURS = new("OPEN_BY_HOURS")
end

# {http://fedex.com/ws/locs/v12}ReservationAttributesType
class ReservationAttributesType < ::String
  RESERVATION_AVAILABLE = new("RESERVATION_AVAILABLE")
end

# {http://fedex.com/ws/locs/v12}ServiceCategoryType
class ServiceCategoryType < ::String
  EXPRESS_FREIGHT = new("EXPRESS_FREIGHT")
  EXPRESS_PARCEL = new("EXPRESS_PARCEL")
  GROUND_HOME_DELIVERY = new("GROUND_HOME_DELIVERY")
end

# {http://fedex.com/ws/locs/v12}ShippingActionType
class ShippingActionType < ::String
  DELIVERIES = new("DELIVERIES")
  PICKUPS = new("PICKUPS")
end

# {http://fedex.com/ws/locs/v12}SupportedRedirectToHoldServiceType
class SupportedRedirectToHoldServiceType < ::String
  FEDEX_EXPRESS = new("FEDEX_EXPRESS")
  FEDEX_GROUND = new("FEDEX_GROUND")
  FEDEX_GROUND_HOME_DELIVERY = new("FEDEX_GROUND_HOME_DELIVERY")
end

# {http://fedex.com/ws/locs/v12}WeightUnits
class WeightUnits < ::String
  KG = new("KG")
  LB = new("LB")
end


end; end; end
