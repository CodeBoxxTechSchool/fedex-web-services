# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.4)
require_relative 'ASYNCServiceDefinitions.rb'
require 'soap/mapping'

module FedexWebServices; module Soap; module ASYNC

module ASYNCServiceDefinitionsMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsV4 = "http://fedex.com/ws/async/v4"

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ArtifactPart,
    :schema_type => XSD::QName.new(NsV4, "ArtifactPart"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV4, "SequenceNumber")], [0, 1]],
      ["contents", ["SOAP::SOAPBase64", XSD::QName.new(NsV4, "Contents")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ArtifactRetrievalFilter,
    :schema_type => XSD::QName.new(NsV4, "ArtifactRetrievalFilter"),
    :schema_element => [
      ["accessReference", ["SOAP::SOAPString", XSD::QName.new(NsV4, "AccessReference")], [0, 1]],
      ["type", ["FedexWebServices::Soap::ASYNC::ArtifactType", XSD::QName.new(NsV4, "Type")], [0, 1]],
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ReferenceId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ClientDetail,
    :schema_type => XSD::QName.new(NsV4, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "MeterNumber")]],
      ["meterInstance", ["SOAP::SOAPString", XSD::QName.new(NsV4, "MeterInstance")], [0, 1]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "IntegratorId")], [0, 1]],
      ["region", ["FedexWebServices::Soap::ASYNC::ExpressRegionCode", XSD::QName.new(NsV4, "Region")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::ASYNC::Localization", XSD::QName.new(NsV4, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::Localization,
    :schema_type => XSD::QName.new(NsV4, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LocaleCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::Notification,
    :schema_type => XSD::QName.new(NsV4, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::ASYNC::NotificationSeverityType", XSD::QName.new(NsV4, "Severity")], [0, 1]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Source")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::ASYNC::NotificationParameter[]", XSD::QName.new(NsV4, "MessageParameters")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::NotificationParameter,
    :schema_type => XSD::QName.new(NsV4, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::RetrieveJobResultsReply,
    :schema_type => XSD::QName.new(NsV4, "RetrieveJobResultsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::ASYNC::NotificationSeverityType", XSD::QName.new(NsV4, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::ASYNC::Notification[]", XSD::QName.new(NsV4, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::ASYNC::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::ASYNC::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["artifacts", ["FedexWebServices::Soap::ASYNC::RetrievedArtifact[]", XSD::QName.new(NsV4, "Artifacts")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::RetrieveJobResultsRequest,
    :schema_type => XSD::QName.new(NsV4, "RetrieveJobResultsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::ASYNC::WebAuthenticationDetail", XSD::QName.new(NsV4, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::ASYNC::ClientDetail", XSD::QName.new(NsV4, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::ASYNC::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::ASYNC::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["jobId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "JobId")], [0, 1]],
      ["filters", ["FedexWebServices::Soap::ASYNC::ArtifactRetrievalFilter[]", XSD::QName.new(NsV4, "Filters")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::RetrievedArtifact,
    :schema_type => XSD::QName.new(NsV4, "RetrievedArtifact"),
    :schema_element => [
      ["accessReference", ["SOAP::SOAPString", XSD::QName.new(NsV4, "AccessReference")], [0, 1]],
      ["highestSeverity", ["FedexWebServices::Soap::ASYNC::NotificationSeverityType", XSD::QName.new(NsV4, "HighestSeverity")], [0, 1]],
      ["notifications", ["FedexWebServices::Soap::ASYNC::Notification[]", XSD::QName.new(NsV4, "Notifications")], [0, nil]],
      ["type", ["FedexWebServices::Soap::ASYNC::ArtifactType", XSD::QName.new(NsV4, "Type")], [0, 1]],
      ["format", ["FedexWebServices::Soap::ASYNC::ArtifactFormatType", XSD::QName.new(NsV4, "Format")], [0, 1]],
      ["formatSpecification", ["SOAP::SOAPString", XSD::QName.new(NsV4, "FormatSpecification")], [0, 1]],
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ReferenceId")], [0, 1]],
      ["parts", ["FedexWebServices::Soap::ASYNC::ArtifactPart[]", XSD::QName.new(NsV4, "Parts")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::TransactionDetail,
    :schema_type => XSD::QName.new(NsV4, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::ASYNC::Localization", XSD::QName.new(NsV4, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV4, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::ASYNC::WebAuthenticationCredential", XSD::QName.new(NsV4, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::ASYNC::WebAuthenticationCredential", XSD::QName.new(NsV4, "UserCredential")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV4, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Password")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::VersionId,
    :schema_type => XSD::QName.new(NsV4, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Minor")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ArtifactFormatType,
    :schema_type => XSD::QName.new(NsV4, "ArtifactFormatType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ArtifactType,
    :schema_type => XSD::QName.new(NsV4, "ArtifactType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ExpressRegionCode,
    :schema_type => XSD::QName.new(NsV4, "ExpressRegionCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV4, "NotificationSeverityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ArtifactPart,
    :schema_type => XSD::QName.new(NsV4, "ArtifactPart"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV4, "SequenceNumber")], [0, 1]],
      ["contents", ["SOAP::SOAPBase64", XSD::QName.new(NsV4, "Contents")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ArtifactRetrievalFilter,
    :schema_type => XSD::QName.new(NsV4, "ArtifactRetrievalFilter"),
    :schema_element => [
      ["accessReference", ["SOAP::SOAPString", XSD::QName.new(NsV4, "AccessReference")], [0, 1]],
      ["type", ["FedexWebServices::Soap::ASYNC::ArtifactType", XSD::QName.new(NsV4, "Type")], [0, 1]],
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ReferenceId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ClientDetail,
    :schema_type => XSD::QName.new(NsV4, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV4, "MeterNumber")]],
      ["meterInstance", ["SOAP::SOAPString", XSD::QName.new(NsV4, "MeterInstance")], [0, 1]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "IntegratorId")], [0, 1]],
      ["region", ["FedexWebServices::Soap::ASYNC::ExpressRegionCode", XSD::QName.new(NsV4, "Region")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::ASYNC::Localization", XSD::QName.new(NsV4, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::Localization,
    :schema_type => XSD::QName.new(NsV4, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LocaleCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::Notification,
    :schema_type => XSD::QName.new(NsV4, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::ASYNC::NotificationSeverityType", XSD::QName.new(NsV4, "Severity")], [0, 1]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Source")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV4, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::ASYNC::NotificationParameter[]", XSD::QName.new(NsV4, "MessageParameters")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::NotificationParameter,
    :schema_type => XSD::QName.new(NsV4, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::RetrieveJobResultsReply,
    :schema_type => XSD::QName.new(NsV4, "RetrieveJobResultsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::ASYNC::NotificationSeverityType", XSD::QName.new(NsV4, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::ASYNC::Notification[]", XSD::QName.new(NsV4, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::ASYNC::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::ASYNC::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["artifacts", ["FedexWebServices::Soap::ASYNC::RetrievedArtifact[]", XSD::QName.new(NsV4, "Artifacts")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::RetrieveJobResultsRequest,
    :schema_type => XSD::QName.new(NsV4, "RetrieveJobResultsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::ASYNC::WebAuthenticationDetail", XSD::QName.new(NsV4, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::ASYNC::ClientDetail", XSD::QName.new(NsV4, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::ASYNC::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::ASYNC::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["jobId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "JobId")], [0, 1]],
      ["filters", ["FedexWebServices::Soap::ASYNC::ArtifactRetrievalFilter[]", XSD::QName.new(NsV4, "Filters")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::RetrievedArtifact,
    :schema_type => XSD::QName.new(NsV4, "RetrievedArtifact"),
    :schema_element => [
      ["accessReference", ["SOAP::SOAPString", XSD::QName.new(NsV4, "AccessReference")], [0, 1]],
      ["highestSeverity", ["FedexWebServices::Soap::ASYNC::NotificationSeverityType", XSD::QName.new(NsV4, "HighestSeverity")], [0, 1]],
      ["notifications", ["FedexWebServices::Soap::ASYNC::Notification[]", XSD::QName.new(NsV4, "Notifications")], [0, nil]],
      ["type", ["FedexWebServices::Soap::ASYNC::ArtifactType", XSD::QName.new(NsV4, "Type")], [0, 1]],
      ["format", ["FedexWebServices::Soap::ASYNC::ArtifactFormatType", XSD::QName.new(NsV4, "Format")], [0, 1]],
      ["formatSpecification", ["SOAP::SOAPString", XSD::QName.new(NsV4, "FormatSpecification")], [0, 1]],
      ["referenceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ReferenceId")], [0, 1]],
      ["parts", ["FedexWebServices::Soap::ASYNC::ArtifactPart[]", XSD::QName.new(NsV4, "Parts")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::TransactionDetail,
    :schema_type => XSD::QName.new(NsV4, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::ASYNC::Localization", XSD::QName.new(NsV4, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV4, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::ASYNC::WebAuthenticationCredential", XSD::QName.new(NsV4, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::ASYNC::WebAuthenticationCredential", XSD::QName.new(NsV4, "UserCredential")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV4, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV4, "Password")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::VersionId,
    :schema_type => XSD::QName.new(NsV4, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV4, "Minor")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ArtifactFormatType,
    :schema_type => XSD::QName.new(NsV4, "ArtifactFormatType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ArtifactType,
    :schema_type => XSD::QName.new(NsV4, "ArtifactType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::ExpressRegionCode,
    :schema_type => XSD::QName.new(NsV4, "ExpressRegionCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV4, "NotificationSeverityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::RetrieveJobResultsReply,
    :schema_name => XSD::QName.new(NsV4, "RetrieveJobResultsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::ASYNC::NotificationSeverityType", XSD::QName.new(NsV4, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::ASYNC::Notification[]", XSD::QName.new(NsV4, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::ASYNC::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::ASYNC::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["artifacts", ["FedexWebServices::Soap::ASYNC::RetrievedArtifact[]", XSD::QName.new(NsV4, "Artifacts")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::ASYNC::RetrieveJobResultsRequest,
    :schema_name => XSD::QName.new(NsV4, "RetrieveJobResultsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::ASYNC::WebAuthenticationDetail", XSD::QName.new(NsV4, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::ASYNC::ClientDetail", XSD::QName.new(NsV4, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::ASYNC::TransactionDetail", XSD::QName.new(NsV4, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::ASYNC::VersionId", XSD::QName.new(NsV4, "Version")]],
      ["jobId", ["SOAP::SOAPString", XSD::QName.new(NsV4, "JobId")], [0, 1]],
      ["filters", ["FedexWebServices::Soap::ASYNC::ArtifactRetrievalFilter[]", XSD::QName.new(NsV4, "Filters")], [0, nil]]
    ]
  )
end

end; end; end
