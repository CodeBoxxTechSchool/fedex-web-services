# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.4)
require_relative 'TrackServiceDefinitions.rb'
require 'soap/mapping'

module FedexWebServices; module Soap; module Track

module TrackServiceDefinitionsMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsV19 = "http://fedex.com/ws/track/v19"

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::Address,
    :schema_type => XSD::QName.new(NsV19, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV19, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "Residential")], [0, 1]],
      ["geographicCoordinates", ["SOAP::SOAPString", XSD::QName.new(NsV19, "GeographicCoordinates")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::AppointmentDetail,
    :schema_type => XSD::QName.new(NsV19, "AppointmentDetail"),
    :schema_element => [
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Date")], [0, 1]],
      ["windowDetails", ["FedexWebServices::Soap::Track::AppointmentTimeDetail[]", XSD::QName.new(NsV19, "WindowDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::AppointmentTimeDetail,
    :schema_type => XSD::QName.new(NsV19, "AppointmentTimeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::AppointmentWindowType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["window", ["FedexWebServices::Soap::Track::LocalTimeRange", XSD::QName.new(NsV19, "Window")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::AvailableImagesDetail,
    :schema_type => XSD::QName.new(NsV19, "AvailableImagesDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::AvailableImageType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["size", ["FedexWebServices::Soap::Track::ImageSizeType", XSD::QName.new(NsV19, "Size")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ClientDetail,
    :schema_type => XSD::QName.new(NsV19, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "MeterNumber")]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "IntegratorId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Track::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::Commodity,
    :schema_type => XSD::QName.new(NsV19, "Commodity"),
    :schema_element => [
      ["commodityId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CommodityId")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]],
      ["numberOfPieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "NumberOfPieces")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::Track::CommodityPurposeType", XSD::QName.new(NsV19, "Purpose")], [0, 1]],
      ["countryOfManufacture", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryOfManufacture")], [0, 1]],
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HarmonizedCode")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Track::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]],
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["quantityUnits", ["SOAP::SOAPString", XSD::QName.new(NsV19, "QuantityUnits")], [0, 1]],
      ["additionalMeasures", ["FedexWebServices::Soap::Track::Measure[]", XSD::QName.new(NsV19, "AdditionalMeasures")], [0, nil]],
      ["unitPrice", ["FedexWebServices::Soap::Track::Money", XSD::QName.new(NsV19, "UnitPrice")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::Track::Money", XSD::QName.new(NsV19, "CustomsValue")], [0, 1]],
      ["exciseConditions", ["FedexWebServices::Soap::Track::EdtExciseCondition[]", XSD::QName.new(NsV19, "ExciseConditions")], [0, nil]],
      ["exportLicenseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ExportLicenseNumber")], [0, 1]],
      ["exportLicenseExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ExportLicenseExpirationDate")], [0, 1]],
      ["cIMarksAndNumbers", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CIMarksAndNumbers")], [0, 1]],
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PartNumber")], [0, 1]],
      ["naftaDetail", ["FedexWebServices::Soap::Track::NaftaCommodityDetail", XSD::QName.new(NsV19, "NaftaDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::CompletedTrackDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedTrackDetail"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")], [0, 1]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [0, nil]],
      ["duplicateWaybill", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "DuplicateWaybill")], [0, 1]],
      ["moreData", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "MoreData")], [0, 1]],
      ["pagingToken", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagingToken")], [0, 1]],
      ["trackDetailsCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TrackDetailsCount")], [0, 1]],
      ["trackDetails", ["FedexWebServices::Soap::Track::TrackDetail[]", XSD::QName.new(NsV19, "TrackDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::Contact,
    :schema_type => XSD::QName.new(NsV19, "Contact"),
    :schema_element => [
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EMailAddress")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ContactAndAddress,
    :schema_type => XSD::QName.new(NsV19, "ContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::Track::Contact", XSD::QName.new(NsV19, "Contact")]],
      ["address", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "Address")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ContentRecord,
    :schema_type => XSD::QName.new(NsV19, "ContentRecord"),
    :schema_element => [
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PartNumber")], [0, 1]],
      ["itemNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ItemNumber")], [0, 1]],
      ["receivedQuantity", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "ReceivedQuantity")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::CustomerExceptionRequestDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomerExceptionRequestDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["statusCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusCode")], [0, 1]],
      ["statusDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusDescription")], [0, 1]],
      ["createTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "CreateTime")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::CustomsOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomsOptionDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::CustomsOptionType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::DateRange,
    :schema_type => XSD::QName.new(NsV19, "DateRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Ends")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::DeliveryOptionEligibilityDetail,
    :schema_type => XSD::QName.new(NsV19, "DeliveryOptionEligibilityDetail"),
    :schema_element => [
      ["option", ["FedexWebServices::Soap::Track::DeliveryOptionType", XSD::QName.new(NsV19, "Option")], [0, 1]],
      ["eligibility", ["FedexWebServices::Soap::Track::EligibilityType", XSD::QName.new(NsV19, "Eligibility")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::Dimensions,
    :schema_type => XSD::QName.new(NsV19, "Dimensions"),
    :schema_element => [
      ["length", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Length")], [0, 1]],
      ["width", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Width")], [0, 1]],
      ["height", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Height")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Track::LinearUnits", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::Distance,
    :schema_type => XSD::QName.new(NsV19, "Distance"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Track::DistanceUnits", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::DocumentPart,
    :schema_type => XSD::QName.new(NsV19, "DocumentPart"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "SequenceNumber")], [0, 1]],
      ["content", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Content")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::EMailDetail,
    :schema_type => XSD::QName.new(NsV19, "EMailDetail"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EmailAddress")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::EdtExciseCondition,
    :schema_type => XSD::QName.new(NsV19, "EdtExciseCondition"),
    :schema_element => [
      ["category", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Category")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::FaxDetail,
    :schema_type => XSD::QName.new(NsV19, "FaxDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::GetTrackingDocumentsReply,
    :schema_type => XSD::QName.new(NsV19, "GetTrackingDocumentsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["documents", ["FedexWebServices::Soap::Track::TrackingDocument[]", XSD::QName.new(NsV19, "Documents")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::GetTrackingDocumentsRequest,
    :schema_type => XSD::QName.new(NsV19, "GetTrackingDocumentsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Track::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Track::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["selectionDetails", ["FedexWebServices::Soap::Track::TrackSelectionDetail[]", XSD::QName.new(NsV19, "SelectionDetails")], [0, nil]],
      ["trackingDocumentSpecification", ["FedexWebServices::Soap::Track::TrackingDocumentSpecification", XSD::QName.new(NsV19, "TrackingDocumentSpecification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::LocalTimeRange,
    :schema_type => XSD::QName.new(NsV19, "LocalTimeRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Ends")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::Localization,
    :schema_type => XSD::QName.new(NsV19, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocaleCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::Measure,
    :schema_type => XSD::QName.new(NsV19, "Measure"),
    :schema_element => [
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::Money,
    :schema_type => XSD::QName.new(NsV19, "Money"),
    :schema_element => [
      ["currency", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Currency")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::NaftaCommodityDetail,
    :schema_type => XSD::QName.new(NsV19, "NaftaCommodityDetail"),
    :schema_element => [
      ["preferenceCriterion", ["FedexWebServices::Soap::Track::NaftaPreferenceCriterionCode", XSD::QName.new(NsV19, "PreferenceCriterion")], [0, 1]],
      ["producerDetermination", ["FedexWebServices::Soap::Track::NaftaProducerDeterminationCode", XSD::QName.new(NsV19, "ProducerDetermination")], [0, 1]],
      ["producerId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ProducerId")], [0, 1]],
      ["netCostMethod", ["FedexWebServices::Soap::Track::NaftaNetCostMethodCode", XSD::QName.new(NsV19, "NetCostMethod")], [0, 1]],
      ["netCostDateRange", ["FedexWebServices::Soap::Track::DateRange", XSD::QName.new(NsV19, "NetCostDateRange")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::Notification,
    :schema_type => XSD::QName.new(NsV19, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "Severity")]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Source")]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::Track::NotificationParameter[]", XSD::QName.new(NsV19, "MessageParameters")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationDetail,
    :schema_type => XSD::QName.new(NsV19, "NotificationDetail"),
    :schema_element => [
      ["notificationType", ["FedexWebServices::Soap::Track::NotificationType", XSD::QName.new(NsV19, "NotificationType")], [0, 1]],
      ["emailDetail", ["FedexWebServices::Soap::Track::EMailDetail", XSD::QName.new(NsV19, "EmailDetail")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Track::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationParameter,
    :schema_type => XSD::QName.new(NsV19, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::PagingDetail,
    :schema_type => XSD::QName.new(NsV19, "PagingDetail"),
    :schema_element => [
      ["pagingToken", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagingToken")], [0, 1]],
      ["numberOfResultsPerPage", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "NumberOfResultsPerPage")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::PieceCountVerificationDetail,
    :schema_type => XSD::QName.new(NsV19, "PieceCountVerificationDetail"),
    :schema_element => [
      ["countLocationType", ["FedexWebServices::Soap::Track::PieceCountLocationType", XSD::QName.new(NsV19, "CountLocationType")], [0, 1]],
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Count")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::SendNotificationsReply,
    :schema_type => XSD::QName.new(NsV19, "SendNotificationsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["duplicateWaybill", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "DuplicateWaybill")], [0, 1]],
      ["moreDataAvailable", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "MoreDataAvailable")], [0, 1]],
      ["pagingToken", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagingToken")], [0, 1]],
      ["packages", ["FedexWebServices::Soap::Track::TrackNotificationPackage[]", XSD::QName.new(NsV19, "Packages")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::SendNotificationsRequest,
    :schema_type => XSD::QName.new(NsV19, "SendNotificationsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Track::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Track::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")]],
      ["multiPiece", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "MultiPiece")], [0, 1]],
      ["pagingToken", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagingToken")], [0, 1]],
      ["trackingNumberUniqueId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueId")], [0, 1]],
      ["shipDateRangeBegin", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDateRangeBegin")], [0, 1]],
      ["shipDateRangeEnd", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDateRangeEnd")], [0, 1]],
      ["senderEMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SenderEMailAddress")], [0, 1]],
      ["senderContactName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SenderContactName")]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::Track::ShipmentEventNotificationDetail", XSD::QName.new(NsV19, "EventNotificationDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ShipmentEventNotificationDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentEventNotificationDetail"),
    :schema_element => [
      ["aggregationType", ["FedexWebServices::Soap::Track::ShipmentNotificationAggregationType", XSD::QName.new(NsV19, "AggregationType")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PersonalMessage")], [0, 1]],
      ["eventNotifications", ["FedexWebServices::Soap::Track::ShipmentEventNotificationSpecification[]", XSD::QName.new(NsV19, "EventNotifications")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ShipmentEventNotificationSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShipmentEventNotificationSpecification"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::Track::ShipmentNotificationRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["events", ["FedexWebServices::Soap::Track::NotificationEventType[]", XSD::QName.new(NsV19, "Events")], [0, nil]],
      ["notificationDetail", ["FedexWebServices::Soap::Track::NotificationDetail", XSD::QName.new(NsV19, "NotificationDetail")], [0, 1]],
      ["formatSpecification", ["FedexWebServices::Soap::Track::ShipmentNotificationFormatSpecification", XSD::QName.new(NsV19, "FormatSpecification")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ShipmentNotificationFormatSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationFormatSpecification"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::NotificationFormatType", XSD::QName.new(NsV19, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::SignatureImageDetail,
    :schema_type => XSD::QName.new(NsV19, "SignatureImageDetail"),
    :schema_element => [
      ["image", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Image")], [0, 1]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::SpecialInstructionStatusDetail,
    :schema_type => XSD::QName.new(NsV19, "SpecialInstructionStatusDetail"),
    :schema_element => [
      ["status", ["FedexWebServices::Soap::Track::SpecialInstructionsStatusCode", XSD::QName.new(NsV19, "Status")], [0, 1]],
      ["statusCreateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "StatusCreateTime")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::StringBarcode,
    :schema_type => XSD::QName.new(NsV19, "StringBarcode"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::StringBarcodeType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackAdvanceNotificationDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackAdvanceNotificationDetail"),
    :schema_element => [
      ["estimatedTimeOfArrival", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "EstimatedTimeOfArrival")], [0, 1]],
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Reason")], [0, 1]],
      ["status", ["FedexWebServices::Soap::Track::TrackAdvanceNotificationStatusType", XSD::QName.new(NsV19, "Status")], [0, 1]],
      ["statusDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusDescription")], [0, 1]],
      ["statusTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "StatusTime")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackChargeDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackChargeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::TrackChargeDetailType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["chargeAmount", ["FedexWebServices::Soap::Track::Money", XSD::QName.new(NsV19, "ChargeAmount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackDetail"),
    :schema_element => [
      ["notification", ["FedexWebServices::Soap::Track::Notification", XSD::QName.new(NsV19, "Notification")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")], [0, 1]],
      ["barcode", ["FedexWebServices::Soap::Track::StringBarcode", XSD::QName.new(NsV19, "Barcode")], [0, 1]],
      ["trackingNumberUniqueIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueIdentifier")], [0, 1]],
      ["statusDetail", ["FedexWebServices::Soap::Track::TrackStatusDetail", XSD::QName.new(NsV19, "StatusDetail")], [0, 1]],
      ["informationNotes", ["FedexWebServices::Soap::Track::TrackInformationNoteDetail[]", XSD::QName.new(NsV19, "InformationNotes")], [0, nil]],
      ["customerExceptionRequests", ["FedexWebServices::Soap::Track::CustomerExceptionRequestDetail[]", XSD::QName.new(NsV19, "CustomerExceptionRequests")], [0, nil]],
      ["reconciliation", ["FedexWebServices::Soap::Track::TrackReconciliation", XSD::QName.new(NsV19, "Reconciliation")], [0, 1]],
      ["serviceCommitMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceCommitMessage")], [0, 1]],
      ["destinationServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationServiceArea")], [0, 1]],
      ["destinationServiceAreaDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationServiceAreaDescription")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Track::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["operatingCompany", ["FedexWebServices::Soap::Track::OperatingCompanyType", XSD::QName.new(NsV19, "OperatingCompany")], [0, 1]],
      ["operatingCompanyOrCarrierDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OperatingCompanyOrCarrierDescription")], [0, 1]],
      ["cartageAgentCompanyName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CartageAgentCompanyName")], [0, 1]],
      ["productionLocationContactAndAddress", ["FedexWebServices::Soap::Track::ContactAndAddress", XSD::QName.new(NsV19, "ProductionLocationContactAndAddress")], [0, 1]],
      ["otherIdentifiers", ["FedexWebServices::Soap::Track::TrackOtherIdentifierDetail[]", XSD::QName.new(NsV19, "OtherIdentifiers")], [0, nil]],
      ["formId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FormId")], [0, 1]],
      ["service", ["FedexWebServices::Soap::Track::TrackServiceDescriptionDetail", XSD::QName.new(NsV19, "Service")], [0, 1]],
      ["packageWeight", ["FedexWebServices::Soap::Track::Weight", XSD::QName.new(NsV19, "PackageWeight")], [0, 1]],
      ["packageDimensions", ["FedexWebServices::Soap::Track::Dimensions", XSD::QName.new(NsV19, "PackageDimensions")], [0, 1]],
      ["packageDimensionalWeight", ["FedexWebServices::Soap::Track::Weight", XSD::QName.new(NsV19, "PackageDimensionalWeight")], [0, 1]],
      ["shipmentWeight", ["FedexWebServices::Soap::Track::Weight", XSD::QName.new(NsV19, "ShipmentWeight")], [0, 1]],
      ["packaging", ["FedexWebServices::Soap::Track::TrackPackagingDescriptionDetail", XSD::QName.new(NsV19, "Packaging")], [0, 1]],
      ["physicalPackagingType", ["FedexWebServices::Soap::Track::PhysicalPackagingType", XSD::QName.new(NsV19, "PhysicalPackagingType")], [0, 1]],
      ["packageSequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PackageSequenceNumber")], [0, 1]],
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PackageCount")], [0, 1]],
      ["shipmentContentPieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "ShipmentContentPieceCount")], [0, 1]],
      ["packageContentPieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PackageContentPieceCount")], [0, 1]],
      ["creatorSoftwareId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CreatorSoftwareId")], [0, 1]],
      ["charges", ["FedexWebServices::Soap::Track::TrackChargeDetail[]", XSD::QName.new(NsV19, "Charges")], [0, nil]],
      ["nickName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "NickName")], [0, 1]],
      ["notes", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Notes")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::Track::TrackDetailAttributeType[]", XSD::QName.new(NsV19, "Attributes")], [0, nil]],
      ["shipmentContents", ["FedexWebServices::Soap::Track::ContentRecord[]", XSD::QName.new(NsV19, "ShipmentContents")], [0, nil]],
      ["packageContents", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "PackageContents")], [0, nil]],
      ["clearanceLocationCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ClearanceLocationCode")], [0, 1]],
      ["clearanceBrokerage", ["FedexWebServices::Soap::Track::ClearanceBrokerageType", XSD::QName.new(NsV19, "ClearanceBrokerage")], [0, 1]],
      ["commodities", ["FedexWebServices::Soap::Track::Commodity[]", XSD::QName.new(NsV19, "Commodities")], [0, nil]],
      ["returnDetail", ["FedexWebServices::Soap::Track::TrackReturnDetail", XSD::QName.new(NsV19, "ReturnDetail")], [0, 1]],
      ["customsOptionDetails", ["FedexWebServices::Soap::Track::CustomsOptionDetail[]", XSD::QName.new(NsV19, "CustomsOptionDetails")], [0, nil]],
      ["advanceNotificationDetail", ["FedexWebServices::Soap::Track::TrackAdvanceNotificationDetail", XSD::QName.new(NsV19, "AdvanceNotificationDetail")], [0, 1]],
      ["specialHandlings", ["FedexWebServices::Soap::Track::TrackSpecialHandling[]", XSD::QName.new(NsV19, "SpecialHandlings")], [0, nil]],
      ["payments", ["FedexWebServices::Soap::Track::TrackPayment[]", XSD::QName.new(NsV19, "Payments")], [0, nil]],
      ["shipper", ["FedexWebServices::Soap::Track::Contact", XSD::QName.new(NsV19, "Shipper")], [0, 1]],
      ["possessionStatus", ["FedexWebServices::Soap::Track::TrackPossessionStatusType", XSD::QName.new(NsV19, "PossessionStatus")], [0, 1]],
      ["shipperAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "ShipperAddress")], [0, 1]],
      ["originLocationAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "OriginLocationAddress")], [0, 1]],
      ["originStationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginStationId")], [0, 1]],
      ["datesOrTimes", ["FedexWebServices::Soap::Track::TrackingDateOrTimestamp[]", XSD::QName.new(NsV19, "DatesOrTimes")], [0, nil]],
      ["totalTransitDistance", ["FedexWebServices::Soap::Track::Distance", XSD::QName.new(NsV19, "TotalTransitDistance")], [0, 1]],
      ["distanceToDestination", ["FedexWebServices::Soap::Track::Distance", XSD::QName.new(NsV19, "DistanceToDestination")], [0, 1]],
      ["specialInstructions", ["FedexWebServices::Soap::Track::TrackSpecialInstruction[]", XSD::QName.new(NsV19, "SpecialInstructions")], [0, nil]],
      ["recipient", ["FedexWebServices::Soap::Track::Contact", XSD::QName.new(NsV19, "Recipient")], [0, 1]],
      ["lastUpdatedDestinationAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "LastUpdatedDestinationAddress")], [0, 1]],
      ["destinationAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "DestinationAddress")], [0, 1]],
      ["holdAtLocationContact", ["FedexWebServices::Soap::Track::Contact", XSD::QName.new(NsV19, "HoldAtLocationContact")], [0, 1]],
      ["holdAtLocationAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "HoldAtLocationAddress")], [0, 1]],
      ["destinationStationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationStationId")], [0, 1]],
      ["destinationLocationAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "DestinationLocationAddress")], [0, 1]],
      ["destinationLocationType", ["FedexWebServices::Soap::Track::FedExLocationType", XSD::QName.new(NsV19, "DestinationLocationType")], [0, 1]],
      ["destinationLocationTimeZoneOffset", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationLocationTimeZoneOffset")], [0, 1]],
      ["actualDeliveryAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "ActualDeliveryAddress")], [0, 1]],
      ["officeOrderDeliveryMethod", ["FedexWebServices::Soap::Track::OfficeOrderDeliveryMethodType", XSD::QName.new(NsV19, "OfficeOrderDeliveryMethod")], [0, 1]],
      ["deliveryLocationType", ["FedexWebServices::Soap::Track::TrackDeliveryLocationType", XSD::QName.new(NsV19, "DeliveryLocationType")], [0, 1]],
      ["deliveryLocationDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeliveryLocationDescription")], [0, 1]],
      ["deliveryAttempts", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "DeliveryAttempts")], [0, 1]],
      ["deliverySignatureName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeliverySignatureName")], [0, 1]],
      ["pieceCountVerificationDetails", ["FedexWebServices::Soap::Track::PieceCountVerificationDetail[]", XSD::QName.new(NsV19, "PieceCountVerificationDetails")], [0, nil]],
      ["totalUniqueAddressCountInConsolidation", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TotalUniqueAddressCountInConsolidation")], [0, 1]],
      ["availableImages", ["FedexWebServices::Soap::Track::AvailableImagesDetail[]", XSD::QName.new(NsV19, "AvailableImages")], [0, nil]],
      ["signature", ["FedexWebServices::Soap::Track::SignatureImageDetail", XSD::QName.new(NsV19, "Signature")], [0, 1]],
      ["notificationEventsAvailable", ["FedexWebServices::Soap::Track::NotificationEventType[]", XSD::QName.new(NsV19, "NotificationEventsAvailable")], [0, nil]],
      ["splitShipmentParts", ["FedexWebServices::Soap::Track::TrackSplitShipmentPart[]", XSD::QName.new(NsV19, "SplitShipmentParts")], [0, nil]],
      ["deliveryOptionEligibilityDetails", ["FedexWebServices::Soap::Track::DeliveryOptionEligibilityDetail[]", XSD::QName.new(NsV19, "DeliveryOptionEligibilityDetails")], [0, nil]],
      ["events", ["FedexWebServices::Soap::Track::TrackEvent[]", XSD::QName.new(NsV19, "Events")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackEvent,
    :schema_type => XSD::QName.new(NsV19, "TrackEvent"),
    :schema_element => [
      ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "Timestamp")], [0, 1]],
      ["eventType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EventType")], [0, 1]],
      ["eventDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EventDescription")], [0, 1]],
      ["statusExceptionCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusExceptionCode")], [0, 1]],
      ["statusExceptionDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusExceptionDescription")], [0, 1]],
      ["barcodeEntryType", ["FedexWebServices::Soap::Track::BarcodeEntryType", XSD::QName.new(NsV19, "BarcodeEntryType")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "Address")], [0, 1]],
      ["stationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StationId")], [0, 1]],
      ["arrivalLocation", ["FedexWebServices::Soap::Track::ArrivalLocationType", XSD::QName.new(NsV19, "ArrivalLocation")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackInformationNoteDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackInformationNoteDetail"),
    :schema_element => [
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackNotificationPackage,
    :schema_type => XSD::QName.new(NsV19, "TrackNotificationPackage"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")], [0, 1]],
      ["trackingNumberUniqueIdentifiers", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueIdentifiers")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Track::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["shipDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDate")], [0, 1]],
      ["destination", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "Destination")], [0, 1]],
      ["recipientDetails", ["FedexWebServices::Soap::Track::TrackNotificationRecipientDetail[]", XSD::QName.new(NsV19, "RecipientDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackNotificationRecipientDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackNotificationRecipientDetail"),
    :schema_element => [
      ["notificationEventsAvailable", ["FedexWebServices::Soap::Track::NotificationEventType[]", XSD::QName.new(NsV19, "NotificationEventsAvailable")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackOtherIdentifierDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackOtherIdentifierDetail"),
    :schema_element => [
      ["packageIdentifier", ["FedexWebServices::Soap::Track::TrackPackageIdentifier", XSD::QName.new(NsV19, "PackageIdentifier")], [0, 1]],
      ["trackingNumberUniqueIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueIdentifier")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Track::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackPackageIdentifier,
    :schema_type => XSD::QName.new(NsV19, "TrackPackageIdentifier"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::TrackIdentifierType", XSD::QName.new(NsV19, "Type")]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackPackagingDescriptionDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackPackagingDescriptionDetail"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackPayment,
    :schema_type => XSD::QName.new(NsV19, "TrackPayment"),
    :schema_element => [
      ["classification", ["FedexWebServices::Soap::Track::TrackChargesPaymentClassificationType", XSD::QName.new(NsV19, "Classification")], [0, 1]],
      ["type", ["FedexWebServices::Soap::Track::TrackPaymentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReconciliation,
    :schema_type => XSD::QName.new(NsV19, "TrackReconciliation"),
    :schema_element => [
      ["status", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Status")]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReply,
    :schema_type => XSD::QName.new(NsV19, "TrackReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["completedTrackDetails", ["FedexWebServices::Soap::Track::CompletedTrackDetail[]", XSD::QName.new(NsV19, "CompletedTrackDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackRequest,
    :schema_type => XSD::QName.new(NsV19, "TrackRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Track::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Track::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["selectionDetails", ["FedexWebServices::Soap::Track::TrackSelectionDetail[]", XSD::QName.new(NsV19, "SelectionDetails")], [0, nil]],
      ["transactionTimeOutValueInMilliseconds", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TransactionTimeOutValueInMilliseconds")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Track::TrackRequestProcessingOptionType[]", XSD::QName.new(NsV19, "ProcessingOptions")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReturnDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackReturnDetail"),
    :schema_element => [
      ["movementStatus", ["FedexWebServices::Soap::Track::TrackReturnMovementStatusType", XSD::QName.new(NsV19, "MovementStatus")], [0, 1]],
      ["labelType", ["FedexWebServices::Soap::Track::TrackReturnLabelType", XSD::QName.new(NsV19, "LabelType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["authorizationName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AuthorizationName")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackSelectionDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackSelectionDetail"),
    :schema_element => [
      ["carrierCode", ["FedexWebServices::Soap::Track::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["operatingCompany", ["FedexWebServices::Soap::Track::OperatingCompanyType", XSD::QName.new(NsV19, "OperatingCompany")], [0, 1]],
      ["packageIdentifier", ["FedexWebServices::Soap::Track::TrackPackageIdentifier", XSD::QName.new(NsV19, "PackageIdentifier")], [0, 1]],
      ["trackingNumberUniqueIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueIdentifier")], [0, 1]],
      ["shipDateRangeBegin", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDateRangeBegin")], [0, 1]],
      ["shipDateRangeEnd", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDateRangeEnd")], [0, 1]],
      ["shipmentAccountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ShipmentAccountNumber")], [0, 1]],
      ["secureSpodAccount", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SecureSpodAccount")], [0, 1]],
      ["destination", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "Destination")], [0, 1]],
      ["pagingDetail", ["FedexWebServices::Soap::Track::PagingDetail", XSD::QName.new(NsV19, "PagingDetail")], [0, 1]],
      ["customerSpecifiedTimeOutValueInMilliseconds", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "CustomerSpecifiedTimeOutValueInMilliseconds")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackServiceDescriptionDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackServiceDescriptionDetail"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["shortDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ShortDescription")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackSpecialHandling,
    :schema_type => XSD::QName.new(NsV19, "TrackSpecialHandling"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["paymentType", ["FedexWebServices::Soap::Track::TrackPaymentType", XSD::QName.new(NsV19, "PaymentType")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackSpecialInstruction,
    :schema_type => XSD::QName.new(NsV19, "TrackSpecialInstruction"),
    :schema_element => [
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["deliveryOption", ["FedexWebServices::Soap::Track::TrackDeliveryOptionType", XSD::QName.new(NsV19, "DeliveryOption")], [0, 1]],
      ["statusDetail", ["FedexWebServices::Soap::Track::SpecialInstructionStatusDetail", XSD::QName.new(NsV19, "StatusDetail")], [0, 1]],
      ["originalEstimatedDeliveryTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "OriginalEstimatedDeliveryTimestamp")], [0, 1]],
      ["originalRequestTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "OriginalRequestTime")], [0, 1]],
      ["requestedAppointmentTime", ["FedexWebServices::Soap::Track::AppointmentDetail", XSD::QName.new(NsV19, "RequestedAppointmentTime")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackSplitShipmentPart,
    :schema_type => XSD::QName.new(NsV19, "TrackSplitShipmentPart"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "PieceCount")], [0, 1]],
      ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "Timestamp")], [0, 1]],
      ["statusCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusCode")], [0, 1]],
      ["statusDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusDescription")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackStatusAncillaryDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackStatusAncillaryDetail"),
    :schema_element => [
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Reason")], [0, 1]],
      ["reasonDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ReasonDescription")], [0, 1]],
      ["action", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Action")], [0, 1]],
      ["actionDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ActionDescription")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackStatusDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackStatusDetail"),
    :schema_element => [
      ["creationTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "CreationTime")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["location", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "Location")], [0, 1]],
      ["ancillaryDetails", ["FedexWebServices::Soap::Track::TrackStatusAncillaryDetail[]", XSD::QName.new(NsV19, "AncillaryDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingBillOfLadingDocumentDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackingBillOfLadingDocumentDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Track::TrackingDocumentFormat", XSD::QName.new(NsV19, "DocumentFormat")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDateOrTimestamp,
    :schema_type => XSD::QName.new(NsV19, "TrackingDateOrTimestamp"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::TrackingDateOrTimestampType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["dateOrTimestamp", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DateOrTimestamp")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocument,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocument"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::TrackingDocumentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["localizations", ["FedexWebServices::Soap::Track::Localization[]", XSD::QName.new(NsV19, "Localizations")], [0, nil]],
      ["imageType", ["FedexWebServices::Soap::Track::TrackingDocumentImageType", XSD::QName.new(NsV19, "ImageType")], [0, 1]],
      ["resolution", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Resolution")], [0, 1]],
      ["parts", ["FedexWebServices::Soap::Track::DocumentPart[]", XSD::QName.new(NsV19, "Parts")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentDispositionDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentDispositionDetail"),
    :schema_element => [
      ["dispositionType", ["FedexWebServices::Soap::Track::TrackingDocumentDispositionType", XSD::QName.new(NsV19, "DispositionType")], [0, 1]],
      ["eMailDetail", ["FedexWebServices::Soap::Track::TrackingDocumentEmailDetail", XSD::QName.new(NsV19, "EMailDetail")], [0, 1]],
      ["faxDetails", ["FedexWebServices::Soap::Track::FaxDetail[]", XSD::QName.new(NsV19, "FaxDetails")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentEmailDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentEmailDetail"),
    :schema_element => [
      ["recipients", ["FedexWebServices::Soap::Track::EMailDetail[]", XSD::QName.new(NsV19, "Recipients")], [0, nil]],
      ["sender", ["FedexWebServices::Soap::Track::EMailDetail", XSD::QName.new(NsV19, "Sender")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Track::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PersonalMessage")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentFormat,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentFormat"),
    :schema_element => [
      ["dispositions", ["FedexWebServices::Soap::Track::TrackingDocumentDispositionDetail[]", XSD::QName.new(NsV19, "Dispositions")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::Track::TrackingDocumentGroupingType", XSD::QName.new(NsV19, "Grouping")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::Track::TrackingDocumentImageType", XSD::QName.new(NsV19, "ImageType")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Track::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentSpecification,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentSpecification"),
    :schema_element => [
      ["documentTypes", ["FedexWebServices::Soap::Track::TrackingDocumentType[]", XSD::QName.new(NsV19, "DocumentTypes")], [0, nil]],
      ["billOfLadingDocumentDetail", ["FedexWebServices::Soap::Track::TrackingBillOfLadingDocumentDetail", XSD::QName.new(NsV19, "BillOfLadingDocumentDetail")], [0, 1]],
      ["freightBillingDocumentDetail", ["FedexWebServices::Soap::Track::TrackingFreightBillingDocumentDetail", XSD::QName.new(NsV19, "FreightBillingDocumentDetail")], [0, 1]],
      ["signatureProofOfDeliveryDetail", ["FedexWebServices::Soap::Track::TrackingSignatureProofOfDeliveryDetail", XSD::QName.new(NsV19, "SignatureProofOfDeliveryDetail")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingFreightBillingDocumentDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackingFreightBillingDocumentDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Track::TrackingDocumentFormat", XSD::QName.new(NsV19, "DocumentFormat")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingSignatureProofOfDeliveryDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackingSignatureProofOfDeliveryDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Track::TrackingDocumentFormat", XSD::QName.new(NsV19, "DocumentFormat")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TransactionDetail,
    :schema_type => XSD::QName.new(NsV19, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Track::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::Weight,
    :schema_type => XSD::QName.new(NsV19, "Weight"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Track::WeightUnits", XSD::QName.new(NsV19, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV19, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::Track::WebAuthenticationCredential", XSD::QName.new(NsV19, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::Track::WebAuthenticationCredential", XSD::QName.new(NsV19, "UserCredential")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV19, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Password")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::VersionId,
    :schema_type => XSD::QName.new(NsV19, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Minor")]]
    ]
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::AppointmentWindowType,
    :schema_type => XSD::QName.new(NsV19, "AppointmentWindowType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ArrivalLocationType,
    :schema_type => XSD::QName.new(NsV19, "ArrivalLocationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::AvailableImageType,
    :schema_type => XSD::QName.new(NsV19, "AvailableImageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::BarcodeEntryType,
    :schema_type => XSD::QName.new(NsV19, "BarcodeEntryType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::CarrierCodeType,
    :schema_type => XSD::QName.new(NsV19, "CarrierCodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ClearanceBrokerageType,
    :schema_type => XSD::QName.new(NsV19, "ClearanceBrokerageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::CommodityPurposeType,
    :schema_type => XSD::QName.new(NsV19, "CommodityPurposeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::CustomsOptionType,
    :schema_type => XSD::QName.new(NsV19, "CustomsOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::DeliveryOptionType,
    :schema_type => XSD::QName.new(NsV19, "DeliveryOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::DistanceUnits,
    :schema_type => XSD::QName.new(NsV19, "DistanceUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::EligibilityType,
    :schema_type => XSD::QName.new(NsV19, "EligibilityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::FedExLocationType,
    :schema_type => XSD::QName.new(NsV19, "FedExLocationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ImageSizeType,
    :schema_type => XSD::QName.new(NsV19, "ImageSizeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::LinearUnits,
    :schema_type => XSD::QName.new(NsV19, "LinearUnits")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::NaftaNetCostMethodCode,
    :schema_type => XSD::QName.new(NsV19, "NaftaNetCostMethodCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::NaftaPreferenceCriterionCode,
    :schema_type => XSD::QName.new(NsV19, "NaftaPreferenceCriterionCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::NaftaProducerDeterminationCode,
    :schema_type => XSD::QName.new(NsV19, "NaftaProducerDeterminationCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationEventType,
    :schema_type => XSD::QName.new(NsV19, "NotificationEventType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationFormatType,
    :schema_type => XSD::QName.new(NsV19, "NotificationFormatType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV19, "NotificationSeverityType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationType,
    :schema_type => XSD::QName.new(NsV19, "NotificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::OfficeOrderDeliveryMethodType,
    :schema_type => XSD::QName.new(NsV19, "OfficeOrderDeliveryMethodType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::OperatingCompanyType,
    :schema_type => XSD::QName.new(NsV19, "OperatingCompanyType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::PhysicalPackagingType,
    :schema_type => XSD::QName.new(NsV19, "PhysicalPackagingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::PieceCountLocationType,
    :schema_type => XSD::QName.new(NsV19, "PieceCountLocationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ShipmentNotificationAggregationType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationAggregationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::ShipmentNotificationRoleType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationRoleType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::SpecialInstructionsStatusCode,
    :schema_type => XSD::QName.new(NsV19, "SpecialInstructionsStatusCode")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::StringBarcodeType,
    :schema_type => XSD::QName.new(NsV19, "StringBarcodeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackAdvanceNotificationStatusType,
    :schema_type => XSD::QName.new(NsV19, "TrackAdvanceNotificationStatusType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackChargeDetailType,
    :schema_type => XSD::QName.new(NsV19, "TrackChargeDetailType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackChargesPaymentClassificationType,
    :schema_type => XSD::QName.new(NsV19, "TrackChargesPaymentClassificationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackDeliveryLocationType,
    :schema_type => XSD::QName.new(NsV19, "TrackDeliveryLocationType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackDeliveryOptionType,
    :schema_type => XSD::QName.new(NsV19, "TrackDeliveryOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackDetailAttributeType,
    :schema_type => XSD::QName.new(NsV19, "TrackDetailAttributeType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackIdentifierType,
    :schema_type => XSD::QName.new(NsV19, "TrackIdentifierType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackPaymentType,
    :schema_type => XSD::QName.new(NsV19, "TrackPaymentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackPossessionStatusType,
    :schema_type => XSD::QName.new(NsV19, "TrackPossessionStatusType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackRequestProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "TrackRequestProcessingOptionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReturnLabelType,
    :schema_type => XSD::QName.new(NsV19, "TrackReturnLabelType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReturnMovementStatusType,
    :schema_type => XSD::QName.new(NsV19, "TrackReturnMovementStatusType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDateOrTimestampType,
    :schema_type => XSD::QName.new(NsV19, "TrackingDateOrTimestampType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentDispositionType,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentDispositionType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentGroupingType,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentGroupingType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentImageType,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentImageType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentType,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentType")
  )

  EncodedRegistry.register(
    :class => FedexWebServices::Soap::Track::WeightUnits,
    :schema_type => XSD::QName.new(NsV19, "WeightUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::Address,
    :schema_type => XSD::QName.new(NsV19, "Address"),
    :schema_element => [
      ["streetLines", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "StreetLines")], [0, nil]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsV19, "City")], [0, 1]],
      ["stateOrProvinceCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StateOrProvinceCode")], [0, 1]],
      ["postalCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PostalCode")], [0, 1]],
      ["urbanizationCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "UrbanizationCode")], [0, 1]],
      ["countryCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryCode")], [0, 1]],
      ["countryName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryName")], [0, 1]],
      ["residential", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "Residential")], [0, 1]],
      ["geographicCoordinates", ["SOAP::SOAPString", XSD::QName.new(NsV19, "GeographicCoordinates")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::AppointmentDetail,
    :schema_type => XSD::QName.new(NsV19, "AppointmentDetail"),
    :schema_element => [
      ["date", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Date")], [0, 1]],
      ["windowDetails", ["FedexWebServices::Soap::Track::AppointmentTimeDetail[]", XSD::QName.new(NsV19, "WindowDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::AppointmentTimeDetail,
    :schema_type => XSD::QName.new(NsV19, "AppointmentTimeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::AppointmentWindowType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["window", ["FedexWebServices::Soap::Track::LocalTimeRange", XSD::QName.new(NsV19, "Window")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::AvailableImagesDetail,
    :schema_type => XSD::QName.new(NsV19, "AvailableImagesDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::AvailableImageType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["size", ["FedexWebServices::Soap::Track::ImageSizeType", XSD::QName.new(NsV19, "Size")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ClientDetail,
    :schema_type => XSD::QName.new(NsV19, "ClientDetail"),
    :schema_element => [
      ["accountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AccountNumber")]],
      ["meterNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "MeterNumber")]],
      ["integratorId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "IntegratorId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Track::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::Commodity,
    :schema_type => XSD::QName.new(NsV19, "Commodity"),
    :schema_element => [
      ["commodityId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CommodityId")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]],
      ["numberOfPieces", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "NumberOfPieces")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["purpose", ["FedexWebServices::Soap::Track::CommodityPurposeType", XSD::QName.new(NsV19, "Purpose")], [0, 1]],
      ["countryOfManufacture", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CountryOfManufacture")], [0, 1]],
      ["harmonizedCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "HarmonizedCode")], [0, 1]],
      ["weight", ["FedexWebServices::Soap::Track::Weight", XSD::QName.new(NsV19, "Weight")], [0, 1]],
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["quantityUnits", ["SOAP::SOAPString", XSD::QName.new(NsV19, "QuantityUnits")], [0, 1]],
      ["additionalMeasures", ["FedexWebServices::Soap::Track::Measure[]", XSD::QName.new(NsV19, "AdditionalMeasures")], [0, nil]],
      ["unitPrice", ["FedexWebServices::Soap::Track::Money", XSD::QName.new(NsV19, "UnitPrice")], [0, 1]],
      ["customsValue", ["FedexWebServices::Soap::Track::Money", XSD::QName.new(NsV19, "CustomsValue")], [0, 1]],
      ["exciseConditions", ["FedexWebServices::Soap::Track::EdtExciseCondition[]", XSD::QName.new(NsV19, "ExciseConditions")], [0, nil]],
      ["exportLicenseNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ExportLicenseNumber")], [0, 1]],
      ["exportLicenseExpirationDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ExportLicenseExpirationDate")], [0, 1]],
      ["cIMarksAndNumbers", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CIMarksAndNumbers")], [0, 1]],
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PartNumber")], [0, 1]],
      ["naftaDetail", ["FedexWebServices::Soap::Track::NaftaCommodityDetail", XSD::QName.new(NsV19, "NaftaDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::CompletedTrackDetail,
    :schema_type => XSD::QName.new(NsV19, "CompletedTrackDetail"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")], [0, 1]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [0, nil]],
      ["duplicateWaybill", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "DuplicateWaybill")], [0, 1]],
      ["moreData", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "MoreData")], [0, 1]],
      ["pagingToken", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagingToken")], [0, 1]],
      ["trackDetailsCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TrackDetailsCount")], [0, 1]],
      ["trackDetails", ["FedexWebServices::Soap::Track::TrackDetail[]", XSD::QName.new(NsV19, "TrackDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::Contact,
    :schema_type => XSD::QName.new(NsV19, "Contact"),
    :schema_element => [
      ["personName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PersonName")], [0, 1]],
      ["title", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Title")], [0, 1]],
      ["companyName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CompanyName")], [0, 1]],
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]],
      ["phoneExtension", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneExtension")], [0, 1]],
      ["tollFreePhoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TollFreePhoneNumber")], [0, 1]],
      ["pagerNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagerNumber")], [0, 1]],
      ["faxNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FaxNumber")], [0, 1]],
      ["eMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EMailAddress")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ContactAndAddress,
    :schema_type => XSD::QName.new(NsV19, "ContactAndAddress"),
    :schema_element => [
      ["contact", ["FedexWebServices::Soap::Track::Contact", XSD::QName.new(NsV19, "Contact")]],
      ["address", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "Address")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ContentRecord,
    :schema_type => XSD::QName.new(NsV19, "ContentRecord"),
    :schema_element => [
      ["partNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PartNumber")], [0, 1]],
      ["itemNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ItemNumber")], [0, 1]],
      ["receivedQuantity", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "ReceivedQuantity")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::CustomerExceptionRequestDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomerExceptionRequestDetail"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["statusCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusCode")], [0, 1]],
      ["statusDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusDescription")], [0, 1]],
      ["createTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "CreateTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::CustomsOptionDetail,
    :schema_type => XSD::QName.new(NsV19, "CustomsOptionDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::CustomsOptionType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::DateRange,
    :schema_type => XSD::QName.new(NsV19, "DateRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "Ends")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::DeliveryOptionEligibilityDetail,
    :schema_type => XSD::QName.new(NsV19, "DeliveryOptionEligibilityDetail"),
    :schema_element => [
      ["option", ["FedexWebServices::Soap::Track::DeliveryOptionType", XSD::QName.new(NsV19, "Option")], [0, 1]],
      ["eligibility", ["FedexWebServices::Soap::Track::EligibilityType", XSD::QName.new(NsV19, "Eligibility")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::Dimensions,
    :schema_type => XSD::QName.new(NsV19, "Dimensions"),
    :schema_element => [
      ["length", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Length")], [0, 1]],
      ["width", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Width")], [0, 1]],
      ["height", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Height")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Track::LinearUnits", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::Distance,
    :schema_type => XSD::QName.new(NsV19, "Distance"),
    :schema_element => [
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]],
      ["units", ["FedexWebServices::Soap::Track::DistanceUnits", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::DocumentPart,
    :schema_type => XSD::QName.new(NsV19, "DocumentPart"),
    :schema_element => [
      ["sequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "SequenceNumber")], [0, 1]],
      ["content", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Content")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::EMailDetail,
    :schema_type => XSD::QName.new(NsV19, "EMailDetail"),
    :schema_element => [
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EmailAddress")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::EdtExciseCondition,
    :schema_type => XSD::QName.new(NsV19, "EdtExciseCondition"),
    :schema_element => [
      ["category", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Category")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::FaxDetail,
    :schema_type => XSD::QName.new(NsV19, "FaxDetail"),
    :schema_element => [
      ["phoneNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PhoneNumber")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::GetTrackingDocumentsReply,
    :schema_type => XSD::QName.new(NsV19, "GetTrackingDocumentsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["documents", ["FedexWebServices::Soap::Track::TrackingDocument[]", XSD::QName.new(NsV19, "Documents")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::GetTrackingDocumentsRequest,
    :schema_type => XSD::QName.new(NsV19, "GetTrackingDocumentsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Track::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Track::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["selectionDetails", ["FedexWebServices::Soap::Track::TrackSelectionDetail[]", XSD::QName.new(NsV19, "SelectionDetails")], [0, nil]],
      ["trackingDocumentSpecification", ["FedexWebServices::Soap::Track::TrackingDocumentSpecification", XSD::QName.new(NsV19, "TrackingDocumentSpecification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::LocalTimeRange,
    :schema_type => XSD::QName.new(NsV19, "LocalTimeRange"),
    :schema_element => [
      ["begins", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Begins")], [0, 1]],
      ["ends", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Ends")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::Localization,
    :schema_type => XSD::QName.new(NsV19, "Localization"),
    :schema_element => [
      ["languageCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LanguageCode")]],
      ["localeCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocaleCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::Measure,
    :schema_type => XSD::QName.new(NsV19, "Measure"),
    :schema_element => [
      ["quantity", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Quantity")], [0, 1]],
      ["units", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Units")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::Money,
    :schema_type => XSD::QName.new(NsV19, "Money"),
    :schema_element => [
      ["currency", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Currency")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::NaftaCommodityDetail,
    :schema_type => XSD::QName.new(NsV19, "NaftaCommodityDetail"),
    :schema_element => [
      ["preferenceCriterion", ["FedexWebServices::Soap::Track::NaftaPreferenceCriterionCode", XSD::QName.new(NsV19, "PreferenceCriterion")], [0, 1]],
      ["producerDetermination", ["FedexWebServices::Soap::Track::NaftaProducerDeterminationCode", XSD::QName.new(NsV19, "ProducerDetermination")], [0, 1]],
      ["producerId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ProducerId")], [0, 1]],
      ["netCostMethod", ["FedexWebServices::Soap::Track::NaftaNetCostMethodCode", XSD::QName.new(NsV19, "NetCostMethod")], [0, 1]],
      ["netCostDateRange", ["FedexWebServices::Soap::Track::DateRange", XSD::QName.new(NsV19, "NetCostDateRange")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::Notification,
    :schema_type => XSD::QName.new(NsV19, "Notification"),
    :schema_element => [
      ["severity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "Severity")]],
      ["source", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Source")]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Message")], [0, 1]],
      ["localizedMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "LocalizedMessage")], [0, 1]],
      ["messageParameters", ["FedexWebServices::Soap::Track::NotificationParameter[]", XSD::QName.new(NsV19, "MessageParameters")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationDetail,
    :schema_type => XSD::QName.new(NsV19, "NotificationDetail"),
    :schema_element => [
      ["notificationType", ["FedexWebServices::Soap::Track::NotificationType", XSD::QName.new(NsV19, "NotificationType")], [0, 1]],
      ["emailDetail", ["FedexWebServices::Soap::Track::EMailDetail", XSD::QName.new(NsV19, "EmailDetail")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Track::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationParameter,
    :schema_type => XSD::QName.new(NsV19, "NotificationParameter"),
    :schema_element => [
      ["id", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Id")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::PagingDetail,
    :schema_type => XSD::QName.new(NsV19, "PagingDetail"),
    :schema_element => [
      ["pagingToken", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagingToken")], [0, 1]],
      ["numberOfResultsPerPage", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "NumberOfResultsPerPage")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::PieceCountVerificationDetail,
    :schema_type => XSD::QName.new(NsV19, "PieceCountVerificationDetail"),
    :schema_element => [
      ["countLocationType", ["FedexWebServices::Soap::Track::PieceCountLocationType", XSD::QName.new(NsV19, "CountLocationType")], [0, 1]],
      ["count", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Count")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::SendNotificationsReply,
    :schema_type => XSD::QName.new(NsV19, "SendNotificationsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["duplicateWaybill", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "DuplicateWaybill")], [0, 1]],
      ["moreDataAvailable", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "MoreDataAvailable")], [0, 1]],
      ["pagingToken", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagingToken")], [0, 1]],
      ["packages", ["FedexWebServices::Soap::Track::TrackNotificationPackage[]", XSD::QName.new(NsV19, "Packages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::SendNotificationsRequest,
    :schema_type => XSD::QName.new(NsV19, "SendNotificationsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Track::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Track::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")]],
      ["multiPiece", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "MultiPiece")], [0, 1]],
      ["pagingToken", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagingToken")], [0, 1]],
      ["trackingNumberUniqueId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueId")], [0, 1]],
      ["shipDateRangeBegin", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDateRangeBegin")], [0, 1]],
      ["shipDateRangeEnd", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDateRangeEnd")], [0, 1]],
      ["senderEMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SenderEMailAddress")], [0, 1]],
      ["senderContactName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SenderContactName")]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::Track::ShipmentEventNotificationDetail", XSD::QName.new(NsV19, "EventNotificationDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ShipmentEventNotificationDetail,
    :schema_type => XSD::QName.new(NsV19, "ShipmentEventNotificationDetail"),
    :schema_element => [
      ["aggregationType", ["FedexWebServices::Soap::Track::ShipmentNotificationAggregationType", XSD::QName.new(NsV19, "AggregationType")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PersonalMessage")], [0, 1]],
      ["eventNotifications", ["FedexWebServices::Soap::Track::ShipmentEventNotificationSpecification[]", XSD::QName.new(NsV19, "EventNotifications")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ShipmentEventNotificationSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShipmentEventNotificationSpecification"),
    :schema_element => [
      ["role", ["FedexWebServices::Soap::Track::ShipmentNotificationRoleType", XSD::QName.new(NsV19, "Role")], [0, 1]],
      ["events", ["FedexWebServices::Soap::Track::NotificationEventType[]", XSD::QName.new(NsV19, "Events")], [0, nil]],
      ["notificationDetail", ["FedexWebServices::Soap::Track::NotificationDetail", XSD::QName.new(NsV19, "NotificationDetail")], [0, 1]],
      ["formatSpecification", ["FedexWebServices::Soap::Track::ShipmentNotificationFormatSpecification", XSD::QName.new(NsV19, "FormatSpecification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ShipmentNotificationFormatSpecification,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationFormatSpecification"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::NotificationFormatType", XSD::QName.new(NsV19, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::SignatureImageDetail,
    :schema_type => XSD::QName.new(NsV19, "SignatureImageDetail"),
    :schema_element => [
      ["image", ["SOAP::SOAPBase64", XSD::QName.new(NsV19, "Image")], [0, 1]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::SpecialInstructionStatusDetail,
    :schema_type => XSD::QName.new(NsV19, "SpecialInstructionStatusDetail"),
    :schema_element => [
      ["status", ["FedexWebServices::Soap::Track::SpecialInstructionsStatusCode", XSD::QName.new(NsV19, "Status")], [0, 1]],
      ["statusCreateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "StatusCreateTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::StringBarcode,
    :schema_type => XSD::QName.new(NsV19, "StringBarcode"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::StringBarcodeType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackAdvanceNotificationDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackAdvanceNotificationDetail"),
    :schema_element => [
      ["estimatedTimeOfArrival", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "EstimatedTimeOfArrival")], [0, 1]],
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Reason")], [0, 1]],
      ["status", ["FedexWebServices::Soap::Track::TrackAdvanceNotificationStatusType", XSD::QName.new(NsV19, "Status")], [0, 1]],
      ["statusDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusDescription")], [0, 1]],
      ["statusTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "StatusTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackChargeDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackChargeDetail"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::TrackChargeDetailType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["chargeAmount", ["FedexWebServices::Soap::Track::Money", XSD::QName.new(NsV19, "ChargeAmount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackDetail"),
    :schema_element => [
      ["notification", ["FedexWebServices::Soap::Track::Notification", XSD::QName.new(NsV19, "Notification")], [0, 1]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")], [0, 1]],
      ["barcode", ["FedexWebServices::Soap::Track::StringBarcode", XSD::QName.new(NsV19, "Barcode")], [0, 1]],
      ["trackingNumberUniqueIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueIdentifier")], [0, 1]],
      ["statusDetail", ["FedexWebServices::Soap::Track::TrackStatusDetail", XSD::QName.new(NsV19, "StatusDetail")], [0, 1]],
      ["informationNotes", ["FedexWebServices::Soap::Track::TrackInformationNoteDetail[]", XSD::QName.new(NsV19, "InformationNotes")], [0, nil]],
      ["customerExceptionRequests", ["FedexWebServices::Soap::Track::CustomerExceptionRequestDetail[]", XSD::QName.new(NsV19, "CustomerExceptionRequests")], [0, nil]],
      ["reconciliation", ["FedexWebServices::Soap::Track::TrackReconciliation", XSD::QName.new(NsV19, "Reconciliation")], [0, 1]],
      ["serviceCommitMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceCommitMessage")], [0, 1]],
      ["destinationServiceArea", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationServiceArea")], [0, 1]],
      ["destinationServiceAreaDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationServiceAreaDescription")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Track::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["operatingCompany", ["FedexWebServices::Soap::Track::OperatingCompanyType", XSD::QName.new(NsV19, "OperatingCompany")], [0, 1]],
      ["operatingCompanyOrCarrierDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OperatingCompanyOrCarrierDescription")], [0, 1]],
      ["cartageAgentCompanyName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CartageAgentCompanyName")], [0, 1]],
      ["productionLocationContactAndAddress", ["FedexWebServices::Soap::Track::ContactAndAddress", XSD::QName.new(NsV19, "ProductionLocationContactAndAddress")], [0, 1]],
      ["otherIdentifiers", ["FedexWebServices::Soap::Track::TrackOtherIdentifierDetail[]", XSD::QName.new(NsV19, "OtherIdentifiers")], [0, nil]],
      ["formId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "FormId")], [0, 1]],
      ["service", ["FedexWebServices::Soap::Track::TrackServiceDescriptionDetail", XSD::QName.new(NsV19, "Service")], [0, 1]],
      ["packageWeight", ["FedexWebServices::Soap::Track::Weight", XSD::QName.new(NsV19, "PackageWeight")], [0, 1]],
      ["packageDimensions", ["FedexWebServices::Soap::Track::Dimensions", XSD::QName.new(NsV19, "PackageDimensions")], [0, 1]],
      ["packageDimensionalWeight", ["FedexWebServices::Soap::Track::Weight", XSD::QName.new(NsV19, "PackageDimensionalWeight")], [0, 1]],
      ["shipmentWeight", ["FedexWebServices::Soap::Track::Weight", XSD::QName.new(NsV19, "ShipmentWeight")], [0, 1]],
      ["packaging", ["FedexWebServices::Soap::Track::TrackPackagingDescriptionDetail", XSD::QName.new(NsV19, "Packaging")], [0, 1]],
      ["physicalPackagingType", ["FedexWebServices::Soap::Track::PhysicalPackagingType", XSD::QName.new(NsV19, "PhysicalPackagingType")], [0, 1]],
      ["packageSequenceNumber", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PackageSequenceNumber")], [0, 1]],
      ["packageCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PackageCount")], [0, 1]],
      ["shipmentContentPieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "ShipmentContentPieceCount")], [0, 1]],
      ["packageContentPieceCount", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "PackageContentPieceCount")], [0, 1]],
      ["creatorSoftwareId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CreatorSoftwareId")], [0, 1]],
      ["charges", ["FedexWebServices::Soap::Track::TrackChargeDetail[]", XSD::QName.new(NsV19, "Charges")], [0, nil]],
      ["nickName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "NickName")], [0, 1]],
      ["notes", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Notes")], [0, 1]],
      ["attributes", ["FedexWebServices::Soap::Track::TrackDetailAttributeType[]", XSD::QName.new(NsV19, "Attributes")], [0, nil]],
      ["shipmentContents", ["FedexWebServices::Soap::Track::ContentRecord[]", XSD::QName.new(NsV19, "ShipmentContents")], [0, nil]],
      ["packageContents", ["SOAP::SOAPString[]", XSD::QName.new(NsV19, "PackageContents")], [0, nil]],
      ["clearanceLocationCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ClearanceLocationCode")], [0, 1]],
      ["clearanceBrokerage", ["FedexWebServices::Soap::Track::ClearanceBrokerageType", XSD::QName.new(NsV19, "ClearanceBrokerage")], [0, 1]],
      ["commodities", ["FedexWebServices::Soap::Track::Commodity[]", XSD::QName.new(NsV19, "Commodities")], [0, nil]],
      ["returnDetail", ["FedexWebServices::Soap::Track::TrackReturnDetail", XSD::QName.new(NsV19, "ReturnDetail")], [0, 1]],
      ["customsOptionDetails", ["FedexWebServices::Soap::Track::CustomsOptionDetail[]", XSD::QName.new(NsV19, "CustomsOptionDetails")], [0, nil]],
      ["advanceNotificationDetail", ["FedexWebServices::Soap::Track::TrackAdvanceNotificationDetail", XSD::QName.new(NsV19, "AdvanceNotificationDetail")], [0, 1]],
      ["specialHandlings", ["FedexWebServices::Soap::Track::TrackSpecialHandling[]", XSD::QName.new(NsV19, "SpecialHandlings")], [0, nil]],
      ["payments", ["FedexWebServices::Soap::Track::TrackPayment[]", XSD::QName.new(NsV19, "Payments")], [0, nil]],
      ["shipper", ["FedexWebServices::Soap::Track::Contact", XSD::QName.new(NsV19, "Shipper")], [0, 1]],
      ["possessionStatus", ["FedexWebServices::Soap::Track::TrackPossessionStatusType", XSD::QName.new(NsV19, "PossessionStatus")], [0, 1]],
      ["shipperAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "ShipperAddress")], [0, 1]],
      ["originLocationAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "OriginLocationAddress")], [0, 1]],
      ["originStationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "OriginStationId")], [0, 1]],
      ["datesOrTimes", ["FedexWebServices::Soap::Track::TrackingDateOrTimestamp[]", XSD::QName.new(NsV19, "DatesOrTimes")], [0, nil]],
      ["totalTransitDistance", ["FedexWebServices::Soap::Track::Distance", XSD::QName.new(NsV19, "TotalTransitDistance")], [0, 1]],
      ["distanceToDestination", ["FedexWebServices::Soap::Track::Distance", XSD::QName.new(NsV19, "DistanceToDestination")], [0, 1]],
      ["specialInstructions", ["FedexWebServices::Soap::Track::TrackSpecialInstruction[]", XSD::QName.new(NsV19, "SpecialInstructions")], [0, nil]],
      ["recipient", ["FedexWebServices::Soap::Track::Contact", XSD::QName.new(NsV19, "Recipient")], [0, 1]],
      ["lastUpdatedDestinationAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "LastUpdatedDestinationAddress")], [0, 1]],
      ["destinationAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "DestinationAddress")], [0, 1]],
      ["holdAtLocationContact", ["FedexWebServices::Soap::Track::Contact", XSD::QName.new(NsV19, "HoldAtLocationContact")], [0, 1]],
      ["holdAtLocationAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "HoldAtLocationAddress")], [0, 1]],
      ["destinationStationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationStationId")], [0, 1]],
      ["destinationLocationAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "DestinationLocationAddress")], [0, 1]],
      ["destinationLocationType", ["FedexWebServices::Soap::Track::FedExLocationType", XSD::QName.new(NsV19, "DestinationLocationType")], [0, 1]],
      ["destinationLocationTimeZoneOffset", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DestinationLocationTimeZoneOffset")], [0, 1]],
      ["actualDeliveryAddress", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "ActualDeliveryAddress")], [0, 1]],
      ["officeOrderDeliveryMethod", ["FedexWebServices::Soap::Track::OfficeOrderDeliveryMethodType", XSD::QName.new(NsV19, "OfficeOrderDeliveryMethod")], [0, 1]],
      ["deliveryLocationType", ["FedexWebServices::Soap::Track::TrackDeliveryLocationType", XSD::QName.new(NsV19, "DeliveryLocationType")], [0, 1]],
      ["deliveryLocationDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeliveryLocationDescription")], [0, 1]],
      ["deliveryAttempts", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "DeliveryAttempts")], [0, 1]],
      ["deliverySignatureName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DeliverySignatureName")], [0, 1]],
      ["pieceCountVerificationDetails", ["FedexWebServices::Soap::Track::PieceCountVerificationDetail[]", XSD::QName.new(NsV19, "PieceCountVerificationDetails")], [0, nil]],
      ["totalUniqueAddressCountInConsolidation", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TotalUniqueAddressCountInConsolidation")], [0, 1]],
      ["availableImages", ["FedexWebServices::Soap::Track::AvailableImagesDetail[]", XSD::QName.new(NsV19, "AvailableImages")], [0, nil]],
      ["signature", ["FedexWebServices::Soap::Track::SignatureImageDetail", XSD::QName.new(NsV19, "Signature")], [0, 1]],
      ["notificationEventsAvailable", ["FedexWebServices::Soap::Track::NotificationEventType[]", XSD::QName.new(NsV19, "NotificationEventsAvailable")], [0, nil]],
      ["splitShipmentParts", ["FedexWebServices::Soap::Track::TrackSplitShipmentPart[]", XSD::QName.new(NsV19, "SplitShipmentParts")], [0, nil]],
      ["deliveryOptionEligibilityDetails", ["FedexWebServices::Soap::Track::DeliveryOptionEligibilityDetail[]", XSD::QName.new(NsV19, "DeliveryOptionEligibilityDetails")], [0, nil]],
      ["events", ["FedexWebServices::Soap::Track::TrackEvent[]", XSD::QName.new(NsV19, "Events")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackEvent,
    :schema_type => XSD::QName.new(NsV19, "TrackEvent"),
    :schema_element => [
      ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "Timestamp")], [0, 1]],
      ["eventType", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EventType")], [0, 1]],
      ["eventDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "EventDescription")], [0, 1]],
      ["statusExceptionCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusExceptionCode")], [0, 1]],
      ["statusExceptionDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusExceptionDescription")], [0, 1]],
      ["barcodeEntryType", ["FedexWebServices::Soap::Track::BarcodeEntryType", XSD::QName.new(NsV19, "BarcodeEntryType")], [0, 1]],
      ["address", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "Address")], [0, 1]],
      ["stationId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StationId")], [0, 1]],
      ["arrivalLocation", ["FedexWebServices::Soap::Track::ArrivalLocationType", XSD::QName.new(NsV19, "ArrivalLocation")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackInformationNoteDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackInformationNoteDetail"),
    :schema_element => [
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackNotificationPackage,
    :schema_type => XSD::QName.new(NsV19, "TrackNotificationPackage"),
    :schema_element => [
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")], [0, 1]],
      ["trackingNumberUniqueIdentifiers", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueIdentifiers")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Track::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["shipDate", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDate")], [0, 1]],
      ["destination", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "Destination")], [0, 1]],
      ["recipientDetails", ["FedexWebServices::Soap::Track::TrackNotificationRecipientDetail[]", XSD::QName.new(NsV19, "RecipientDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackNotificationRecipientDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackNotificationRecipientDetail"),
    :schema_element => [
      ["notificationEventsAvailable", ["FedexWebServices::Soap::Track::NotificationEventType[]", XSD::QName.new(NsV19, "NotificationEventsAvailable")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackOtherIdentifierDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackOtherIdentifierDetail"),
    :schema_element => [
      ["packageIdentifier", ["FedexWebServices::Soap::Track::TrackPackageIdentifier", XSD::QName.new(NsV19, "PackageIdentifier")], [0, 1]],
      ["trackingNumberUniqueIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueIdentifier")], [0, 1]],
      ["carrierCode", ["FedexWebServices::Soap::Track::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackPackageIdentifier,
    :schema_type => XSD::QName.new(NsV19, "TrackPackageIdentifier"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::TrackIdentifierType", XSD::QName.new(NsV19, "Type")]],
      ["value", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Value")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackPackagingDescriptionDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackPackagingDescriptionDetail"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackPayment,
    :schema_type => XSD::QName.new(NsV19, "TrackPayment"),
    :schema_element => [
      ["classification", ["FedexWebServices::Soap::Track::TrackChargesPaymentClassificationType", XSD::QName.new(NsV19, "Classification")], [0, 1]],
      ["type", ["FedexWebServices::Soap::Track::TrackPaymentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReconciliation,
    :schema_type => XSD::QName.new(NsV19, "TrackReconciliation"),
    :schema_element => [
      ["status", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Status")]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReply,
    :schema_type => XSD::QName.new(NsV19, "TrackReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["completedTrackDetails", ["FedexWebServices::Soap::Track::CompletedTrackDetail[]", XSD::QName.new(NsV19, "CompletedTrackDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackRequest,
    :schema_type => XSD::QName.new(NsV19, "TrackRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Track::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Track::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["selectionDetails", ["FedexWebServices::Soap::Track::TrackSelectionDetail[]", XSD::QName.new(NsV19, "SelectionDetails")], [0, nil]],
      ["transactionTimeOutValueInMilliseconds", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TransactionTimeOutValueInMilliseconds")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Track::TrackRequestProcessingOptionType[]", XSD::QName.new(NsV19, "ProcessingOptions")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReturnDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackReturnDetail"),
    :schema_element => [
      ["movementStatus", ["FedexWebServices::Soap::Track::TrackReturnMovementStatusType", XSD::QName.new(NsV19, "MovementStatus")], [0, 1]],
      ["labelType", ["FedexWebServices::Soap::Track::TrackReturnLabelType", XSD::QName.new(NsV19, "LabelType")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["authorizationName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "AuthorizationName")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackSelectionDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackSelectionDetail"),
    :schema_element => [
      ["carrierCode", ["FedexWebServices::Soap::Track::CarrierCodeType", XSD::QName.new(NsV19, "CarrierCode")], [0, 1]],
      ["operatingCompany", ["FedexWebServices::Soap::Track::OperatingCompanyType", XSD::QName.new(NsV19, "OperatingCompany")], [0, 1]],
      ["packageIdentifier", ["FedexWebServices::Soap::Track::TrackPackageIdentifier", XSD::QName.new(NsV19, "PackageIdentifier")], [0, 1]],
      ["trackingNumberUniqueIdentifier", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueIdentifier")], [0, 1]],
      ["shipDateRangeBegin", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDateRangeBegin")], [0, 1]],
      ["shipDateRangeEnd", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDateRangeEnd")], [0, 1]],
      ["shipmentAccountNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ShipmentAccountNumber")], [0, 1]],
      ["secureSpodAccount", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SecureSpodAccount")], [0, 1]],
      ["destination", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "Destination")], [0, 1]],
      ["pagingDetail", ["FedexWebServices::Soap::Track::PagingDetail", XSD::QName.new(NsV19, "PagingDetail")], [0, 1]],
      ["customerSpecifiedTimeOutValueInMilliseconds", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "CustomerSpecifiedTimeOutValueInMilliseconds")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackServiceDescriptionDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackServiceDescriptionDetail"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["shortDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ShortDescription")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackSpecialHandling,
    :schema_type => XSD::QName.new(NsV19, "TrackSpecialHandling"),
    :schema_element => [
      ["type", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["paymentType", ["FedexWebServices::Soap::Track::TrackPaymentType", XSD::QName.new(NsV19, "PaymentType")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackSpecialInstruction,
    :schema_type => XSD::QName.new(NsV19, "TrackSpecialInstruction"),
    :schema_element => [
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["deliveryOption", ["FedexWebServices::Soap::Track::TrackDeliveryOptionType", XSD::QName.new(NsV19, "DeliveryOption")], [0, 1]],
      ["statusDetail", ["FedexWebServices::Soap::Track::SpecialInstructionStatusDetail", XSD::QName.new(NsV19, "StatusDetail")], [0, 1]],
      ["originalEstimatedDeliveryTimestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "OriginalEstimatedDeliveryTimestamp")], [0, 1]],
      ["originalRequestTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "OriginalRequestTime")], [0, 1]],
      ["requestedAppointmentTime", ["FedexWebServices::Soap::Track::AppointmentDetail", XSD::QName.new(NsV19, "RequestedAppointmentTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackSplitShipmentPart,
    :schema_type => XSD::QName.new(NsV19, "TrackSplitShipmentPart"),
    :schema_element => [
      ["pieceCount", ["SOAP::SOAPPositiveInteger", XSD::QName.new(NsV19, "PieceCount")], [0, 1]],
      ["timestamp", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "Timestamp")], [0, 1]],
      ["statusCode", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusCode")], [0, 1]],
      ["statusDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "StatusDescription")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackStatusAncillaryDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackStatusAncillaryDetail"),
    :schema_element => [
      ["reason", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Reason")], [0, 1]],
      ["reasonDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ReasonDescription")], [0, 1]],
      ["action", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Action")], [0, 1]],
      ["actionDescription", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ActionDescription")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackStatusDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackStatusDetail"),
    :schema_element => [
      ["creationTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsV19, "CreationTime")], [0, 1]],
      ["code", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Code")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Description")], [0, 1]],
      ["location", ["FedexWebServices::Soap::Track::Address", XSD::QName.new(NsV19, "Location")], [0, 1]],
      ["ancillaryDetails", ["FedexWebServices::Soap::Track::TrackStatusAncillaryDetail[]", XSD::QName.new(NsV19, "AncillaryDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingBillOfLadingDocumentDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackingBillOfLadingDocumentDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Track::TrackingDocumentFormat", XSD::QName.new(NsV19, "DocumentFormat")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDateOrTimestamp,
    :schema_type => XSD::QName.new(NsV19, "TrackingDateOrTimestamp"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::TrackingDateOrTimestampType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["dateOrTimestamp", ["SOAP::SOAPString", XSD::QName.new(NsV19, "DateOrTimestamp")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocument,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocument"),
    :schema_element => [
      ["type", ["FedexWebServices::Soap::Track::TrackingDocumentType", XSD::QName.new(NsV19, "Type")], [0, 1]],
      ["localizations", ["FedexWebServices::Soap::Track::Localization[]", XSD::QName.new(NsV19, "Localizations")], [0, nil]],
      ["imageType", ["FedexWebServices::Soap::Track::TrackingDocumentImageType", XSD::QName.new(NsV19, "ImageType")], [0, 1]],
      ["resolution", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "Resolution")], [0, 1]],
      ["parts", ["FedexWebServices::Soap::Track::DocumentPart[]", XSD::QName.new(NsV19, "Parts")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentDispositionDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentDispositionDetail"),
    :schema_element => [
      ["dispositionType", ["FedexWebServices::Soap::Track::TrackingDocumentDispositionType", XSD::QName.new(NsV19, "DispositionType")], [0, 1]],
      ["eMailDetail", ["FedexWebServices::Soap::Track::TrackingDocumentEmailDetail", XSD::QName.new(NsV19, "EMailDetail")], [0, 1]],
      ["faxDetails", ["FedexWebServices::Soap::Track::FaxDetail[]", XSD::QName.new(NsV19, "FaxDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentEmailDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentEmailDetail"),
    :schema_element => [
      ["recipients", ["FedexWebServices::Soap::Track::EMailDetail[]", XSD::QName.new(NsV19, "Recipients")], [0, nil]],
      ["sender", ["FedexWebServices::Soap::Track::EMailDetail", XSD::QName.new(NsV19, "Sender")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Track::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]],
      ["personalMessage", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PersonalMessage")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentFormat,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentFormat"),
    :schema_element => [
      ["dispositions", ["FedexWebServices::Soap::Track::TrackingDocumentDispositionDetail[]", XSD::QName.new(NsV19, "Dispositions")], [0, nil]],
      ["grouping", ["FedexWebServices::Soap::Track::TrackingDocumentGroupingType", XSD::QName.new(NsV19, "Grouping")], [0, 1]],
      ["imageType", ["FedexWebServices::Soap::Track::TrackingDocumentImageType", XSD::QName.new(NsV19, "ImageType")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Track::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentSpecification,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentSpecification"),
    :schema_element => [
      ["documentTypes", ["FedexWebServices::Soap::Track::TrackingDocumentType[]", XSD::QName.new(NsV19, "DocumentTypes")], [0, nil]],
      ["billOfLadingDocumentDetail", ["FedexWebServices::Soap::Track::TrackingBillOfLadingDocumentDetail", XSD::QName.new(NsV19, "BillOfLadingDocumentDetail")], [0, 1]],
      ["freightBillingDocumentDetail", ["FedexWebServices::Soap::Track::TrackingFreightBillingDocumentDetail", XSD::QName.new(NsV19, "FreightBillingDocumentDetail")], [0, 1]],
      ["signatureProofOfDeliveryDetail", ["FedexWebServices::Soap::Track::TrackingSignatureProofOfDeliveryDetail", XSD::QName.new(NsV19, "SignatureProofOfDeliveryDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingFreightBillingDocumentDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackingFreightBillingDocumentDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Track::TrackingDocumentFormat", XSD::QName.new(NsV19, "DocumentFormat")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingSignatureProofOfDeliveryDetail,
    :schema_type => XSD::QName.new(NsV19, "TrackingSignatureProofOfDeliveryDetail"),
    :schema_element => [
      ["documentFormat", ["FedexWebServices::Soap::Track::TrackingDocumentFormat", XSD::QName.new(NsV19, "DocumentFormat")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TransactionDetail,
    :schema_type => XSD::QName.new(NsV19, "TransactionDetail"),
    :schema_element => [
      ["customerTransactionId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "CustomerTransactionId")], [0, 1]],
      ["localization", ["FedexWebServices::Soap::Track::Localization", XSD::QName.new(NsV19, "Localization")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::Weight,
    :schema_type => XSD::QName.new(NsV19, "Weight"),
    :schema_element => [
      ["units", ["FedexWebServices::Soap::Track::WeightUnits", XSD::QName.new(NsV19, "Units")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV19, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::WebAuthenticationDetail,
    :schema_type => XSD::QName.new(NsV19, "WebAuthenticationDetail"),
    :schema_element => [
      ["parentCredential", ["FedexWebServices::Soap::Track::WebAuthenticationCredential", XSD::QName.new(NsV19, "ParentCredential")], [0, 1]],
      ["userCredential", ["FedexWebServices::Soap::Track::WebAuthenticationCredential", XSD::QName.new(NsV19, "UserCredential")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::WebAuthenticationCredential,
    :schema_type => XSD::QName.new(NsV19, "WebAuthenticationCredential"),
    :schema_element => [
      ["key", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Key")]],
      ["password", ["SOAP::SOAPString", XSD::QName.new(NsV19, "Password")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::VersionId,
    :schema_type => XSD::QName.new(NsV19, "VersionId"),
    :schema_element => [
      ["serviceId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "ServiceId")]],
      ["major", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Major")]],
      ["intermediate", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Intermediate")]],
      ["minor", ["SOAP::SOAPInt", XSD::QName.new(NsV19, "Minor")]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::AppointmentWindowType,
    :schema_type => XSD::QName.new(NsV19, "AppointmentWindowType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ArrivalLocationType,
    :schema_type => XSD::QName.new(NsV19, "ArrivalLocationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::AvailableImageType,
    :schema_type => XSD::QName.new(NsV19, "AvailableImageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::BarcodeEntryType,
    :schema_type => XSD::QName.new(NsV19, "BarcodeEntryType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::CarrierCodeType,
    :schema_type => XSD::QName.new(NsV19, "CarrierCodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ClearanceBrokerageType,
    :schema_type => XSD::QName.new(NsV19, "ClearanceBrokerageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::CommodityPurposeType,
    :schema_type => XSD::QName.new(NsV19, "CommodityPurposeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::CustomsOptionType,
    :schema_type => XSD::QName.new(NsV19, "CustomsOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::DeliveryOptionType,
    :schema_type => XSD::QName.new(NsV19, "DeliveryOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::DistanceUnits,
    :schema_type => XSD::QName.new(NsV19, "DistanceUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::EligibilityType,
    :schema_type => XSD::QName.new(NsV19, "EligibilityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::FedExLocationType,
    :schema_type => XSD::QName.new(NsV19, "FedExLocationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ImageSizeType,
    :schema_type => XSD::QName.new(NsV19, "ImageSizeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::LinearUnits,
    :schema_type => XSD::QName.new(NsV19, "LinearUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::NaftaNetCostMethodCode,
    :schema_type => XSD::QName.new(NsV19, "NaftaNetCostMethodCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::NaftaPreferenceCriterionCode,
    :schema_type => XSD::QName.new(NsV19, "NaftaPreferenceCriterionCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::NaftaProducerDeterminationCode,
    :schema_type => XSD::QName.new(NsV19, "NaftaProducerDeterminationCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationEventType,
    :schema_type => XSD::QName.new(NsV19, "NotificationEventType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationFormatType,
    :schema_type => XSD::QName.new(NsV19, "NotificationFormatType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationSeverityType,
    :schema_type => XSD::QName.new(NsV19, "NotificationSeverityType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::NotificationType,
    :schema_type => XSD::QName.new(NsV19, "NotificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::OfficeOrderDeliveryMethodType,
    :schema_type => XSD::QName.new(NsV19, "OfficeOrderDeliveryMethodType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::OperatingCompanyType,
    :schema_type => XSD::QName.new(NsV19, "OperatingCompanyType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::PhysicalPackagingType,
    :schema_type => XSD::QName.new(NsV19, "PhysicalPackagingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::PieceCountLocationType,
    :schema_type => XSD::QName.new(NsV19, "PieceCountLocationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ShipmentNotificationAggregationType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationAggregationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::ShipmentNotificationRoleType,
    :schema_type => XSD::QName.new(NsV19, "ShipmentNotificationRoleType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::SpecialInstructionsStatusCode,
    :schema_type => XSD::QName.new(NsV19, "SpecialInstructionsStatusCode")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::StringBarcodeType,
    :schema_type => XSD::QName.new(NsV19, "StringBarcodeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackAdvanceNotificationStatusType,
    :schema_type => XSD::QName.new(NsV19, "TrackAdvanceNotificationStatusType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackChargeDetailType,
    :schema_type => XSD::QName.new(NsV19, "TrackChargeDetailType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackChargesPaymentClassificationType,
    :schema_type => XSD::QName.new(NsV19, "TrackChargesPaymentClassificationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackDeliveryLocationType,
    :schema_type => XSD::QName.new(NsV19, "TrackDeliveryLocationType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackDeliveryOptionType,
    :schema_type => XSD::QName.new(NsV19, "TrackDeliveryOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackDetailAttributeType,
    :schema_type => XSD::QName.new(NsV19, "TrackDetailAttributeType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackIdentifierType,
    :schema_type => XSD::QName.new(NsV19, "TrackIdentifierType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackPaymentType,
    :schema_type => XSD::QName.new(NsV19, "TrackPaymentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackPossessionStatusType,
    :schema_type => XSD::QName.new(NsV19, "TrackPossessionStatusType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackRequestProcessingOptionType,
    :schema_type => XSD::QName.new(NsV19, "TrackRequestProcessingOptionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReturnLabelType,
    :schema_type => XSD::QName.new(NsV19, "TrackReturnLabelType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReturnMovementStatusType,
    :schema_type => XSD::QName.new(NsV19, "TrackReturnMovementStatusType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDateOrTimestampType,
    :schema_type => XSD::QName.new(NsV19, "TrackingDateOrTimestampType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentDispositionType,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentDispositionType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentGroupingType,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentGroupingType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentImageType,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentImageType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackingDocumentType,
    :schema_type => XSD::QName.new(NsV19, "TrackingDocumentType")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::WeightUnits,
    :schema_type => XSD::QName.new(NsV19, "WeightUnits")
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::GetTrackingDocumentsReply,
    :schema_name => XSD::QName.new(NsV19, "GetTrackingDocumentsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["documents", ["FedexWebServices::Soap::Track::TrackingDocument[]", XSD::QName.new(NsV19, "Documents")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::GetTrackingDocumentsRequest,
    :schema_name => XSD::QName.new(NsV19, "GetTrackingDocumentsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Track::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Track::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["selectionDetails", ["FedexWebServices::Soap::Track::TrackSelectionDetail[]", XSD::QName.new(NsV19, "SelectionDetails")], [0, nil]],
      ["trackingDocumentSpecification", ["FedexWebServices::Soap::Track::TrackingDocumentSpecification", XSD::QName.new(NsV19, "TrackingDocumentSpecification")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::SendNotificationsReply,
    :schema_name => XSD::QName.new(NsV19, "SendNotificationsReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["duplicateWaybill", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "DuplicateWaybill")], [0, 1]],
      ["moreDataAvailable", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "MoreDataAvailable")], [0, 1]],
      ["pagingToken", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagingToken")], [0, 1]],
      ["packages", ["FedexWebServices::Soap::Track::TrackNotificationPackage[]", XSD::QName.new(NsV19, "Packages")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::SendNotificationsRequest,
    :schema_name => XSD::QName.new(NsV19, "SendNotificationsRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Track::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Track::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["trackingNumber", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumber")]],
      ["multiPiece", ["SOAP::SOAPBoolean", XSD::QName.new(NsV19, "MultiPiece")], [0, 1]],
      ["pagingToken", ["SOAP::SOAPString", XSD::QName.new(NsV19, "PagingToken")], [0, 1]],
      ["trackingNumberUniqueId", ["SOAP::SOAPString", XSD::QName.new(NsV19, "TrackingNumberUniqueId")], [0, 1]],
      ["shipDateRangeBegin", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDateRangeBegin")], [0, 1]],
      ["shipDateRangeEnd", ["SOAP::SOAPDate", XSD::QName.new(NsV19, "ShipDateRangeEnd")], [0, 1]],
      ["senderEMailAddress", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SenderEMailAddress")], [0, 1]],
      ["senderContactName", ["SOAP::SOAPString", XSD::QName.new(NsV19, "SenderContactName")]],
      ["eventNotificationDetail", ["FedexWebServices::Soap::Track::ShipmentEventNotificationDetail", XSD::QName.new(NsV19, "EventNotificationDetail")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackReply,
    :schema_name => XSD::QName.new(NsV19, "TrackReply"),
    :schema_element => [
      ["highestSeverity", ["FedexWebServices::Soap::Track::NotificationSeverityType", XSD::QName.new(NsV19, "HighestSeverity")]],
      ["notifications", ["FedexWebServices::Soap::Track::Notification[]", XSD::QName.new(NsV19, "Notifications")], [1, nil]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["completedTrackDetails", ["FedexWebServices::Soap::Track::CompletedTrackDetail[]", XSD::QName.new(NsV19, "CompletedTrackDetails")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FedexWebServices::Soap::Track::TrackRequest,
    :schema_name => XSD::QName.new(NsV19, "TrackRequest"),
    :schema_element => [
      ["webAuthenticationDetail", ["FedexWebServices::Soap::Track::WebAuthenticationDetail", XSD::QName.new(NsV19, "WebAuthenticationDetail")]],
      ["clientDetail", ["FedexWebServices::Soap::Track::ClientDetail", XSD::QName.new(NsV19, "ClientDetail")]],
      ["transactionDetail", ["FedexWebServices::Soap::Track::TransactionDetail", XSD::QName.new(NsV19, "TransactionDetail")], [0, 1]],
      ["version", ["FedexWebServices::Soap::Track::VersionId", XSD::QName.new(NsV19, "Version")]],
      ["selectionDetails", ["FedexWebServices::Soap::Track::TrackSelectionDetail[]", XSD::QName.new(NsV19, "SelectionDetails")], [0, nil]],
      ["transactionTimeOutValueInMilliseconds", ["SOAP::SOAPNonNegativeInteger", XSD::QName.new(NsV19, "TransactionTimeOutValueInMilliseconds")], [0, 1]],
      ["processingOptions", ["FedexWebServices::Soap::Track::TrackRequestProcessingOptionType[]", XSD::QName.new(NsV19, "ProcessingOptions")], [0, nil]]
    ]
  )
end

end; end; end
